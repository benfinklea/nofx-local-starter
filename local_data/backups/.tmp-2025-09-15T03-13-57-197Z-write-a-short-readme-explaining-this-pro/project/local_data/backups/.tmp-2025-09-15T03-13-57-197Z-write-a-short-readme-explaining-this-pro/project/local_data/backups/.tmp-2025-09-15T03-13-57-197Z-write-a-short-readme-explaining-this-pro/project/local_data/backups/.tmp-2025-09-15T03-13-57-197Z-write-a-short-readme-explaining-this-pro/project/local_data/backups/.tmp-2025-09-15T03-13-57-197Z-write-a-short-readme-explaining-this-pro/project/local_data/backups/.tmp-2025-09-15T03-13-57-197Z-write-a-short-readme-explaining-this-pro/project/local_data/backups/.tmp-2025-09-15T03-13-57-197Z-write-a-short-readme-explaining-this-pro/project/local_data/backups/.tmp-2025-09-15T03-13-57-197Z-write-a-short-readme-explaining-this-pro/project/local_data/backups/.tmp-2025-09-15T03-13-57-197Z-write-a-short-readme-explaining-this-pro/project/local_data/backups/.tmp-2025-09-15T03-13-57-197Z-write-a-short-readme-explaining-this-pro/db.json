{
  "nofx.run": [
    {
      "id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "tenant_id": "local",
      "plan": {
        "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
        "steps": [
          {
            "name": "typecheck",
            "tool": "gate:typecheck"
          },
          {
            "name": "lint",
            "tool": "gate:lint"
          },
          {
            "name": "unit",
            "tool": "gate:unit"
          },
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "- Preview a plan (no DB writes)",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "overview.md"
            }
          },
          {
            "name": "open pr",
            "tool": "git_pr",
            "inputs": {
              "base": "main",
              "title": "docs: - Preview a plan (no DB writes)",
              "branch": "feat/-preview-a-plan-no-db-wr",
              "reason": "Setting",
              "commits": [
                {
                  "path": "docs/overview.md",
                  "fromStep": "write readme",
                  "artifactName": "overview.md"
                }
              ]
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T04:40:32.031Z",
      "updated_at": "2025-09-14T04:40:32.031Z"
    },
    {
      "id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "tenant_id": "local",
      "plan": {
        "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
        "steps": [
          {
            "name": "typecheck",
            "tool": "gate:typecheck"
          },
          {
            "name": "lint",
            "tool": "gate:lint"
          },
          {
            "name": "unit",
            "tool": "gate:unit"
          },
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "- Preview a plan (no DB writes)",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "overview.md"
            }
          },
          {
            "name": "open pr",
            "tool": "git_pr",
            "inputs": {
              "base": "main",
              "title": "docs: - Preview a plan (no DB writes)",
              "branch": "feat/-preview-a-plan-no-db-wr",
              "reason": "Prompt",
              "commits": [
                {
                  "path": "docs/overview.md",
                  "fromStep": "write readme",
                  "artifactName": "overview.md"
                }
              ]
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T04:42:20.445Z",
      "updated_at": "2025-09-14T04:42:20.445Z"
    },
    {
      "id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "tenant_id": "local",
      "plan": {
        "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
        "steps": [
          {
            "name": "typecheck",
            "tool": "gate:typecheck"
          },
          {
            "name": "lint",
            "tool": "gate:lint"
          },
          {
            "name": "unit",
            "tool": "gate:unit"
          },
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "- Preview a plan (no DB writes)",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "overview.md"
            }
          },
          {
            "name": "open pr",
            "tool": "git_pr",
            "inputs": {
              "base": "main",
              "title": "docs: - Preview a plan (no DB writes)",
              "branch": "feat/-preview-a-plan-no-db-wr",
              "reason": "Prompt",
              "commits": [
                {
                  "path": "docs/overview.md",
                  "fromStep": "write readme",
                  "artifactName": "overview.md"
                }
              ]
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T04:47:32.915Z",
      "updated_at": "2025-09-14T04:47:32.915Z"
    },
    {
      "id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "tenant_id": "local",
      "plan": {
        "goal": "Write a short README about NOFX",
        "steps": [
          {
            "name": "typecheck",
            "tool": "gate:typecheck"
          },
          {
            "name": "lint",
            "tool": "gate:lint"
          },
          {
            "name": "unit",
            "tool": "gate:unit"
          },
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "Write a short README about NOFX",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "README.md"
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T19:28:08.772Z",
      "updated_at": "2025-09-14T19:28:08.772Z"
    },
    {
      "id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "tenant_id": "local",
      "plan": {
        "goal": "write a short readme for NOFX app",
        "steps": [
          {
            "name": "typecheck",
            "tool": "gate:typecheck"
          },
          {
            "name": "lint",
            "tool": "gate:lint"
          },
          {
            "name": "unit",
            "tool": "gate:unit"
          },
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "write a short readme for NOFX app",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "README.md"
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T19:38:46.040Z",
      "updated_at": "2025-09-14T19:38:46.040Z"
    },
    {
      "id": "09f9962e-830e-449d-b08f-4e28dd75c3fc",
      "tenant_id": "local",
      "plan": {
        "goal": "Write a short README explaining this project and how to run it locally.",
        "steps": [
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "Write a short README explaining this project and",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "README.md"
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T19:49:51.853Z",
      "updated_at": "2025-09-14T19:49:51.853Z"
    },
    {
      "id": "b63f7924-2e28-408e-bdc5-d992502b5341",
      "tenant_id": "local",
      "plan": {
        "goal": "Write a short README explaining this project and how to run it locally.",
        "steps": [
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "Write a short README explaining this project and",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "README.md"
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-14T21:43:47.616Z",
      "updated_at": "2025-09-14T21:43:47.616Z"
    },
    {
      "id": "da3f25ed-87a0-4694-bc0a-5697f76af76d",
      "tenant_id": "local",
      "plan": {
        "goal": "Write a short README explaining this project and how to run it locally.",
        "steps": [
          {
            "name": "write readme",
            "tool": "codegen",
            "inputs": {
              "topic": "Write a short README explaining this project and",
              "bullets": [
                "Control plane",
                "Verification",
                "Workers"
              ],
              "filename": "README.md"
            }
          }
        ]
      },
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "created_at": "2025-09-15T02:54:58.382Z",
      "updated_at": "2025-09-15T02:54:58.382Z"
    }
  ],
  "nofx.step": [
    {
      "id": "a1603cc6-5c2b-4e33-84cf-af310becb7cf",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "name": "typecheck",
      "tool": "gate:typecheck",
      "inputs": {},
      "outputs": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        },
        "artifacts": [
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/a1603cc6-5c2b-4e33-84cf-af310becb7cf/gate-artifacts/typecheck.txt",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/a1603cc6-5c2b-4e33-84cf-af310becb7cf/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:40:32.083Z",
      "completed_at": "2025-09-14T04:40:33.555Z",
      "error": null,
      "created_at": "2025-09-14T04:40:32.037Z",
      "updated_at": "2025-09-14T04:40:33.555Z"
    },
    {
      "id": "9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "name": "lint",
      "tool": "gate:lint",
      "inputs": {},
      "outputs": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        },
        "artifacts": [
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-artifacts/eslint.json",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-artifacts/typecheck.txt",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:40:32.082Z",
      "completed_at": "2025-09-14T04:40:34.048Z",
      "error": null,
      "created_at": "2025-09-14T04:40:32.048Z",
      "updated_at": "2025-09-14T04:40:34.048Z"
    },
    {
      "id": "9d823260-8df5-4bab-b465-ee8bddd61f1c",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "- Preview a plan (no DB writes)",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "overview.md"
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:40:34.052Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:40:32.059Z",
      "updated_at": "2025-09-14T04:40:34.052Z"
    },
    {
      "id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "name": "unit",
      "tool": "gate:unit",
      "inputs": {},
      "outputs": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        },
        "artifacts": [
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/coverage-summary.json",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/eslint.json",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/typecheck.txt",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/vitest.txt",
          "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:40:33.561Z",
      "completed_at": "2025-09-14T04:40:35.404Z",
      "error": null,
      "created_at": "2025-09-14T04:40:32.050Z",
      "updated_at": "2025-09-14T04:40:35.404Z"
    },
    {
      "id": "911141b8-8110-44a8-8296-03b576375ed3",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "name": "open pr",
      "tool": "git_pr",
      "inputs": {
        "base": "main",
        "title": "docs: - Preview a plan (no DB writes)",
        "branch": "feat/-preview-a-plan-no-db-wr",
        "reason": "Setting",
        "commits": [
          {
            "path": "docs/overview.md",
            "fromStep": "write readme",
            "artifactName": "overview.md"
          }
        ]
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:40:35.408Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:40:32.063Z",
      "updated_at": "2025-09-14T04:40:35.408Z"
    },
    {
      "id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "name": "typecheck",
      "tool": "gate:typecheck",
      "inputs": {},
      "outputs": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        },
        "artifacts": [
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/coverage-summary.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/eslint.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/typecheck.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/vitest.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:42:20.491Z",
      "completed_at": "2025-09-14T04:42:21.997Z",
      "error": null,
      "created_at": "2025-09-14T04:42:20.449Z",
      "updated_at": "2025-09-14T04:42:21.997Z"
    },
    {
      "id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "name": "lint",
      "tool": "gate:lint",
      "inputs": {},
      "outputs": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        },
        "artifacts": [
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/coverage-summary.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/eslint.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/typecheck.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/vitest.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:42:20.492Z",
      "completed_at": "2025-09-14T04:42:22.528Z",
      "error": null,
      "created_at": "2025-09-14T04:42:20.462Z",
      "updated_at": "2025-09-14T04:42:22.528Z"
    },
    {
      "id": "369e04df-8fd0-4196-bdcc-2338ed38ea43",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "- Preview a plan (no DB writes)",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "overview.md"
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:42:22.532Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:42:20.470Z",
      "updated_at": "2025-09-14T04:42:22.532Z"
    },
    {
      "id": "c84f7243-a631-4d38-9d3c-6e6535bf2727",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "name": "open pr",
      "tool": "git_pr",
      "inputs": {
        "base": "main",
        "title": "docs: - Preview a plan (no DB writes)",
        "branch": "feat/-preview-a-plan-no-db-wr",
        "reason": "Prompt",
        "commits": [
          {
            "path": "docs/overview.md",
            "fromStep": "write readme",
            "artifactName": "overview.md"
          }
        ]
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:42:23.199Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:42:20.474Z",
      "updated_at": "2025-09-14T04:42:23.199Z"
    },
    {
      "id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "name": "unit",
      "tool": "gate:unit",
      "inputs": {},
      "outputs": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        },
        "artifacts": [
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/coverage-summary.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/eslint.json",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/typecheck.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/vitest.txt",
          "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:42:22.002Z",
      "completed_at": "2025-09-14T04:42:23.195Z",
      "error": null,
      "created_at": "2025-09-14T04:42:20.465Z",
      "updated_at": "2025-09-14T04:42:23.195Z"
    },
    {
      "id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "name": "typecheck",
      "tool": "gate:typecheck",
      "inputs": {},
      "outputs": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        },
        "artifacts": [
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/coverage-summary.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/eslint.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/typecheck.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/vitest.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:47:32.945Z",
      "completed_at": "2025-09-14T04:47:34.318Z",
      "error": null,
      "created_at": "2025-09-14T04:47:32.919Z",
      "updated_at": "2025-09-14T04:47:34.318Z"
    },
    {
      "id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "name": "lint",
      "tool": "gate:lint",
      "inputs": {},
      "outputs": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        },
        "artifacts": [
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/coverage-summary.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/eslint.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/typecheck.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/vitest.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:47:32.945Z",
      "completed_at": "2025-09-14T04:47:34.922Z",
      "error": null,
      "created_at": "2025-09-14T04:47:32.928Z",
      "updated_at": "2025-09-14T04:47:34.922Z"
    },
    {
      "id": "d8307b01-3f67-42fb-ae3b-21c0140f8f6a",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "- Preview a plan (no DB writes)",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "overview.md"
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:47:34.927Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:47:32.933Z",
      "updated_at": "2025-09-14T04:47:34.927Z"
    },
    {
      "id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "name": "unit",
      "tool": "gate:unit",
      "inputs": {},
      "outputs": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        },
        "artifacts": [
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/coverage-summary.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/eslint.json",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/typecheck.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/vitest.txt",
          "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-summary.json"
        ]
      },
      "status": "succeeded",
      "started_at": "2025-09-14T04:47:34.322Z",
      "completed_at": "2025-09-14T04:47:35.466Z",
      "error": null,
      "created_at": "2025-09-14T04:47:32.930Z",
      "updated_at": "2025-09-14T04:47:35.466Z"
    },
    {
      "id": "a8b9c42a-20d5-41e7-9ec7-b2997da84a74",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "name": "open pr",
      "tool": "git_pr",
      "inputs": {
        "base": "main",
        "title": "docs: - Preview a plan (no DB writes)",
        "branch": "feat/-preview-a-plan-no-db-wr",
        "reason": "Prompt",
        "commits": [
          {
            "path": "docs/overview.md",
            "fromStep": "write readme",
            "artifactName": "overview.md"
          }
        ]
      },
      "outputs": null,
      "status": "running",
      "started_at": "2025-09-14T04:47:35.470Z",
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T04:47:32.936Z",
      "updated_at": "2025-09-14T04:47:35.470Z"
    },
    {
      "id": "5ec0c268-45af-4cd0-82e3-e9dd1f24690a",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "name": "typecheck",
      "tool": "gate:typecheck",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:28:08.775Z",
      "updated_at": "2025-09-14T19:28:08.775Z"
    },
    {
      "id": "3ab893a0-b1b8-4362-bf27-4e9aea1376a9",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "name": "lint",
      "tool": "gate:lint",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:28:08.777Z",
      "updated_at": "2025-09-14T19:28:08.777Z"
    },
    {
      "id": "cbf18648-bcff-4f07-b96d-edd1735d92d1",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "name": "unit",
      "tool": "gate:unit",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:28:08.779Z",
      "updated_at": "2025-09-14T19:28:08.779Z"
    },
    {
      "id": "b290f4f1-fd56-4f73-ae07-a73675bb535d",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "Write a short README about NOFX",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "README.md"
      },
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:28:08.781Z",
      "updated_at": "2025-09-14T19:28:08.781Z"
    },
    {
      "id": "bdb4ed3c-b526-47d6-9d24-0ac9d3763225",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "name": "typecheck",
      "tool": "gate:typecheck",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:38:46.041Z",
      "updated_at": "2025-09-14T19:38:46.041Z"
    },
    {
      "id": "3992663d-1b19-4255-ba6c-935cfe66d22d",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "name": "lint",
      "tool": "gate:lint",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:38:46.153Z",
      "updated_at": "2025-09-14T19:38:46.153Z"
    },
    {
      "id": "22f84831-aed6-4e58-a10e-c4f55be91f9a",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "name": "unit",
      "tool": "gate:unit",
      "inputs": {},
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:38:46.154Z",
      "updated_at": "2025-09-14T19:38:46.154Z"
    },
    {
      "id": "2c145e77-059f-4616-90fb-894975d3a820",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "write a short readme for NOFX app",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "README.md"
      },
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:38:46.156Z",
      "updated_at": "2025-09-14T19:38:46.156Z"
    },
    {
      "id": "523c9dcf-17a5-40f0-a385-9f34b06525b9",
      "tenant_id": "local",
      "run_id": "09f9962e-830e-449d-b08f-4e28dd75c3fc",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "Write a short README explaining this project and",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "README.md"
      },
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T19:49:51.856Z",
      "updated_at": "2025-09-14T19:49:51.856Z"
    },
    {
      "id": "9720fafb-a02d-4d4b-84a0-0177909fa8ee",
      "tenant_id": "local",
      "run_id": "b63f7924-2e28-408e-bdc5-d992502b5341",
      "name": "write readme",
      "tool": "codegen",
      "inputs": {
        "topic": "Write a short README explaining this project and",
        "bullets": [
          "Control plane",
          "Verification",
          "Workers"
        ],
        "filename": "README.md"
      },
      "outputs": null,
      "status": "queued",
      "started_at": null,
      "completed_at": null,
      "error": null,
      "created_at": "2025-09-14T21:43:47.619Z",
      "updated_at": "2025-09-14T21:43:47.619Z"
    }
  ],
  "nofx.event": [
    {
      "id": "3e9ea19e-f2c9-44c5-82ba-1011865abd35",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
          "steps": [
            {
              "name": "typecheck",
              "tool": "gate:typecheck"
            },
            {
              "name": "lint",
              "tool": "gate:lint"
            },
            {
              "name": "unit",
              "tool": "gate:unit"
            },
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "- Preview a plan (no DB writes)",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "overview.md"
              }
            },
            {
              "name": "open pr",
              "tool": "git_pr",
              "inputs": {
                "base": "main",
                "title": "docs: - Preview a plan (no DB writes)",
                "branch": "feat/-preview-a-plan-no-db-wr",
                "reason": "Setting",
                "commits": [
                  {
                    "path": "docs/overview.md",
                    "fromStep": "write readme",
                    "artifactName": "overview.md"
                  }
                ]
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T04:40:32.034Z"
    },
    {
      "id": "e0a9e3e9-1848-4a09-b2a0-2a373d789730",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.enqueued",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:40:32.038Z"
    },
    {
      "id": "a1b4b20c-d52c-4e59-b6d4-96161ce7626f",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.enqueued",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:40:32.049Z"
    },
    {
      "id": "c12e98d9-5c20-47bb-b3b3-0e87a057cb2d",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.enqueued",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:40:32.051Z"
    },
    {
      "id": "dece81e3-a7cc-4766-bd33-2885563b0a13",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:40:32.060Z"
    },
    {
      "id": "bb34d249-7ef5-4521-ace5-47cae05b1369",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.enqueued",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:40:32.064Z"
    },
    {
      "id": "5a1d7449-967a-4153-b191-d0ac1f9ba595",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.started",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:40:32.084Z"
    },
    {
      "id": "826b49d9-e31a-4ca0-8123-bc1162e09e51",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.started",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:40:32.085Z"
    },
    {
      "id": "9e6970e2-d030-4cdf-9c53-f2208988900c",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.finished",
      "payload": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:40:33.557Z"
    },
    {
      "id": "118082ec-65c5-4a89-bee1-dbad4c306a30",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.started",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:40:33.561Z"
    },
    {
      "id": "47729bec-39aa-47dd-af72-2096def9640b",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.finished",
      "payload": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:40:34.049Z"
    },
    {
      "id": "17122a14-dc0d-4619-9aa4-db2d6a9d170f",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.started",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:40:34.053Z"
    },
    {
      "id": "c3597765-9753-4d5d-8d16-0b0b70319fac",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.finished",
      "payload": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        }
      },
      "created_at": "2025-09-14T04:40:35.406Z"
    },
    {
      "id": "2b46a2fc-948f-42fd-a639-06d68008671e",
      "tenant_id": "local",
      "run_id": "fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7",
      "type": "step.started",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:40:35.409Z"
    },
    {
      "id": "0ae5573f-7825-4b43-b0b7-89d3ec921533",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
          "steps": [
            {
              "name": "typecheck",
              "tool": "gate:typecheck"
            },
            {
              "name": "lint",
              "tool": "gate:lint"
            },
            {
              "name": "unit",
              "tool": "gate:unit"
            },
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "- Preview a plan (no DB writes)",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "overview.md"
              }
            },
            {
              "name": "open pr",
              "tool": "git_pr",
              "inputs": {
                "base": "main",
                "title": "docs: - Preview a plan (no DB writes)",
                "branch": "feat/-preview-a-plan-no-db-wr",
                "reason": "Prompt",
                "commits": [
                  {
                    "path": "docs/overview.md",
                    "fromStep": "write readme",
                    "artifactName": "overview.md"
                  }
                ]
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T04:42:20.448Z"
    },
    {
      "id": "4b73e316-0a37-43b7-bcb7-12b52babc135",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.enqueued",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:42:20.451Z"
    },
    {
      "id": "c60506c2-70d8-4869-9a93-e76817ed0f56",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.enqueued",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:42:20.463Z"
    },
    {
      "id": "0281fa80-a12e-4847-bc64-1a68fca6e0b6",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.enqueued",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:42:20.467Z"
    },
    {
      "id": "75debb22-7b9c-4277-a230-57be15c7d624",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:42:20.471Z"
    },
    {
      "id": "73bd76b8-9d77-4fd4-8ad4-2e74f213fa39",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.enqueued",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:42:20.476Z"
    },
    {
      "id": "1f1856bd-1bdb-4688-a3a3-c104756bc4d1",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.started",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:42:20.493Z"
    },
    {
      "id": "4af7725e-2d16-4a5e-b7d8-1ceb965ad02a",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.started",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:42:20.493Z"
    },
    {
      "id": "41f83339-d5d4-4f89-8b75-8facee661e15",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.finished",
      "payload": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:42:21.998Z"
    },
    {
      "id": "3e326abe-c44d-45ae-9a55-d04ad80212ae",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.started",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:42:22.003Z"
    },
    {
      "id": "c48f6ab7-da10-4358-8e3c-3c2291b0f26a",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.finished",
      "payload": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:42:22.529Z"
    },
    {
      "id": "86d8a59c-bc97-4410-8d31-ba4fba451399",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.started",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:42:22.533Z"
    },
    {
      "id": "acd475d1-9c1f-4267-9cc0-e62657c8112a",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.finished",
      "payload": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        }
      },
      "created_at": "2025-09-14T04:42:23.196Z"
    },
    {
      "id": "36fd1aa0-d729-4d52-a2c3-141eedf40002",
      "tenant_id": "local",
      "run_id": "f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e",
      "type": "step.started",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:42:23.200Z"
    },
    {
      "id": "78d8d6ce-c439-4dc6-aa97-43fe0c18f9ad",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "- Preview a plan (no DB writes)\n    curl -s -X POST http://localhost:3000/runs/preview \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Create docs/overview.md explaining models and pricing. Open a PR.\",\n    \"quality\": true,\n    \"openPr\": true\n    }\n    }' | jq\n\n    Expect: JSON with plan.steps including typecheck, lint, unit (when enabled) + a codegen step, and an optional git_pr step.\n  - Create a run from Standard\n    curl -s -X POST http://localhost:3000/runs \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n    \"standard\": {\n    \"prompt\": \"Write README with bullets: Control plane, Verification, Workers\",\n    \"quality\": true,\n    \"openPr\": false\n    }\n    }' | jq\n\n    Expect: { \"id\": \"<RUN_ID>\", \"status\": \"queued\" }\n  - Check run status and timeline\n    RUN_ID=<copy-the-id>\n    curl -s http://localhost:3000/runs/$RUN_ID | jq\n    curl -s http://localhost:3000/runs/$RUN_ID/timeline | jq\n\n    Expect: step.enqueued → step.started → step.finished events, and an artifact path under runs/<RUN_ID>/steps/<STEP_ID>/README.md\n  in Supabase Storage.",
          "steps": [
            {
              "name": "typecheck",
              "tool": "gate:typecheck"
            },
            {
              "name": "lint",
              "tool": "gate:lint"
            },
            {
              "name": "unit",
              "tool": "gate:unit"
            },
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "- Preview a plan (no DB writes)",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "overview.md"
              }
            },
            {
              "name": "open pr",
              "tool": "git_pr",
              "inputs": {
                "base": "main",
                "title": "docs: - Preview a plan (no DB writes)",
                "branch": "feat/-preview-a-plan-no-db-wr",
                "reason": "Prompt",
                "commits": [
                  {
                    "path": "docs/overview.md",
                    "fromStep": "write readme",
                    "artifactName": "overview.md"
                  }
                ]
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T04:47:32.917Z"
    },
    {
      "id": "182ce2fc-1807-474b-90a0-cf29c82b797e",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.enqueued",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:47:32.920Z"
    },
    {
      "id": "18ddd1ae-7709-4ef8-bf33-fbbdde2a600e",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.enqueued",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:47:32.929Z"
    },
    {
      "id": "c5a62c06-6780-4a43-9a7c-7254f1de3246",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.enqueued",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:47:32.931Z"
    },
    {
      "id": "17baf88c-9283-450f-92b3-4538a34bebd0",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:47:32.934Z"
    },
    {
      "id": "aae6b314-cf65-4f7c-8ffc-451591eac9ba",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.enqueued",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:47:32.937Z"
    },
    {
      "id": "08f13c33-ae38-4901-af80-faec8acc2cef",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.started",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T04:47:32.946Z"
    },
    {
      "id": "b02bbbd6-550b-4962-8a05-96691bf788d2",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.started",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T04:47:32.947Z"
    },
    {
      "id": "4bf43b40-cfa0-4c36-b212-8b096b280a41",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.finished",
      "payload": {
        "gate": "typecheck",
        "summary": {
          "gate": "typecheck",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:47:34.320Z"
    },
    {
      "id": "68501a7d-e5f4-4657-af9d-416d7e63620f",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.started",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T04:47:34.323Z"
    },
    {
      "id": "b68d7afd-eabd-4697-845c-e50d535098ed",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.finished",
      "payload": {
        "gate": "lint",
        "summary": {
          "gate": "lint",
          "passed": true
        }
      },
      "created_at": "2025-09-14T04:47:34.924Z"
    },
    {
      "id": "5f7ed438-b891-4f37-b9c6-5df6ca040123",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.started",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T04:47:34.927Z"
    },
    {
      "id": "0b9a7c9c-0ee2-42a8-a74b-8f0082d58103",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.finished",
      "payload": {
        "gate": "unit",
        "summary": {
          "gate": "unit",
          "passed": true,
          "changedLinesCoverage": 1
        }
      },
      "created_at": "2025-09-14T04:47:35.467Z"
    },
    {
      "id": "22720302-1243-469f-b59b-7783a2f0f067",
      "tenant_id": "local",
      "run_id": "a654342a-3fc5-4aba-b7be-eb7a858da49a",
      "type": "step.started",
      "payload": {
        "name": "open pr",
        "tool": "git_pr"
      },
      "created_at": "2025-09-14T04:47:35.471Z"
    },
    {
      "id": "8cbebf1b-61e0-4f11-8b4f-2ecba0b86e28",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "Write a short README about NOFX",
          "steps": [
            {
              "name": "typecheck",
              "tool": "gate:typecheck"
            },
            {
              "name": "lint",
              "tool": "gate:lint"
            },
            {
              "name": "unit",
              "tool": "gate:unit"
            },
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "Write a short README about NOFX",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "README.md"
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T19:28:08.774Z"
    },
    {
      "id": "8672950c-28ff-49eb-a32b-ac8e350dc001",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "type": "step.enqueued",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T19:28:08.776Z"
    },
    {
      "id": "64bca2df-7272-4ef3-8dc5-ae3317667935",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "type": "step.enqueued",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T19:28:08.778Z"
    },
    {
      "id": "fe93a737-1684-433f-b342-edcc39225bb8",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "type": "step.enqueued",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T19:28:08.780Z"
    },
    {
      "id": "360e593b-c58b-46bb-a6e2-41d62f814cbc",
      "tenant_id": "local",
      "run_id": "a20b9059-594c-4495-8be0-b67209eaecf2",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T19:28:08.782Z"
    },
    {
      "id": "9ff006d1-dbb2-48a7-b5cb-9b70a8e75a06",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "write a short readme for NOFX app",
          "steps": [
            {
              "name": "typecheck",
              "tool": "gate:typecheck"
            },
            {
              "name": "lint",
              "tool": "gate:lint"
            },
            {
              "name": "unit",
              "tool": "gate:unit"
            },
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "write a short readme for NOFX app",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "README.md"
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T19:38:46.041Z"
    },
    {
      "id": "1d81ffe2-7d28-4959-ad04-05c2eaafca68",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "type": "step.enqueued",
      "payload": {
        "name": "typecheck",
        "tool": "gate:typecheck"
      },
      "created_at": "2025-09-14T19:38:46.042Z"
    },
    {
      "id": "043d34f4-9445-47e4-9a41-7ade138e932e",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "type": "step.enqueued",
      "payload": {
        "name": "lint",
        "tool": "gate:lint"
      },
      "created_at": "2025-09-14T19:38:46.154Z"
    },
    {
      "id": "9caeed27-7824-46c4-a803-51a29e8e13cc",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "type": "step.enqueued",
      "payload": {
        "name": "unit",
        "tool": "gate:unit"
      },
      "created_at": "2025-09-14T19:38:46.155Z"
    },
    {
      "id": "2a1932e0-2ec3-4970-b3ae-a820adb9a326",
      "tenant_id": "local",
      "run_id": "541f1cb0-e434-40cb-abfd-62ffd492cd9f",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T19:38:46.157Z"
    },
    {
      "id": "379b49f8-5fc7-4e49-aca7-c5061f8b87e0",
      "tenant_id": "local",
      "run_id": "09f9962e-830e-449d-b08f-4e28dd75c3fc",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "Write a short README explaining this project and how to run it locally.",
          "steps": [
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "Write a short README explaining this project and",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "README.md"
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T19:49:51.854Z"
    },
    {
      "id": "12f1c20f-e39f-4eab-ab1e-81f9cce99e62",
      "tenant_id": "local",
      "run_id": "09f9962e-830e-449d-b08f-4e28dd75c3fc",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T19:49:51.857Z"
    },
    {
      "id": "4d3d4703-89dc-4869-b746-98179f3a92db",
      "tenant_id": "local",
      "run_id": "b63f7924-2e28-408e-bdc5-d992502b5341",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "Write a short README explaining this project and how to run it locally.",
          "steps": [
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "Write a short README explaining this project and",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "README.md"
              }
            }
          ]
        }
      },
      "created_at": "2025-09-14T21:43:47.617Z"
    },
    {
      "id": "e54cca7b-ce46-4032-ab44-39d877175f2d",
      "tenant_id": "local",
      "run_id": "b63f7924-2e28-408e-bdc5-d992502b5341",
      "type": "step.enqueued",
      "payload": {
        "name": "write readme",
        "tool": "codegen"
      },
      "created_at": "2025-09-14T21:43:47.621Z"
    },
    {
      "id": "df3f4d06-76ef-48cb-8d95-b9c97eafc585",
      "tenant_id": "local",
      "run_id": "da3f25ed-87a0-4694-bc0a-5697f76af76d",
      "type": "run.created",
      "payload": {
        "plan": {
          "goal": "Write a short README explaining this project and how to run it locally.",
          "steps": [
            {
              "name": "write readme",
              "tool": "codegen",
              "inputs": {
                "topic": "Write a short README explaining this project and",
                "bullets": [
                  "Control plane",
                  "Verification",
                  "Workers"
                ],
                "filename": "README.md"
              }
            }
          ]
        }
      },
      "created_at": "2025-09-15T02:54:58.384Z"
    }
  ],
  "nofx.gate": [],
  "nofx.artifact": [
    {
      "id": "562c195c-1ec0-4c2c-9143-64209b537d15",
      "tenant_id": "local",
      "step_id": "a1603cc6-5c2b-4e33-84cf-af310becb7cf",
      "type": "text/plain",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/a1603cc6-5c2b-4e33-84cf-af310becb7cf/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:40:33.529Z"
    },
    {
      "id": "d6895af8-9930-4ba7-82a7-02d03dc52b7f",
      "tenant_id": "local",
      "step_id": "a1603cc6-5c2b-4e33-84cf-af310becb7cf",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/a1603cc6-5c2b-4e33-84cf-af310becb7cf/gate-summary.json",
      "metadata": {
        "gate": "typecheck",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:40:33.548Z"
    },
    {
      "id": "97d13b3a-a4d0-46e5-8260-a30ddfda3799",
      "tenant_id": "local",
      "step_id": "9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:40:34.009Z"
    },
    {
      "id": "9d30f0cc-89eb-40ba-84a1-e0b382a23b89",
      "tenant_id": "local",
      "step_id": "9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75",
      "type": "text/plain",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:40:34.025Z"
    },
    {
      "id": "7e465d9f-0214-462e-aab4-2df9d5ccbc2e",
      "tenant_id": "local",
      "step_id": "9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/9a845d5d-8e25-4ae1-bf7c-c724bdcf3b75/gate-summary.json",
      "metadata": {
        "gate": "lint",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:40:34.042Z"
    },
    {
      "id": "84cb468a-99d0-483d-a972-39f6505732b2",
      "tenant_id": "local",
      "step_id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:40:35.289Z"
    },
    {
      "id": "b5fbed21-099b-4385-95a3-7bb49b64737d",
      "tenant_id": "local",
      "step_id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:40:35.346Z"
    },
    {
      "id": "f3116d59-8eb9-4c0c-8459-90a042125ad1",
      "tenant_id": "local",
      "step_id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "type": "text/plain",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:40:35.363Z"
    },
    {
      "id": "7ab6a2f6-b49e-4083-90c0-bdd947974e76",
      "tenant_id": "local",
      "step_id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "type": "text/plain",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:40:35.381Z"
    },
    {
      "id": "9b6c86d7-9955-4232-a34b-f4f37e307bed",
      "tenant_id": "local",
      "step_id": "2eb37f00-bcef-4911-950a-ef72deb238e3",
      "type": "application/json",
      "path": "runs/fa5ce9b0-acb4-465b-b2af-bc7656ef1ea7/steps/2eb37f00-bcef-4911-950a-ef72deb238e3/gate-summary.json",
      "metadata": {
        "gate": "unit",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:40:35.397Z"
    },
    {
      "id": "5089b417-f419-4076-95cc-7ed42ad0dfa8",
      "tenant_id": "local",
      "step_id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:42:21.916Z"
    },
    {
      "id": "2b6fc03a-9ad1-451b-ab4f-47552ae3dcbb",
      "tenant_id": "local",
      "step_id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:42:21.936Z"
    },
    {
      "id": "933e8058-3e97-4b6e-aa91-085332954410",
      "tenant_id": "local",
      "step_id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:42:21.955Z"
    },
    {
      "id": "075c4729-4802-4b08-9599-00caad62ab8c",
      "tenant_id": "local",
      "step_id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:42:21.973Z"
    },
    {
      "id": "374e6990-5134-428e-8785-965700249934",
      "tenant_id": "local",
      "step_id": "ca5d7f77-28ee-4083-98db-02951ddf6e75",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/ca5d7f77-28ee-4083-98db-02951ddf6e75/gate-summary.json",
      "metadata": {
        "gate": "typecheck",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:42:21.990Z"
    },
    {
      "id": "3441a998-1667-4040-9fd4-05979de4726a",
      "tenant_id": "local",
      "step_id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:42:22.414Z"
    },
    {
      "id": "c4d4939a-d31b-4fc9-a76f-2d1d28d850a9",
      "tenant_id": "local",
      "step_id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:42:22.471Z"
    },
    {
      "id": "2269a300-93f1-474c-9577-023e4be9d87b",
      "tenant_id": "local",
      "step_id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:42:22.488Z"
    },
    {
      "id": "ce39e62c-2ca3-4a30-808e-9387a2da6812",
      "tenant_id": "local",
      "step_id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:42:22.505Z"
    },
    {
      "id": "eba0000b-aade-482b-8d10-9492cafbfcb6",
      "tenant_id": "local",
      "step_id": "98eaf7be-35cf-45dc-8579-14ac6d4fdd53",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/98eaf7be-35cf-45dc-8579-14ac6d4fdd53/gate-summary.json",
      "metadata": {
        "gate": "lint",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:42:22.521Z"
    },
    {
      "id": "82858ea4-1357-4676-a036-116b91ca014d",
      "tenant_id": "local",
      "step_id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:42:23.087Z"
    },
    {
      "id": "dcb7b0dc-4b1e-4304-936e-4f954c5c45b0",
      "tenant_id": "local",
      "step_id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:42:23.143Z"
    },
    {
      "id": "965cd524-eba1-47c8-8a66-6a5731659839",
      "tenant_id": "local",
      "step_id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:42:23.158Z"
    },
    {
      "id": "883a08b5-30e4-4487-a686-711aa42ef572",
      "tenant_id": "local",
      "step_id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "type": "text/plain",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:42:23.175Z"
    },
    {
      "id": "6f967ca1-9285-406f-8c82-6ae8b2b400fb",
      "tenant_id": "local",
      "step_id": "d0a96aa1-b142-4d51-a47c-c868b7871150",
      "type": "application/json",
      "path": "runs/f7aa1b8e-c66c-4b36-bd01-7d7c7d1e603e/steps/d0a96aa1-b142-4d51-a47c-c868b7871150/gate-summary.json",
      "metadata": {
        "gate": "unit",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:42:23.190Z"
    },
    {
      "id": "28feb302-6a76-485c-b490-244ee1a60a2d",
      "tenant_id": "local",
      "step_id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:47:34.242Z"
    },
    {
      "id": "48a17695-c724-4112-bdc2-8153ab7c78f8",
      "tenant_id": "local",
      "step_id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:47:34.262Z"
    },
    {
      "id": "95a5af17-47af-4853-b0fa-8682c6adb043",
      "tenant_id": "local",
      "step_id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:47:34.279Z"
    },
    {
      "id": "e5c80eb4-f1a0-48f1-9506-97dbbe2116af",
      "tenant_id": "local",
      "step_id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "typecheck"
      },
      "created_at": "2025-09-14T04:47:34.296Z"
    },
    {
      "id": "47626323-11fe-416c-9803-93fea3ab9166",
      "tenant_id": "local",
      "step_id": "95de0fc3-561a-4ac4-9696-5b1603748b1b",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/95de0fc3-561a-4ac4-9696-5b1603748b1b/gate-summary.json",
      "metadata": {
        "gate": "typecheck",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:47:34.312Z"
    },
    {
      "id": "88ebaf0b-3993-47d2-b068-8b47bc53bc1f",
      "tenant_id": "local",
      "step_id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:47:34.848Z"
    },
    {
      "id": "c1d00ba6-04c6-48e5-895e-b9129c18cbc8",
      "tenant_id": "local",
      "step_id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:47:34.867Z"
    },
    {
      "id": "9fe73299-a4cd-4dec-add7-331df5332353",
      "tenant_id": "local",
      "step_id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:47:34.884Z"
    },
    {
      "id": "609e2ae3-53af-4103-bc60-304b84bef249",
      "tenant_id": "local",
      "step_id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "lint"
      },
      "created_at": "2025-09-14T04:47:34.899Z"
    },
    {
      "id": "c2f59f3f-16a5-463c-a161-28e12ab5ef12",
      "tenant_id": "local",
      "step_id": "5a42c33d-ca05-4559-8479-37aafefc9b33",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/5a42c33d-ca05-4559-8479-37aafefc9b33/gate-summary.json",
      "metadata": {
        "gate": "lint",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:47:34.916Z"
    },
    {
      "id": "3f3da23b-3e12-49f6-8d2d-58427d985096",
      "tenant_id": "local",
      "step_id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/coverage-summary.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:47:35.390Z"
    },
    {
      "id": "67939ee0-6617-49f6-899d-ea797c8bb5e4",
      "tenant_id": "local",
      "step_id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/eslint.json",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:47:35.410Z"
    },
    {
      "id": "fe747b1d-ec62-4b39-aca2-965c55a969a6",
      "tenant_id": "local",
      "step_id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/typecheck.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:47:35.428Z"
    },
    {
      "id": "d74ef145-e41b-4d31-942a-468563732eea",
      "tenant_id": "local",
      "step_id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "type": "text/plain",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-artifacts/vitest.txt",
      "metadata": {
        "gate": "unit"
      },
      "created_at": "2025-09-14T04:47:35.446Z"
    },
    {
      "id": "07d4cec2-abd6-43b0-8a5c-ce36c0f2d8c4",
      "tenant_id": "local",
      "step_id": "a7718ca9-6dd9-4b75-9967-adc559661d65",
      "type": "application/json",
      "path": "runs/a654342a-3fc5-4aba-b7be-eb7a858da49a/steps/a7718ca9-6dd9-4b75-9967-adc559661d65/gate-summary.json",
      "metadata": {
        "gate": "unit",
        "kind": "summary"
      },
      "created_at": "2025-09-14T04:47:35.460Z"
    }
  ],
  "nofx.settings": [
    {
      "id": "default",
      "tenant_id": "local",
      "approvals": {
        "dbWrites": "dangerous",
        "allowWaive": true
      },
      "gates": {
        "lint": true,
        "unit": true,
        "typecheck": true,
        "coverageThreshold": 0.9
      },
      "created_at": "2025-09-13T23:51:10.189Z",
      "updated_at": "2025-09-14T17:41:21.663Z",
      "llm": {
        "order": {
          "docs": [
            "gemini",
            "anthropic",
            "openai"
          ],
          "codegen": [
            "openai",
            "anthropic",
            "gemini"
          ],
          "reasoning": [
            "anthropic",
            "openai",
            "gemini"
          ]
        },
        "pricing": {},
        "providers": {},
        "modelOrder": {
          "docs": [
            "gemini-2.5-pro",
            "gpt-5-mini"
          ],
          "codegen": [
            "gpt-5",
            "sonnet-4",
            "opus-4.1"
          ],
          "reasoning": [
            "opus-4.1",
            "gpt-5",
            "claude-4-sonnet"
          ]
        }
      },
      "ops": {}
    }
  ],
  "nofx.model": [
    {
      "id": "1c29046e-2eba-4563-9c09-eac1d246c25f",
      "tenant_id": "local",
      "name": "opus-4.1",
      "display_name": "Claude Opus 4.1",
      "provider": "anthropic",
      "kind": "anthropic",
      "base_url": null,
      "input_per_1m": "15",
      "output_per_1m": "75",
      "context_tokens": 200000,
      "max_output_tokens": null,
      "active": true,
      "metadata": {},
      "created_at": "2025-09-14T00:19:41.835Z",
      "updated_at": "2025-09-14T00:19:41.835Z"
    },
    {
      "id": "5ba4cfa8-311f-4ef9-9de4-8eab59eaa7c1",
      "tenant_id": "local",
      "name": "sonnet-4",
      "display_name": "sonnet-4",
      "provider": "anthropic",
      "kind": "anthropic",
      "base_url": null,
      "input_per_1m": "3",
      "output_per_1m": "15",
      "context_tokens": 1000000,
      "max_output_tokens": 64000,
      "active": true,
      "metadata": {},
      "created_at": "2025-09-14T00:19:41.836Z",
      "updated_at": "2025-09-14T00:19:41.836Z"
    },
    {
      "id": "1fc3dd0c-1391-4912-83a8-7ced976edadc",
      "tenant_id": "local",
      "name": "gpt-5",
      "display_name": "gpt-5",
      "provider": "openai",
      "kind": "openai",
      "base_url": null,
      "input_per_1m": "1.25",
      "output_per_1m": "10",
      "context_tokens": 400000,
      "max_output_tokens": 128000,
      "active": true,
      "metadata": {},
      "created_at": "2025-09-14T00:34:39.110Z",
      "updated_at": "2025-09-14T00:34:39.110Z"
    },
    {
      "id": "f72e1502-fa96-4b79-9600-64d5739dde8a",
      "tenant_id": "local",
      "name": "gpt-5-mini",
      "display_name": "gpt-5-mini",
      "provider": "openai",
      "kind": "openai",
      "base_url": null,
      "input_per_1m": "0.25",
      "output_per_1m": "2",
      "context_tokens": 400000,
      "max_output_tokens": 128000,
      "active": true,
      "metadata": {},
      "created_at": "2025-09-14T00:34:39.112Z",
      "updated_at": "2025-09-14T00:34:39.112Z"
    },
    {
      "id": "e4cdf396-3bcf-438b-b207-28836da3042d",
      "tenant_id": "local",
      "name": "gpt-5-nano",
      "display_name": "gpt-5-nano",
      "provider": "openai",
      "kind": "openai",
      "base_url": null,
      "input_per_1m": "0.05",
      "output_per_1m": "0.4",
      "context_tokens": 400000,
      "max_output_tokens": 128000,
      "active": true,
      "metadata": {},
      "created_at": "2025-09-14T00:34:39.106Z",
      "updated_at": "2025-09-14T00:34:39.106Z"
    }
  ]
}
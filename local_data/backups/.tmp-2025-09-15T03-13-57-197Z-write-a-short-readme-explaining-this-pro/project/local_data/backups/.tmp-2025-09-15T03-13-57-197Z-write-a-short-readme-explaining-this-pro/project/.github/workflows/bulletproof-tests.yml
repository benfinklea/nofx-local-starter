name: Bulletproof Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1

    - name: Start Supabase
      run: supabase start

    - name: Run migrations
      run: supabase db reset

    - name: Run integration tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        REDIS_URL: redis://localhost:6379
      run: npm run test:integration

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Setup services
      run: |
        docker-compose up -d
        npm run dev &
        sleep 10

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Run security tests
      run: npm run test:security

    - name: Run npm audit
      run: npm audit --audit-level=moderate

    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'nofx-local-starter'
        path: '.'
        format: 'HTML'

    - name: Upload dependency check results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/

  performance-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Setup services
      run: |
        docker-compose up -d
        npm run dev &
        sleep 10

    - name: Run performance tests
      run: npm run test:performance

    - name: Run stress tests
      run: npm run test:stress
      continue-on-error: true

    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: artillery-report.html

  chaos-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Setup services
      run: |
        docker-compose up -d
        npm run dev &
        sleep 10

    - name: Run chaos tests
      run: npm run test:chaos
      continue-on-error: true

    - name: Collect chaos test results
      run: |
        echo "Chaos tests completed. Check logs for details."

  bulletproof-validation:
    needs: [unit-tests, integration-tests, e2e-tests, security-tests, performance-tests]
    runs-on: ubuntu-latest

    steps:
    - name: Validate all tests passed
      run: |
        echo "âœ… All bulletproof tests passed!"
        echo "The system is production-ready and resilient."

> nofx-local-starter@0.1.0 test
> jest --coverage --forceExit --detectOpenHandles

FAIL tests/integration/load-concurrent-operations.test.ts (32.445 s)
  ‚óè Console

    console.log
      üìä Concurrent Database Queries (50 queries):
        Success Rate: 100.00%
        Average Time: 74.96ms

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:227:15)

    console.warn
      ‚ö†Ô∏è  Queue tests skipped - queue not available

      274 |       } catch (error) {
      275 |         // Queue may not be available in test environment
    > 276 |         console.warn('‚ö†Ô∏è  Queue tests skipped - queue not available');
          |                 ^
      277 |       }
      278 |     }, 30000);
      279 |   });

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:276:17)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Concurrent API Requests ‚Ä∫ should handle 100 concurrent health check requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.99
    Received:   0

      66 |
      67 |       // Assertions
    > 68 |       expect(successRate).toBeGreaterThan(0.99); // 99% success rate
         |                           ^
      69 |       expect(p95Duration).toBeLessThan(1000); // P95 < 1 second
      70 |       expect(avgDuration).toBeLessThan(500); // Average < 500ms
      71 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:68:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Concurrent API Requests ‚Ä∫ should handle concurrent run creation requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.9
    Received:   0

      118 |
      119 |       // Assertions
    > 120 |       expect(successRate).toBeGreaterThan(0.90); // 90% success rate
          |                           ^
      121 |       expect(metrics.getP95()).toBeLessThan(3000); // P95 < 3 seconds
      122 |       expect(metrics.getAverage()).toBeLessThan(2000); // Average < 2 seconds
      123 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:120:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Sustained Load Testing ‚Ä∫ should handle sustained API load

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.95
    Received:   0

      182 |
      183 |       // Assertions
    > 184 |       expect(successRate).toBeGreaterThan(0.95); // 95% success rate under sustained load
          |                           ^
      185 |       expect(p95).toBeLessThan(1000); // P95 < 1 second
      186 |
      187 |       console.log(`üìä Sustained Load Test Results (30 seconds @ ${rps} RPS):

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:184:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Resource Exhaustion Scenarios ‚Ä∫ should handle memory-intensive operations

    TypeError: (0 , supertest_1.default)(...).post(...).set(...).send(...).timeout is not a function

      298 |         .set('Authorization', authToken ? `Bearer ${authToken}` : '')
      299 |         .send(largePayload)
    > 300 |         .timeout(10000);
          |          ^
      301 |
      302 |       // Should handle large payload gracefully
      303 |       expect([201, 400, 413]).toContain(response.status);

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:300:10)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Performance Degradation Detection ‚Ä∫ should detect performance degradation over time

    TypeError: (0 , supertest_1.default)(...).get(...).timeout is not a function

      333 |         await request(app)
      334 |           .get('/health')
    > 335 |           .timeout(5000);
          |            ^
      336 |
      337 |         measurements.push(Date.now() - startTime);
      338 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:335:12)

(node:25920) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGTERM listeners added to [process]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
(Use `node --trace-warnings ...` to show where the warning was created)
(node:25920) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added to [process]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
FAIL tests/unit/worker.main.test.ts (30.788 s)
  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ processes step successfully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:127:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step execution error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Step failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:151:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:151:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step timeout

    expect(received).rejects.toThrow(expected)

    Expected substring: "step timeout"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:171:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:171:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step timeout with race condition

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      180 |     });
      181 |
    > 182 |     test('handles step timeout with race condition', async () => {
          |     ^
      183 |       // Mock a slow runStep that will be interrupted by timeout
      184 |       runStep.mockImplementation(() => new Promise(resolve => setTimeout(resolve, 40000)));
      185 |

      at tests/unit/worker.main.test.ts:182:5
      at tests/unit/worker.main.test.ts:108:3
      at Object.<anonymous> (tests/unit/worker.main.test.ts:67:1)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ uses custom timeout from environment

    expect(received).rejects.toThrow(expected)

    Expected substring: "step timeout"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          57 |         stepId,
          58 |         error: (err && typeof err.message === 'string') ? err.message : String(err)
        > 59 |       }).catch(() => {});
             |         ^
          60 |       throw err;
          61 |     } finally {
          62 |       if (timeoutHandle) {

      at src/worker/main.ts:59:9
      at Object.<anonymous> (tests/unit/worker.main.test.ts:226:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:226:37)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ uses provided idempotency key

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:247:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ generates idempotency key from step data

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:268:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ handles inbox errors gracefully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:307:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ cleans up idempotency key on error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Processing failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:323:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:323:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ calculates retry count from attempt

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:342:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ handles missing attempt number

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:356:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ handles invalid attempt number

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:371:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ error handling in outbox operations ‚Ä∫ handles outbox success write failure gracefully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:396:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ error handling in outbox operations ‚Ä∫ handles outbox failure write failure gracefully

    expect(received).rejects.toThrow(expected)

    Expected substring: "Step failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:411:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:411:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ dev restart functionality ‚Ä∫ watches for restart flag when enabled

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining ".dev-restart-worker"

    Number of calls: 0

      499 |
      500 |       // Should clean up stale flag
    > 501 |       expect(fs.unlinkSync).toHaveBeenCalledWith(
          |                             ^
      502 |         expect.stringContaining('.dev-restart-worker')
      503 |       );
      504 |

      at Object.<anonymous> (tests/unit/worker.main.test.ts:501:29)

FAIL tests/unit/git_ops.handler.test.ts
  ‚óè git_ops handler ‚Ä∫ basic mode operations ‚Ä∫ should handle commit with custom message in basic mode

    expect(received).toContain(expected) // indexOf

    Expected substring: "Added new feature"
    Received string:    "No changes to commit"

      168 |       expect(updateCall).toBeDefined();
      169 |       const outputs = (updateCall?.[1] as Partial<StepRow>)?.outputs as Record<string, any>;
    > 170 |       expect(outputs?.message).toContain('Added new feature');
          |                                ^
      171 |       expect(outputs?.committed).toBe(true);
      172 |     });
      173 |

      at Object.<anonymous> (tests/unit/git_ops.handler.test.ts:170:32)

  ‚óè git_ops handler ‚Ä∫ basic mode operations ‚Ä∫ should handle branch creation in basic mode

    expect(received).toBeDefined()

    Received: undefined

      198 |       );
      199 |
    > 200 |       expect(updateCall).toBeDefined();
          |                          ^
      201 |       const outputs = (updateCall?.[1] as Partial<StepRow>)?.outputs as Record<string, any>;
      202 |       expect(outputs?.message).toContain('Created and switched to branch: feature/test');
      203 |     });

      at Object.<anonymous> (tests/unit/git_ops.handler.test.ts:200:26)

FAIL tests/unit/workspaces.test.ts
  ‚óè WorkspaceManager ‚Ä∫ initializeRepo ‚Ä∫ should create a new git repository

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      121 |       // Check that README was created
      122 |       const readmePath = path.join(workspacePath, 'README.md');
    > 123 |       expect(fs.existsSync(readmePath)).toBe(true);
          |                                         ^
      124 |     });
      125 |
      126 |     it('should respect git_mode when generating commit messages', async () => {

      at Object.<anonymous> (tests/unit/workspaces.test.ts:123:41)

FAIL tests/integration/run-detail-api.integration.test.ts
  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Vercel Routing Integration ‚Ä∫ handles direct API call to /api/runs/[id]

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 404

    Number of calls: 1

      23 |       await handler(mockReq, mockRes);
      24 |
    > 25 |       expect(mockRes.status).toHaveBeenCalledWith(200);
         |                              ^
      26 |       expect(mockRes.json).toHaveBeenCalledWith(
      27 |         expect.objectContaining({
      28 |           run: expect.any(Object)

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:25:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Vercel Routing Integration ‚Ä∫ rejects non-GET methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 405
    Received: 204

    Number of calls: 1

      61 |         await handler(mockReq, mockRes);
      62 |
    > 63 |         expect(mockRes.status).toHaveBeenCalledWith(405);
         |                                ^
      64 |         expect(mockRes.json).toHaveBeenCalledWith(
      65 |           expect.objectContaining({
      66 |             error: 'Method not allowed'

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:63:32)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Database Integration ‚Ä∫ retrieves run from database

    expect(received).toBeDefined()

    Received: undefined

      83 |
      84 |       const response = mockRes.json.mock.calls[0][0];
    > 85 |       expect(response.run).toBeDefined();
         |                            ^
      86 |       expect(response.run.id).toBe('existing-run-id');
      87 |     });
      88 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:85:28)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Database Integration ‚Ä∫ retrieves associated steps

    expect(received).toBeDefined()

    Received: undefined

       98 |
       99 |       const response = mockRes.json.mock.calls[0][0];
    > 100 |       expect(response.steps).toBeDefined();
          |                              ^
      101 |       expect(Array.isArray(response.steps)).toBe(true);
      102 |     });
      103 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:100:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Database Integration ‚Ä∫ retrieves associated artifacts

    expect(received).toBeDefined()

    Received: undefined

      113 |
      114 |       const response = mockRes.json.mock.calls[0][0];
    > 115 |       expect(response.artifacts).toBeDefined();
          |                                  ^
      116 |       expect(Array.isArray(response.artifacts)).toBe(true);
      117 |     });
      118 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:115:34)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Database Integration ‚Ä∫ handles database connection failures

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 500
    Received: 404

    Number of calls: 1

      146 |       await handler(mockReq, mockRes);
      147 |
    > 148 |       expect(mockRes.status).toHaveBeenCalledWith(500);
          |                              ^
      149 |       expect(mockRes.json).toHaveBeenCalledWith(
      150 |         expect.objectContaining({
      151 |           error: expect.any(String)

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:148:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Authentication & Authorization ‚Ä∫ rejects invalid JWT token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      201 |       await handler(mockReq, mockRes);
      202 |
    > 203 |       expect(mockRes.status).toHaveBeenCalledWith(401);
          |                              ^
      204 |     });
      205 |
      206 |     test('rejects expired JWT token', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:203:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Authentication & Authorization ‚Ä∫ rejects expired JWT token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      217 |       await handler(mockReq, mockRes);
      218 |
    > 219 |       expect(mockRes.status).toHaveBeenCalledWith(401);
          |                              ^
      220 |     });
      221 |
      222 |     test('rejects malformed Authorization header', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:219:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Authentication & Authorization ‚Ä∫ rejects malformed Authorization header

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      241 |         await handler(mockReq, mockRes);
      242 |
    > 243 |         expect(mockRes.status).toHaveBeenCalledWith(401);
          |                                ^
      244 |       }
      245 |     });
      246 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:243:32)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è CORS & Security Headers ‚Ä∫ handles OPTIONS preflight request

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 204

    Number of calls: 1

      291 |       await handler(mockReq, mockRes);
      292 |
    > 293 |       expect(mockRes.status).toHaveBeenCalledWith(200);
          |                              ^
      294 |       expect(mockRes.setHeader).toHaveBeenCalledWith(
      295 |         'Access-Control-Allow-Methods',
      296 |         expect.stringContaining('GET')

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:293:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è CORS & Security Headers ‚Ä∫ sets security headers

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "X-Content-Type-Options", "nosniff"
    Received
           1: "Access-Control-Allow-Origin", "http://localhost:3000"
           2: "Access-Control-Allow-Credentials", "true"
           3: "Access-Control-Allow-Methods", "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD"

    Number of calls: 6

      326 |       await handler(mockReq, mockRes);
      327 |
    > 328 |       expect(mockRes.setHeader).toHaveBeenCalledWith(
          |                                 ^
      329 |         'X-Content-Type-Options',
      330 |         'nosniff'
      331 |       );

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:328:33)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Error Handling & Edge Cases ‚Ä∫ handles missing query parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      344 |       await handler(mockReq, mockRes);
      345 |
    > 346 |       expect(mockRes.status).toHaveBeenCalledWith(400);
          |                              ^
      347 |     });
      348 |
      349 |     test('handles array of IDs in query parameter', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:346:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Performance & Resource Limits ‚Ä∫ handles run with thousands of steps

    expect(received).toBeDefined()

    Received: undefined

      443 |
      444 |       const response = mockRes.json.mock.calls[0][0];
    > 445 |       expect(response.steps).toBeDefined();
          |                              ^
      446 |       expect(Array.isArray(response.steps)).toBe(true);
      447 |     });
      448 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:445:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Data Integrity & Validation ‚Ä∫ returns complete run object with all fields

    expect(received).toMatchObject(expected)

    Matcher error: received value must be a non-null object

    Received has value: undefined

      492 |
      493 |       const response = mockRes.json.mock.calls[0][0];
    > 494 |       expect(response.run).toMatchObject({
          |                            ^
      495 |         id: expect.any(String),
      496 |         status: expect.any(String),
      497 |         tenant_id: expect.any(String),

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:494:28)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ üõ°Ô∏è Data Integrity & Validation ‚Ä∫ validates run ID format before database query

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 404]

      522 |         // Should return 400 or 404, not 500
      523 |         const statusCode = mockRes.status.mock.calls[0][0];
    > 524 |         expect([400, 404]).toContain(statusCode);
          |                            ^
      525 |       }
      526 |     });
      527 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:524:28)

FAIL src/api/routes/__tests__/webhooks.test.ts
  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Webhook Security ‚Ä∫ validates webhook signature

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<Buffer>, "valid_signature", "whsec_test_123"

    Number of calls: 0

      93 |         .send({ test: 'data' });
      94 |
    > 95 |       expect(mockStripe.webhooks.constructEvent).toHaveBeenCalledWith(
         |                                                  ^
      96 |         expect.any(Buffer),
      97 |         'valid_signature',
      98 |         'whsec_test_123'

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:95:50)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Webhook Security ‚Ä∫ prevents signature enumeration attacks

    expect(received).toContain(expected) // indexOf

    Expected substring: "Webhook Error"
    Received string:    "Missing signature"

      162 |
      163 |         expect(response.status).toBe(400);
    > 164 |         expect(response.body.error).toContain('Webhook Error');
          |                                     ^
      165 |       }
      166 |     });
      167 |   });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:164:37)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.created events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"description": "A test product", "id": "prod_123", "name": "Test Product"}

    Number of calls: 0

      198 |           .send({});
      199 |
    > 200 |         expect(upsertProduct).toHaveBeenCalledWith(productEvent.data.object);
          |                               ^
      201 |         expect(response.status).toBe(200);
      202 |       });
      203 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:200:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.updated events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "prod_123", "name": "Updated Product"}

    Number of calls: 0

      216 |           .send({});
      217 |
    > 218 |         expect(upsertProduct).toHaveBeenCalledWith(productEvent.data.object);
          |                               ^
      219 |       });
      220 |
      221 |       it('handles product.deleted events', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:218:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.deleted events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "prod_123"

    Number of calls: 0

      233 |           .send({});
      234 |
    > 235 |         expect(deleteProduct).toHaveBeenCalledWith('prod_123');
          |                               ^
      236 |       });
      237 |     });
      238 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:235:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Price Events ‚Ä∫ handles price.created events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"currency": "usd", "id": "price_123", "unit_amount": 1000}

    Number of calls: 0

      258 |           .send({});
      259 |
    > 260 |         expect(upsertPrice).toHaveBeenCalledWith(priceEvent.data.object);
          |                             ^
      261 |       });
      262 |
      263 |       it('handles price.deleted events', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:260:29)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Price Events ‚Ä∫ handles price.deleted events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "price_123"

    Number of calls: 0

      275 |           .send({});
      276 |
    > 277 |         expect(deletePrice).toHaveBeenCalledWith('price_123');
          |                             ^
      278 |       });
      279 |     });
      280 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:277:29)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Checkout Events ‚Ä∫ handles checkout.session.completed for subscriptions

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123", true

    Number of calls: 0

      323 |           .send({});
      324 |
    > 325 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123', true);
          |                                                ^
      326 |         expect(sendSubscriptionConfirmationEmail).toHaveBeenCalled();
      327 |       });
      328 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:325:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Subscription Events ‚Ä∫ handles customer.subscription.created

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123"

    Number of calls: 0

      372 |           .send({});
      373 |
    > 374 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123');
          |                                                ^
      375 |       });
      376 |
      377 |       it('handles customer.subscription.deleted with audit logging', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:374:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Subscription Events ‚Ä∫ handles customer.subscription.deleted with audit logging

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      398 |           .send({});
      399 |
    > 400 |         expect(manageSubscriptionStatusChange).toHaveBeenCalled();
          |                                                ^
      401 |         expect(require('../../../auth/supabase').createAuditLog).toHaveBeenCalledWith(
      402 |           'user_123',
      403 |           'billing.subscription_cancelled',

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:400:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Invoice Events ‚Ä∫ handles invoice.payment_succeeded

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123"

    Number of calls: 0

      432 |           .send({});
      433 |
    > 434 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123');
          |                                                ^
      435 |         expect(require('../../../auth/supabase').trackUsage).toHaveBeenCalledWith(
      436 |           'user_123',
      437 |           'payment_succeeded',

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:434:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Invoice Events ‚Ä∫ handles invoice.payment_failed with email notification

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user_123", "test@example.com", ObjectContaining {"amount": "$10", "failureReason": "Card declined", "lastFourDigits": "4242"}

    Number of calls: 0

      473 |           .send({});
      474 |
    > 475 |         expect(sendPaymentFailedEmail).toHaveBeenCalledWith(
          |                                        ^
      476 |           'user_123',
      477 |           'test@example.com',
      478 |           expect.objectContaining({

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:475:40)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Customer Events ‚Ä∫ handles customer.updated

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"billing_address": {"city": "San Francisco", "country": "US", "line1": "123 Main St", "postal_code": "94105", "state": "CA"}}

    Number of calls: 0

      512 |           .send({});
      513 |
    > 514 |         expect(mockSupabase.update).toHaveBeenCalledWith({
          |                                     ^
      515 |           billing_address: customerEvent.data.object.address
      516 |         });
      517 |       });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:514:37)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles billing service errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      536 |
      537 |       // Should return 200 to prevent Stripe retries
    > 538 |       expect(response.status).toBe(200);
          |                               ^
      539 |       expect(response.body).toEqual({ received: true, error: 'Processing error' });
      540 |     });
      541 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:538:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles email service failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      571 |
      572 |       // Should still process successfully
    > 573 |       expect(response.status).toBe(200);
          |                               ^
      574 |       expect(manageSubscriptionStatusChange).toHaveBeenCalled();
      575 |     });
      576 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:573:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles database connection failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      590 |         .send({});
      591 |
    > 592 |       expect(response.status).toBe(200);
          |                               ^
      593 |     });
      594 |   });
      595 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:592:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Filtering ‚Ä∫ processes only relevant events

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      619 |           .send({});
      620 |
    > 621 |         expect(response.status).toBe(200);
          |                                 ^
      622 |       }
      623 |     });
      624 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:621:33)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Filtering ‚Ä∫ ignores irrelevant events

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      645 |           .send({});
      646 |
    > 647 |         expect(response.status).toBe(200);
          |                                 ^
      648 |         expect(response.body).toEqual({ received: true });
      649 |       }
      650 |     });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:647:33)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Test Endpoint (Development) ‚Ä∫ rejects test webhooks in production

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      698 |       const response = await request(app).post('/webhooks/test');
      699 |
    > 700 |       expect(response.status).toBe(404);
          |                               ^
      701 |
      702 |       process.env.NODE_ENV = originalEnv;
      703 |     });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:700:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Performance Tests ‚Ä∫ handles high-volume webhook events

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      723 |       const results = await Promise.all(promises);
      724 |
    > 725 |       expect(results.every(r => r.status === 200)).toBe(true);
          |                                                    ^
      726 |     });
      727 |
      728 |     it('processes webhooks within time limits', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:725:52)

FAIL tests/unit/worker.integration.test.ts
  ‚óè Worker Integration Tests ‚Ä∫ Error Recovery and Resilience ‚Ä∫ handles partial failures in atomic operations

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      285 |       });
      286 |
    > 287 |       await expect(runner.runStep('run-456', 'step-123')).rejects.toThrow('Count failed');
          |             ^
      288 |     });
      289 |
      290 |     test('handles handler loading failures', async () => {

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/worker.integration.test.ts:287:13)

FAIL src/api/routes/__tests__/responses.test.ts
  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ blocks non-admin users

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ handles runtime errors gracefully

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ handles unknown errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/incidents ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/incidents/:id/resolve ‚Ä∫ resolves incident with valid data

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -1,10 +1,10 @@
      Object {
        "incident": Object {
          "id": "inc_123",
          "occurredAt": "2024-01-01T10:00:00.000Z",
    -     "resolvedAt": 2024-01-01T10:00:00.000Z,
    +     "resolvedAt": "2024-01-01T10:00:00.000Z",
          "resolvedBy": "admin",
          "runId": "run_123",
          "sequence": 1,
          "status": "resolved",
          "type": "retry",

      261 |         .expect(200);
      262 |
    > 263 |       expect(response.body).toEqual({ incident: mockIncident });
          |                             ^
      264 |       expect(mockRuntime.resolveResponseIncident).toHaveBeenCalledWith({
      265 |         incidentId: 'inc_123',
      266 |         resolvedBy: 'admin',

      at Object.<anonymous> (src/api/routes/__tests__/responses.test.ts:263:29)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/incidents/:id/resolve ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/prune ‚Ä∫ handles prune operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/ui-event ‚Ä∫ logs UI events with valid payload

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/retry ‚Ä∫ handles run not found

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/retry ‚Ä∫ handles retry operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/moderation-notes ‚Ä∫ handles moderation service errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/rollback ‚Ä∫ handles run not found

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/rollback ‚Ä∫ handles rollback operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/export ‚Ä∫ handles export operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs/:id ‚Ä∫ returns 404 for non-existent run

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs/:id ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/integration/reliability.db.integration.test.ts
  ‚óè Console

    console.log
      ‚úÖ Database pool initialized and warmed up

      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:32:13)

    console.log
      ‚úÖ Database cleanup completed

      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:67:15)

    console.log
      ‚úÖ Database pool closed

      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:73:15)

    console.error
      Error: Unhandled error. (TypeError: ioredis_1.default is not a constructor
          at RedisConnection.init (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/redis-connection.ts:235:28)
          at new RedisConnection (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/redis-connection.ts:132:30)
          at new QueueBase (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue-base.ts:68:23)
          at new Queue (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue.ts:164:5)
          at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/reliability.db.integration.test.ts:79:17)
          at processTicksAndRejections (node:internal/process/task_queues:105:5))
          at Queue.emit (node:events:507:17)
          at Queue.emit (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue-base.ts:123:20)
          at Queue.emit (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue.ts:192:18)
          at RedisConnection.<anonymous> (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue-base.ts:75:56)
          at RedisConnection.emit (node:events:518:28)
          at /Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/redis-connection.ts:133:41
          at processTicksAndRejections (node:internal/process/task_queues:105:5) {
        code: 'ERR_UNHANDLED_ERROR',
        context: TypeError: ioredis_1.default is not a constructor
            at RedisConnection.init (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/redis-connection.ts:235:28)
            at new RedisConnection (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/redis-connection.ts:132:30)
            at new QueueBase (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue-base.ts:68:23)
            at new Queue (/Volumes/Development/nofx-local-starter/node_modules/bullmq/src/classes/queue.ts:164:5)
            at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/reliability.db.integration.test.ts:79:17)
            at processTicksAndRejections (node:internal/process/task_queues:105:5)
      }

      at Queue.emit (node_modules/bullmq/src/classes/queue-base.ts:129:17)
      at Queue.emit (node_modules/bullmq/src/classes/queue.ts:192:18)
      at RedisConnection.<anonymous> (node_modules/bullmq/src/classes/queue-base.ts:75:56)
      at node_modules/bullmq/src/classes/redis-connection.ts:133:41

  ‚óè DB + Redis drivers persist events and enqueue reliably

    TypeError: Cannot read properties of undefined (reading 'keyPrefix')

      15 |   private getQueue(topic: string) {
      16 |     if (!this.queues.has(topic)) {
    > 17 |       const q = new Queue(topic, { connection: this.connection });
         |                 ^
      18 |       this.queues.set(topic, q);
      19 |     }
      20 |     return this.queues.get(topic)!;

      at new RedisConnection (node_modules/bullmq/src/classes/redis-connection.ts:101:32)
      at new QueueBase (node_modules/bullmq/src/classes/queue-base.ts:68:23)
      at new Queue (node_modules/bullmq/src/classes/queue.ts:164:5)
      at RedisQueueAdapter.getQueue (src/lib/queue/RedisAdapter.ts:17:17)
      at RedisQueueAdapter.getQueue [as enqueue] (src/lib/queue/RedisAdapter.ts:50:16)
      at enqueue (src/lib/queue/index.ts:40:14)
      at retryStep (src/lib/runRecovery.ts:47:16)
      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:109:3)


  ‚óè Test suite failed to run

    TypeError: ioredis_1.default is not a constructor

      77 |     if (queue) {
      78 |       const { Queue } = await import('bullmq');
    > 79 |       const q = new Queue(queue.STEP_READY_TOPIC, { connection: { url: REDIS_URL } });
         |                 ^
      80 |       await q.drain(true);
      81 |       await q.close();
      82 |     }

      at RedisConnection.init (node_modules/bullmq/src/classes/redis-connection.ts:235:28)
      at new RedisConnection (node_modules/bullmq/src/classes/redis-connection.ts:132:30)
      at new QueueBase (node_modules/bullmq/src/classes/queue-base.ts:68:23)
      at new Queue (node_modules/bullmq/src/classes/queue.ts:164:5)
      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:79:17)

FAIL tests/integration/complete-run-workflow.test.ts
  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should create and execute a complete run workflow

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should handle concurrent run creation

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.8
    Received:   0

      168 |
      169 |       // At least 80% should succeed
    > 170 |       expect(successful.length / results.length).toBeGreaterThan(0.8);
          |                                                  ^
      171 |
      172 |       console.log(`Concurrent runs: ${successful.length} succeeded, ${failed.length} failed`);
      173 |     }, 120000);

      at Object.<anonymous> (tests/integration/complete-run-workflow.test.ts:170:50)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should support run cancellation

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Step Execution and Dependencies ‚Ä∫ should execute steps in correct order

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle invalid plan gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      291 |         });
      292 |
    > 293 |       expect([400, 422]).toContain(response.status);
          |                          ^
      294 |       expect(response.body.error || response.body.message).toBeDefined();
      295 |     });
      296 |

      at Object.<anonymous> (tests/integration/complete-run-workflow.test.ts:293:26)

FAIL tests/integration/artifact-pipeline.test.ts
  ‚óè Artifact Storage Pipeline ‚Ä∫ should retrieve artifact content via API endpoint

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 3
    + Received  + 1

    - Soft threads weave
    - Through woven comfort and warmth
    - Sweatshirts embrace cold
    + test

      72 |
      73 |     expect(response.body).toBeDefined();
    > 74 |     expect(response.body.content).toBe(testContent);
         |                                   ^
      75 |     expect(response.body.path).toBe(artifactPath);
      76 |     expect(response.body.size).toBe(testContent.length);
      77 |   });

      at Object.<anonymous> (tests/integration/artifact-pipeline.test.ts:74:35)

  ‚óè Artifact Storage Pipeline ‚Ä∫ should handle non-existent artifacts gracefully

    Expected status 404 but received 200

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/integration/projects.api.test.ts
  ‚óè Projects API ‚Ä∫ lists projects with admin cookie

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      21 |     const cookie = issueAdminCookie();
      22 |     const res = await request(app).get('/projects').set('Cookie', cookie);
    > 23 |     expect(res.status).toBe(200);
         |                        ^
      24 |     expect(Array.isArray(res.body.projects)).toBe(true);
      25 |     const ids = (res.body.projects || []).map((p: any) => p.id);
      26 |     expect(ids).toContain('default');

      at Object.<anonymous> (tests/integration/projects.api.test.ts:23:24)

  ‚óè Projects API ‚Ä∫ creates a local project

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      33 |       .set('Cookie', cookie)
      34 |       .send({ name: 'LocalRepo', local_path: process.cwd(), workspace_mode: 'local_path' });
    > 35 |     expect([200,201]).toContain(res.status);
         |                       ^
      36 |     expect(res.body).toHaveProperty('id');
      37 |     expect(res.body.name).toBe('LocalRepo');
      38 |   });

      at Object.<anonymous> (tests/integration/projects.api.test.ts:35:23)

{"level":50,"time":1760317194113,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":41,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194162,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":41,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194201,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":38,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194240,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":38,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194279,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":38,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194321,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":40,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194358,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":36,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194396,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":37,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
{"level":50,"time":1760317194431,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":34,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:12:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
FAIL tests/integration/database-transactions.test.ts
  ‚óè Integration: Database Transactions ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should handle complete run creation transaction

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should maintain referential integrity on cascade delete

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle constraint violation rollback

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle foreign key violation

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent updates to same run

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent step creations

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Data Consistency Validation ‚Ä∫ should maintain status consistency

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Data Consistency Validation ‚Ä∫ should handle NULL values correctly

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Performance Under Load ‚Ä∫ should handle bulk inserts efficiently

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)


  ‚óè Test suite failed to run

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:17:5)

{"level":50,"time":1760317194467,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":35,"err":{"type":"DatabaseError","message":"relation \"run\" does not exist","stack":"error: relation \"run\" does not exist\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at query (/Volumes/Development/nofx-local-starter/src/lib/db.ts:108:17)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/integration/database-transactions.test.ts:17:5)","length":102,"name":"error","severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1449","routine":"parserOpenTable"},"queryPreview":"DELETE FROM run WHERE goal LIKE $1","msg":"db.query.error"}
FAIL src/lib/__tests__/events.test.ts
  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event with transaction wrapper

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event without stepId

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event with empty payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ sanitizes payload using toJsonValue

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ wraps both operations in transaction

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ propagates errors from recordEvent

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ propagates errors from outboxAdd

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ rolls back transaction on error

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ records event without transaction wrapper

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ attempts outboxAdd but ignores errors

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ records event successfully with FS driver

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ propagates recordEvent errors even in FS mode

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ handles outbox error silently in FS mode

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles null payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles undefined payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles array payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles string payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles number payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles boolean payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles deeply nested payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ includes stepId when provided

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ sets stepId to null when not provided

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ handles empty string stepId

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles typical run lifecycle events

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles mixed driver scenarios

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles high-volume event recording

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Error Recovery ‚Ä∫ recovers from transient errors

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Error Recovery ‚Ä∫ maintains consistency on partial failure

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Performance Tests ‚Ä∫ handles concurrent event recording

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Performance Tests ‚Ä∫ handles large payloads

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

FAIL src/api/__tests__/main.test.ts
  ‚óè Main API Server Tests ‚Ä∫ Health Check ‚Ä∫ should return health status

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Health Check ‚Ä∫ should include queue and store status

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs/preview ‚Ä∫ should preview run with valid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs/preview ‚Ä∫ should validate plan schema

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should create run with valid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should reject invalid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should handle store errors gracefully

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id ‚Ä∫ should return run by ID

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id ‚Ä∫ should handle non-existent run

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id/timeline ‚Ä∫ should return run timeline

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id/stream ‚Ä∫ should setup SSE stream for run events

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs ‚Ä∫ should list runs with pagination

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs ‚Ä∫ should handle invalid pagination parameters

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Frontend Routing ‚Ä∫ should serve frontend app routes

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Frontend Routing ‚Ä∫ should handle SPA routing for frontend

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ CORS Configuration ‚Ä∫ should handle preflight requests

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ CORS Configuration ‚Ä∫ should set CORS headers

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Middleware Stack ‚Ä∫ should parse JSON bodies

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Middleware Stack ‚Ä∫ should handle large payloads within limit

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Error Handling ‚Ä∫ should handle invalid JSON gracefully

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Error Handling ‚Ä∫ should not leak sensitive information in errors

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Security ‚Ä∫ should validate input parameters

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Security ‚Ä∫ should handle malformed run IDs

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Performance ‚Ä∫ should respond to health check quickly

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

FAIL tests/unit/handlers/git_pr.test.ts
  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should fail when gate is rejected

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      223 |       mockStore.getLatestGate.mockResolvedValue({ status: 'failed', id: 'gate-1' } as any);
      224 |
    > 225 |       await expect(gitPrHandler.run({
          |             ^
      226 |         runId: 'run-123',
      227 |         step: baseStep as any
      228 |       })).rejects.toThrow('git_pr not approved');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:225:13)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should create PR with inline content

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["rev-parse", "--is-inside-work-tree"], Any<String>, Any<Object>
    Received
           1
              "git",
              ["rev-parse", "--is-inside-work-tree"],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              Array [
            -   "rev-parse",
            -   "--is-inside-work-tree",
            +   "fetch",
            +   "origin",
            +   "main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "rev-parse",
            -   "--is-inside-work-tree",
            +   "checkout",
            +   "-B",
            +   "feat/run-run-123",
            +   "origin/main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      258 |
      259 |       // Should execute git commands
    > 260 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['rev-parse', '--is-inside-work-tree'], expect.any(String), expect.any(Object));
          |                             ^
      261 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['fetch', 'origin', 'main'], expect.any(String), expect.any(Object));
      262 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['checkout', '-B', expect.stringMatching(/feat\/run-/), 'origin/main'], expect.any(String), expect.any(Object));
      263 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['add', '--all'], expect.any(String), expect.any(Object));

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:260:29)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should handle git command failures

    expect(received).rejects.toThrow(expected)

    Expected substring: "cmd failed: git"
    Received message:   "not a git repo"

          130 |
          131 |     // git plumbing
        > 132 |     try { sh('git', ['rev-parse','--is-inside-work-tree'], repo, env); } catch { throw new Error('not a git repo'); }
              |                                                                                        ^
          133 |     sh('git', ['fetch','origin', base], repo, env);
          134 |     // Create branch from origin/base
          135 |     sh('git', ['checkout','-B', branch, `origin/${base}`], repo, env);

      at Object.run (src/worker/handlers/git_pr.ts:132:88)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:444:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:447:19)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should set git user config if not configured

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["config", "user.email", "nofx@example.com"], Any<String>, Any<Object>
    Received
           1
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "rev-parse",
            +   "--is-inside-work-tree",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "fetch",
            +   "origin",
            +   "main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "checkout",
            +   "-B",
            +   "feat/run-run-123",
            +   "origin/main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      469 |
      470 |       // Should set git user config
    > 471 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['config', 'user.email', 'nofx@example.com'], expect.any(String), expect.any(Object));
          |                             ^
      472 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['config', 'user.name', 'NOFX Bot'], expect.any(String), expect.any(Object));
      473 |     });
      474 |

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:471:29)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should use custom branch and base

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["fetch", "origin", "develop"], Any<String>, Any<Object>
    Received
           1
              "git",
              Array [
            -   "fetch",
            -   "origin",
            -   "develop",
            +   "rev-parse",
            +   "--is-inside-work-tree",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              ["fetch", "origin", "develop"],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "fetch",
            -   "origin",
            -   "develop",
            +   "checkout",
            +   "-B",
            +   "feature/custom-branch",
            +   "origin/develop",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      533 |
      534 |       // Should use custom branch and base
    > 535 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['fetch', 'origin', 'develop'], expect.any(String), expect.any(Object));
          |                             ^
      536 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['checkout', '-B', 'feature/custom-branch', 'origin/develop'], expect.any(String), expect.any(Object));
      537 |
      538 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:535:29)

FAIL tests/performance/benchmarks.test.ts
  ‚óè Console

    console.log
      üìä Performance monitor started

      at PerformanceMonitor.log [as start] (src/lib/performance-monitor.ts:104:13)

    console.log
      
      # Performance Benchmark Report: api-endpoints
      
      **Description:** API endpoint performance benchmarks
      **Date:** 2025-10-13T00:59:55.053Z
      **Duration:** 43.43ms
      
      ## Summary Statistics
      - **Total Benchmarks:** 3
      - **Total Duration:** 38.83ms
      - **Average Duration:** 12.94ms
      - **Min Duration:** 2.23ms
      - **Max Duration:** 32.60ms
      - **P95 Duration:** 32.60ms
      - **Average Memory:** 658.24MB
      - **Errors:** 3
      
      
      ## ‚ö†Ô∏è Threshold Violations
      - health-check: Memory 655.57MB exceeds threshold 10MB
      - health-check: CPU 277.62% exceeds threshold 50%
      - create-run: Memory 658.31MB exceeds threshold 10MB
      - create-run: CPU 762.50% exceeds threshold 50%
      - metrics-endpoint: Memory 660.84MB exceeds threshold 10MB
      - metrics-endpoint: CPU 442.88% exceeds threshold 50%
      
      
      ## Individual Results
      
      ### health-check
      - **Duration:** 32.60ms
      - **Memory:** 655.57MB
      - **CPU:** 90.51ms
      - **Error:** fetch failed
      
      
      ### create-run
      - **Duration:** 4.00ms
      - **Memory:** 658.31MB
      - **CPU:** 30.48ms
      - **Error:** fetch failed
      
      
      ### metrics-endpoint
      - **Duration:** 2.23ms
      - **Memory:** 660.84MB
      - **CPU:** 9.89ms
      - **Error:** fetch failed

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:51:17)

    console.log
      ‚úÖ Database pool initialized and warmed up

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:134:19)

    console.log
      
      üî• Pool Performance Comparison:
         Cold Start (new pool): 35.96ms
         Warm Pool (reused):    6.87ms
         Speedup: 5.2x faster

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:248:15)

    console.log
      
      # Performance Benchmark Report: database-operations
      
      **Description:** Database operation benchmarks
      **Date:** 2025-10-13T00:59:55.158Z
      **Duration:** 104.54ms
      
      ## Summary Statistics
      - **Total Benchmarks:** 3
      - **Total Duration:** 17.22ms
      - **Average Duration:** 5.74ms
      - **Min Duration:** 5.29ms
      - **Max Duration:** 6.15ms
      - **P95 Duration:** 6.15ms
      - **Average Memory:** 655.36MB
      - **Errors:** 0
      
      
      ## ‚ö†Ô∏è Threshold Violations
      - db-connection: Memory 653.44MB exceeds threshold 5MB
      - db-connection: CPU 69.18% exceeds threshold 30%
      - simple-query: Memory 655.37MB exceeds threshold 5MB
      - complex-query: Memory 657.26MB exceeds threshold 5MB
      
      
      ## Individual Results
      
      ### db-connection
      - **Duration:** 6.15ms
      - **Memory:** 653.44MB
      - **CPU:** 4.25ms
      
      
      
      ### simple-query
      - **Duration:** 5.29ms
      - **Memory:** 655.37MB
      - **CPU:** 0.66ms
      
      
      
      ### complex-query
      - **Duration:** 5.78ms
      - **Memory:** 657.26MB
      - **CPU:** 0.62ms

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:144:17)

    console.log
      ‚úÖ Database pool closed

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:150:17)

    console.log
      
      # Performance Benchmark Report: resource-usage
      
      **Description:** Memory and CPU usage benchmarks
      **Date:** 2025-10-13T00:59:55.222Z
      **Duration:** 63.39ms
      
      ## Summary Statistics
      - **Total Benchmarks:** 3
      - **Total Duration:** 36.60ms
      - **Average Duration:** 12.20ms
      - **Min Duration:** 0.23ms
      - **Max Duration:** 27.71ms
      - **P95 Duration:** 27.71ms
      - **Average Memory:** 665.13MB
      - **Errors:** 0
      
      
      ## ‚ö†Ô∏è Threshold Violations
      - memory-allocation: Memory 664.55MB exceeds threshold 50MB
      - memory-allocation: CPU 105.14% exceeds threshold 80%
      - cpu-intensive: Memory 666.39MB exceeds threshold 50MB
      - cpu-intensive: CPU 103.40% exceeds threshold 80%
      - json-parsing: Memory 664.46MB exceeds threshold 50MB
      - json-parsing: CPU 100.23% exceeds threshold 80%
      
      
      ## Individual Results
      
      ### memory-allocation
      - **Duration:** 0.23ms
      - **Memory:** 664.55MB
      - **CPU:** 0.24ms
      
      
      
      ### cpu-intensive
      - **Duration:** 27.71ms
      - **Memory:** 666.39MB
      - **CPU:** 28.65ms
      
      
      
      ### json-parsing
      - **Duration:** 8.67ms
      - **Memory:** 664.46MB
      - **CPU:** 8.69ms

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:273:17)

    console.log
      
      # Performance Benchmark Report: concurrent-operations
      
      **Description:** Concurrent operation benchmarks
      **Date:** 2025-10-13T00:59:55.259Z
      **Duration:** 36.28ms
      
      ## Summary Statistics
      - **Total Benchmarks:** 2
      - **Total Duration:** 34.28ms
      - **Average Duration:** 17.14ms
      - **Min Duration:** 12.41ms
      - **Max Duration:** 21.87ms
      - **P95 Duration:** 21.87ms
      - **Average Memory:** 659.91MB
      - **Errors:** 1
      
      
      ## ‚ö†Ô∏è Threshold Violations
      - concurrent-api-calls: Memory 660.01MB exceeds threshold 100MB
      - concurrent-api-calls: CPU 111.87% exceeds threshold 90%
      - concurrent-promises: Memory 659.81MB exceeds threshold 100MB
      - concurrent-promises: CPU 94.52% exceeds threshold 90%
      
      
      ## Individual Results
      
      ### concurrent-api-calls
      - **Duration:** 12.41ms
      - **Memory:** 660.01MB
      - **CPU:** 13.88ms
      - **Error:** fetch failed
      
      
      ### concurrent-promises
      - **Duration:** 21.87ms
      - **Memory:** 659.81MB
      - **CPU:** 20.67ms

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:360:17)

    console.log
      üìä No baseline data available, current results will be saved as baseline

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:419:17)

    console.log
      Memory usage: 662.7071914672852MB ‚Üí 668.1075210571289MB (+5.40MB)

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:446:15)

    console.log
      
      üìä Performance Test Summary
      ============================
      ‚è±Ô∏è  Uptime: 0.26s
      üî¢ Total Requests: 0
      ‚ùå Total Errors: 0
      üìà Error Rate: 0.00%
      ‚ö° Avg Response Time: 0.00ms
      üß† Avg Memory Usage: 0.00MB
      üöÄ Avg RPS: 0.00
      
      System Health: ‚ùå Unhealthy

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:457:15)

    console.log
      üìä Performance monitor stopped

      at PerformanceMonitor.log [as stop] (src/lib/performance-monitor.ts:120:13)

    console.log
      üìä All benchmark results exported to: /Volumes/Development/nofx-local-starter/benchmarks/results/all-benchmarks-2025-10-13T00-59-55-272Z.json

      at BenchmarkRunner.log [as exportResults] (src/lib/benchmarks.ts:256:15)

  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Health check endpoint performance

    TypeError: fetch failed

      57 |         'health-check',
      58 |         async () => {
    > 59 |           const response = await fetch(`${API_URL}/health`);
         |                            ^
      60 |           return response.text();
      61 |         },
      62 |         { endpoint: '/health', method: 'GET' }

      at endpoint (tests/performance/benchmarks.test.ts:59:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:56:54)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Run creation endpoint performance

    TypeError: fetch failed

      71 |         'create-run',
      72 |         async () => {
    > 73 |           const response = await fetch(`${API_URL}/runs/preview`, {
         |                            ^
      74 |             method: 'POST',
      75 |             headers: { 'Content-Type': 'application/json' },
      76 |             body: JSON.stringify({

      at endpoint (tests/performance/benchmarks.test.ts:73:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:70:46)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Metrics endpoint performance

    TypeError: fetch failed

       99 |         'metrics-endpoint',
      100 |         async () => {
    > 101 |           const response = await fetch(`${API_URL}/api/metrics`);
          |                            ^
      102 |           return response.text();
      103 |         },
      104 |         { endpoint: '/api/metrics', method: 'GET' }

      at endpoint (tests/performance/benchmarks.test.ts:101:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:98:46)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ Concurrent Operation Benchmarks ‚Ä∫ Concurrent API calls benchmark

    TypeError: fetch failed

      370 |           );
      371 |
    > 372 |           const results = await Promise.all(promises);
          |                           ^
      373 |           return results.length;
      374 |         },
      375 |         { operation: 'concurrent-requests', concurrency: 10 }

          at async Promise.all (index 0)
      at operation (tests/performance/benchmarks.test.ts:372:27)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:365:54)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ Performance Summary ‚Ä∫ Generate comprehensive performance report

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      472 |       expect(summary.errorRate).toBeLessThan(10); // Less than 10% error rate
      473 |       expect(summary.avgResponseTime).toBeLessThan(1000); // Less than 1 second average
    > 474 |       expect(performanceMonitor.isHealthy()).toBe(true);
          |                                              ^
      475 |     });
      476 |   });
      477 | });

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:474:46)

FAIL tests/unit/store.test.ts
  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ createRun ‚Ä∫ should create a run with FS driver

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data", {"recursive": true}

    Number of calls: 0

      93 |
      94 |         expect(result).toMatchObject(mockRunData);
    > 95 |         expect(mockFs.mkdirSync).toHaveBeenCalledWith(ROOT, { recursive: true });
         |                                  ^
      96 |         expect(mockFs.mkdirSync).toHaveBeenCalledWith(path.join(ROOT, 'runs', 'test-uuid-123'), { recursive: true });
      97 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
      98 |           path.join(ROOT, 'runs', 'test-uuid-123', 'run.json'),

      at Object.<anonymous> (tests/unit/store.test.ts:95:34)

  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ updateRun ‚Ä∫ should update an existing run

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", StringContaining "\"status\":\"running\""
    Received
           1: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", "{
      \"id\": \"test-id\",
      \"status\": \"running\",
      \"created_at\": \"2023-01-01\"
    }"
           2: "/Volumes/Development/nofx-local-starter/local_data/runs/index.json", "[]"

    Number of calls: 2

      146 |         await store.updateRun('test-id', { status: 'running' });
      147 |
    > 148 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      149 |           path.join(ROOT, 'runs', 'test-id', 'run.json'),
      150 |           expect.stringContaining('"status":"running"')
      151 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:148:35)

  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ resetRun ‚Ä∫ should reset run status and timestamps

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", StringContaining "\"status\":\"queued\""
    Received
           1: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", "{
      \"id\": \"test-id\",
      \"status\": \"queued\",
      \"ended_at\": null,
      \"completed_at\": null,
      \"created_at\": \"2023-01-01\"
    }"
           2: "/Volumes/Development/nofx-local-starter/local_data/runs/index.json", "[]"

    Number of calls: 2

      172 |         await store.resetRun('test-id');
      173 |
    > 174 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      175 |           path.join(ROOT, 'runs', 'test-id', 'run.json'),
      176 |           expect.stringContaining('"status":"queued"')
      177 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:174:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ createStep ‚Ä∫ should create a step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/test-uuid-123.json", StringContaining "\"status\":\"queued\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/test-uuid-123.json", "{
      \"id\": \"test-uuid-123\",
      \"run_id\": \"run-id\",
      \"name\": \"test-step\",
      \"tool\": \"test-tool\",
      \"inputs\": {
        \"param1\": \"value1\"
      },
      \"status\": \"queued\",
      \"created_at\": \"2025-10-13T00:59:55.360Z\",
      \"started_at\": null,
      \"ended_at\": null,
      \"outputs\": null,
      \"idempotency_key\": null
    }"

    Number of calls: 1

      276 |         });
      277 |
    > 278 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      279 |           path.join(ROOT, 'runs', 'run-id', 'steps', 'test-uuid-123.json'),
      280 |           expect.stringContaining('"status":"queued"')
      281 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:278:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ updateStep ‚Ä∫ should update existing step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run1/steps/step-id.json", StringContaining "\"status\":\"running\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run1/steps/step-id.json", "{
      \"id\": \"step-id\",
      \"status\": \"running\",
      \"created_at\": \"2023-01-01\"
    }"

    Number of calls: 1

      342 |         await store.updateStep('step-id', { status: 'running' });
      343 |
    > 344 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      345 |           path.join(ROOT, 'runs', 'run1', 'steps', 'step-id.json'),
      346 |           expect.stringContaining('"status":"running"')
      347 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:344:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ resetStep ‚Ä∫ should reset step status and clear timestamps

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/step-id.json", StringContaining "\"status\":\"queued\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/step-id.json", "{
      \"id\": \"step-id\",
      \"status\": \"queued\",
      \"started_at\": null,
      \"ended_at\": null,
      \"completed_at\": null,
      \"outputs\": {}
    }"

    Number of calls: 1

      412 |         await store.resetStep('step-id');
      413 |
    > 414 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      415 |           path.join(ROOT, 'runs', 'run-id', 'steps', 'step-id.json'),
      416 |           expect.stringContaining('"status":"queued"')
      417 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:414:35)

  ‚óè Store Module ‚Ä∫ Event Operations - FS Driver ‚Ä∫ recordEvent ‚Ä∫ should record event to events file

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/events.json", StringContaining "\"type\":\"test-event\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/events.json", "[
      {
        \"id\": \"event1\",
        \"created_at\": \"2023-01-01\"
      },
      {
        \"id\": \"test-uuid-123\",
        \"run_id\": \"run-id\",
        \"type\": \"test-event\",
        \"payload\": {
          \"data\": \"test\"
        },
        \"created_at\": \"2025-10-13T00:59:55.375Z\",
        \"step_id\": \"step-id\"
      }
    ]"

    Number of calls: 1

      432 |         await store.recordEvent('run-id', 'test-event', { data: 'test' }, 'step-id');
      433 |
    > 434 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      435 |           path.join(ROOT, 'runs', 'run-id', 'events.json'),
      436 |           expect.stringContaining('"type":"test-event"')
      437 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:434:35)

  ‚óè Store Module ‚Ä∫ Gate Operations - FS Driver ‚Ä∫ updateGate ‚Ä∫ should update gate with approval info

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/gates.json", StringContaining "\"status\":\"approved\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/gates.json", "[
      {
        \"id\": \"gate-123\",
        \"status\": \"approved\",
        \"approved_by\": \"user-123\",
        \"approved_at\": \"2025-10-13T00:59:55.381Z\",
        \"run_id\": \"run-id\"
      }
    ]"

    Number of calls: 1

      513 |         });
      514 |
    > 515 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      516 |           path.join(ROOT, 'runs', 'run-id', 'gates.json'),
      517 |           expect.stringContaining('"status":"approved"')
      518 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:515:35)

  ‚óè Store Module ‚Ä∫ Artifact Operations - FS Driver ‚Ä∫ listArtifactsByRun ‚Ä∫ should list artifacts with step names

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 1

      Object {
        "id": "art1",
    -   "step_name": "Step One",
    +   "step_name": null,
      }

      600 |         const result = await store.listArtifactsByRun('run-id');
      601 |
    > 602 |         expect(result[0]).toMatchObject({
          |                           ^
      603 |           id: 'art1',
      604 |           step_name: 'Step One'
      605 |         });

      at Object.<anonymous> (tests/unit/store.test.ts:602:27)

  ‚óè Store Module ‚Ä∫ Inbox/Outbox Operations - FS Driver ‚Ä∫ outbox operations ‚Ä∫ should add messages to outbox

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", StringContaining "\"topic\":\"topic1\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", "[
      {
        \"id\": \"test-uuid-123\",
        \"topic\": \"topic1\",
        \"payload\": {
          \"message\": \"test\"
        },
        \"sent\": false,
        \"created_at\": \"2025-10-13T00:59:55.403Z\"
      }
    ]"

    Number of calls: 1

      637 |         await store.outboxAdd('topic1', { message: 'test' });
      638 |
    > 639 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      640 |           path.join(ROOT, 'outbox.json'),
      641 |           expect.stringContaining('"topic":"topic1"')
      642 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:639:35)

  ‚óè Store Module ‚Ä∫ Inbox/Outbox Operations - FS Driver ‚Ä∫ outbox operations ‚Ä∫ should mark messages as sent

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", StringContaining "\"sent\":true"
    Received: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", "[
      {
        \"id\": \"msg1\",
        \"sent\": true
      }
    ]"

    Number of calls: 1

      665 |         await store.outboxMarkSent('msg1');
      666 |
    > 667 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      668 |           path.join(ROOT, 'outbox.json'),
      669 |           expect.stringContaining('"sent":true')
      670 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:667:35)

  ‚óè Store Module ‚Ä∫ Integration Scenarios ‚Ä∫ should handle complete run lifecycle

    step not found

      177 |   async addArtifact(stepId: string, type: string, pth: string, metadata?: JsonValue): Promise<ArtifactRow> {
      178 |     const step = await this.getStep(stepId);
    > 179 |     if (!step) throw new Error('step not found');
          |                      ^
      180 |     const file = path.join(ROOT, 'runs', step.run_id, 'artifacts.json');
      181 |     const rows: ArtifactRow[] = JSON.parse(await fsp.readFile(file, 'utf8').catch(()=> '[]'));
      182 |     const row: ArtifactRow = {

      at FileSystemStore.addArtifact (src/lib/store/FileSystemStore.ts:179:22)
      at Object.<anonymous> (tests/unit/store.test.ts:1222:7)

  ‚óè Store Module ‚Ä∫ Integration Scenarios ‚Ä∫ should handle outbox message lifecycle

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      1253 |       // List unsent
      1254 |       const unsent = await store.outboxListUnsent();
    > 1255 |       expect(unsent).toHaveLength(2);
           |                      ^
      1256 |
      1257 |       // Mark first as sent
      1258 |       await store.outboxMarkSent(unsent[0].id);

      at Object.<anonymous> (tests/unit/store.test.ts:1255:22)

FAIL tests/unit/handlers/codegen.test.ts
  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should generate code successfully with default filename

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "README.md", "# My Project¬∑
    This is a great project.", "text/markdown"
    Received: "run-123", "step-123", "README.md", "# My Project¬∑
    This is a great project.", "text/markdown"

    Number of calls: 1

      118 |
      119 |       // Should save artifact with default filename
    > 120 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      121 |         'run-123',
      122 |         'README.md',
      123 |         codegenResult.content,

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:120:32)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should use custom filename when provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "main.js", "console.log(\"Hello World\");", "application/javascript"
    Received: "run-123", "step-123", "main.js", "console.log(\"Hello World\");", "text/markdown"

    Number of calls: 1

      187 |
      188 |       // Should save artifact with custom filename
    > 189 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      190 |         'run-123',
      191 |         'main.js',
      192 |         codegenResult.content,

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:189:32)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should handle codegen without usage information

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"artifact_url": "https://example.com/file.md", "content": "# Simple README", "filename": "README.md", "model": "gpt-3.5-turbo", "provider": "openai"}, "status": "succeeded"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "artifact_url": "https://example.com/file.md",
            -     "content": "# Simple README",
            -     "filename": "README.md",
            -     "model": "gpt-3.5-turbo",
            -     "provider": "openai",
            -   },
            -   "status": "succeeded",
            +   "started_at": "2025-10-13T00:59:55.522Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:55.522Z",
                "outputs": Object {
            -     "artifact_url": "https://example.com/file.md",
            -     "content": "# Simple README",
            -     "filename": "README.md",
            +     "artifact": "https://example.com/file.md",
                  "model": "gpt-3.5-turbo",
                  "provider": "openai",
                },
                "status": "succeeded",
              },

    Number of calls: 2

      223 |
      224 |       // Should not include cost calculation
    > 225 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      226 |         status: 'succeeded',
      227 |         ended_at: expect.any(String),
      228 |         outputs: {

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:225:36)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should detect content type based on filename extension

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "script.py", "test content", "text/x-python"
    Received: "run-123", "step-123", "script.py", "test content", "text/markdown"

    Number of calls: 1

      279 |         });
      280 |
    > 281 |         expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                  ^
      282 |           'run-123',
      283 |           testCase.filename,
      284 |           'test content',

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:281:34)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should handle empty filename input

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "README.md", "test content", "text/markdown"
    Received: "run-123", "step-123", "README.md", "test content", "text/markdown"

    Number of calls: 1

      354 |
      355 |       // Should default to README.md when filename is empty/whitespace
    > 356 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      357 |         'run-123',
      358 |         'README.md',
      359 |         'test content',

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:356:32)

FAIL tests/unit/correlationId.test.ts
  ‚óè Correlation ID and Structured Logging ‚Ä∫ Request Correlation ‚Ä∫ should extract run ID from URL params

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"correlationId": Any<String>, "method": "POST", "runId": "run_abc123"}

    Number of calls: 0

      107 |
      108 |       // Verify logger was called with correlation ID
    > 109 |       expect(mockLogger.child).toHaveBeenCalledWith(
          |                                ^
      110 |         expect.objectContaining({
      111 |           correlationId: expect.any(String),
      112 |           runId: runId,

      at Object.<anonymous> (tests/unit/correlationId.test.ts:109:32)

  ‚óè Correlation ID and Structured Logging ‚Ä∫ Structured Logging ‚Ä∫ should log request start and completion with context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"event": "request.started"}, "Request started"

    Number of calls: 0

      133 |
      134 |       // Verify request started log
    > 135 |       expect(childLogger.info).toHaveBeenCalledWith(
          |                                ^
      136 |         { event: 'request.started' },
      137 |         'Request started'
      138 |       );

      at Object.<anonymous> (tests/unit/correlationId.test.ts:135:32)

  ‚óè Correlation ID and Structured Logging ‚Ä∫ Structured Logging ‚Ä∫ should include correlation ID in all logs within request context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"correlationId": "test_correlation_456"}

    Number of calls: 0

      173 |
      174 |         // Verify child was created with correlation ID
    > 175 |         expect(mockLogger.child).toHaveBeenCalledWith({ correlationId });
          |                                  ^
      176 |       });
      177 |     });
      178 |   });

      at tests/unit/correlationId.test.ts:175:34
      at run (src/lib/observability.ts:42:14)
      at Object.<anonymous> (tests/unit/correlationId.test.ts:160:13)

FAIL tests/unit/handlers/bash.test.ts
  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should execute simple command successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "echo \"hello world\""],
      Object {
        "cwd": "/default/cwd",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      124 |
      125 |       // Should spawn with correct command
    > 126 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'echo "hello world"'], {
          |                         ^
      127 |         cwd: '/default/cwd',
      128 |         stdio: ['pipe', 'pipe', 'pipe'],
      129 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:126:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle command with stderr output

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"command": "ls nonexistent_file", "exitCode": 1, "stderr": "ls: nonexistent_file: No such file or directory
    ", "stdout": "", "success": false}, "status": "succeeded"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "command": "ls nonexistent_file",
            -     "exitCode": 1,
            -     "stderr": "ls: nonexistent_file: No such file or directory
            - ",
            -     "stdout": "",
            -     "success": false,
            -   },
            -   "status": "succeeded",
            +   "started_at": "2025-10-13T00:59:55.766Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:55.778Z",
                "outputs": Object {
                  "command": "ls nonexistent_file",
                  "exitCode": 1,
            -     "stderr": "ls: nonexistent_file: No such file or directory
            - ",
            +     "stderr": "ls: nonexistent_file: No such file or directory",
                  "stdout": "",
                  "success": false,
                },
            -   "status": "succeeded",
            +   "status": "failed",
              },

    Number of calls: 2

      171 |       await runPromise;
      172 |
    > 173 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      174 |         status: 'succeeded',
      175 |         ended_at: expect.any(String),
      176 |         outputs: {

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:173:36)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use project workspace when project_id provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "pwd"],
      Object {
        "cwd": "/project/workspace",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      211 |       expect(mockGetProject).toHaveBeenCalledWith('proj-123');
      212 |       expect(mockWorkspaceManager.ensureWorkspace).toHaveBeenCalledWith(project);
    > 213 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'pwd'], {
          |                         ^
      214 |         cwd: '/project/workspace',
      215 |         stdio: ['pipe', 'pipe', 'pipe'],
      216 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:213:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use workspace parameter as project_id

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "ls"],
      Object {
        "cwd": "/workspace/path",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      245 |
      246 |       expect(mockGetProject).toHaveBeenCalledWith('proj-456');
    > 247 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'ls'], {
          |                         ^
      248 |         cwd: '/workspace/path',
      249 |         stdio: ['pipe', 'pipe', 'pipe'],
      250 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:247:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use workspace parameter as direct path when project not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "ls"],
      Object {
        "cwd": "/direct/path",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      276 |       await runPromise;
      277 |
    > 278 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'ls'], {
          |                         ^
      279 |         cwd: '/direct/path',
      280 |         stdio: ['pipe', 'pipe', 'pipe'],
      281 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:278:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use custom cwd when provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "pwd"],
      Object {
        "cwd": "/custom/working/dir",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      305 |       await runPromise;
      306 |
    > 307 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'pwd'], {
          |                         ^
      308 |         cwd: '/custom/working/dir',
      309 |         stdio: ['pipe', 'pipe', 'pipe'],
      310 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:307:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle command timeout

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      333 |       }, 10);
      334 |
    > 335 |       await expect(runPromise).rejects.toThrow();
          |             ^
      336 |
      337 |       // Should have tried to kill the process
      338 |       expect(mockProcess.kill).toHaveBeenCalledWith('SIGTERM');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:335:13)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use default command when none provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "echo \"No command provided\""],
      Object {
        "cwd": "/default/cwd",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      357 |       await runPromise;
      358 |
    > 359 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'echo "No command provided"'], {
          |                         ^
      360 |         cwd: '/default/cwd',
      361 |         stdio: ['pipe', 'pipe', 'pipe'],
      362 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:359:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle spawn errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      389 |       });
      390 |
    > 391 |       await expect(bashHandler.run({
          |             ^
      392 |         runId: 'run-123',
      393 |         step: baseStep as any
      394 |       })).rejects.toThrow('Command not found');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:391:13)

FAIL tests/integration/api-auth.integration.test.ts
  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs requires authentication

    TypeError: fetch failed

      21 |   describe('/api/runs - Run Management', () => {
      22 |     test('POST /api/runs requires authentication', async () => {
    > 23 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      24 |         method: 'POST',
      25 |         headers: { 'Content-Type': 'application/json' },
      26 |         body: JSON.stringify({ prompt: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:23:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs allows with valid cookie

    TypeError: fetch failed

      33 |
      34 |     test('POST /api/runs allows with valid cookie', async () => {
    > 35 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      36 |         method: 'POST',
      37 |         headers: {
      38 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:35:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs allows with Bearer token

    TypeError: fetch failed

      47 |
      48 |     test('POST /api/runs allows with Bearer token', async () => {
    > 49 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      50 |         method: 'POST',
      51 |         headers: {
      52 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:49:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ GET /api/runs requires authentication

    TypeError: fetch failed

      60 |
      61 |     test('GET /api/runs requires authentication', async () => {
    > 62 |       const response = await fetch(`${API_BASE}/runs`);
         |                        ^
      63 |       expect(response.status).toBe(401);
      64 |     });
      65 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:62:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ GET /api/runs allows with authentication

    TypeError: fetch failed

      65 |
      66 |     test('GET /api/runs allows with authentication', async () => {
    > 67 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      68 |         headers: { 'Cookie': validCookie() }
      69 |       });
      70 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:67:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123 requires authentication

    TypeError: fetch failed

      74 |   describe('/api/runs/[id] - Run Details', () => {
      75 |     test('GET /api/runs/test123 requires authentication', async () => {
    > 76 |       const response = await fetch(`${API_BASE}/runs/test123`);
         |                        ^
      77 |       expect(response.status).toBe(401);
      78 |     });
      79 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:76:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/timeline requires authentication

    TypeError: fetch failed

      79 |
      80 |     test('GET /api/runs/test123/timeline requires authentication', async () => {
    > 81 |       const response = await fetch(`${API_BASE}/runs/test123/timeline`);
         |                        ^
      82 |       expect(response.status).toBe(401);
      83 |     });
      84 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:81:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/gates requires authentication

    TypeError: fetch failed

      84 |
      85 |     test('GET /api/runs/test123/gates requires authentication', async () => {
    > 86 |       const response = await fetch(`${API_BASE}/runs/test123/gates`);
         |                        ^
      87 |       expect(response.status).toBe(401);
      88 |     });
      89 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:86:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/stream requires authentication

    TypeError: fetch failed

      89 |
      90 |     test('GET /api/runs/test123/stream requires authentication', async () => {
    > 91 |       const response = await fetch(`${API_BASE}/runs/test123/stream`);
         |                        ^
      92 |       expect(response.status).toBe(401);
      93 |     });
      94 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:91:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ allows with Bearer token

    TypeError: fetch failed

      94 |
      95 |     test('allows with Bearer token', async () => {
    > 96 |       const response = await fetch(`${API_BASE}/runs/test123`, {
         |                        ^
      97 |         headers: { 'Authorization': validBearerToken }
      98 |       });
      99 |       // May be 404 if run doesn't exist, but not 401

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:96:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/preview - Plan Preview ‚Ä∫ POST /api/runs/preview requires authentication

    TypeError: fetch failed

      104 |   describe('/api/runs/preview - Plan Preview', () => {
      105 |     test('POST /api/runs/preview requires authentication', async () => {
    > 106 |       const response = await fetch(`${API_BASE}/runs/preview`, {
          |                        ^
      107 |         method: 'POST',
      108 |         headers: { 'Content-Type': 'application/json' },
      109 |         body: JSON.stringify({ standard: { prompt: 'test' } })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:106:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/preview - Plan Preview ‚Ä∫ allows with authentication

    TypeError: fetch failed

      113 |
      114 |     test('allows with authentication', async () => {
    > 115 |       const response = await fetch(`${API_BASE}/runs/preview`, {
          |                        ^
      116 |         method: 'POST',
      117 |         headers: {
      118 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:115:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/gates - Gate Management ‚Ä∫ POST /api/gates requires authentication

    TypeError: fetch failed

      127 |   describe('/api/gates - Gate Management', () => {
      128 |     test('POST /api/gates requires authentication', async () => {
    > 129 |       const response = await fetch(`${API_BASE}/gates`, {
          |                        ^
      130 |         method: 'POST',
      131 |         headers: { 'Content-Type': 'application/json' },
      132 |         body: JSON.stringify({ run_id: 'test', gate_type: 'typecheck' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:129:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/gates - Gate Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      136 |
      137 |     test('allows with authentication', async () => {
    > 138 |       const response = await fetch(`${API_BASE}/gates`, {
          |                        ^
      139 |         method: 'POST',
      140 |         headers: {
      141 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:138:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ GET /api/projects requires authentication

    TypeError: fetch failed

      150 |   describe('/api/projects - Project Management', () => {
      151 |     test('GET /api/projects requires authentication', async () => {
    > 152 |       const response = await fetch(`${API_BASE}/projects`);
          |                        ^
      153 |       expect(response.status).toBe(401);
      154 |     });
      155 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:152:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ POST /api/projects requires authentication

    TypeError: fetch failed

      155 |
      156 |     test('POST /api/projects requires authentication', async () => {
    > 157 |       const response = await fetch(`${API_BASE}/projects`, {
          |                        ^
      158 |         method: 'POST',
      159 |         headers: { 'Content-Type': 'application/json' },
      160 |         body: JSON.stringify({ name: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:157:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      164 |
      165 |     test('allows with authentication', async () => {
    > 166 |       const response = await fetch(`${API_BASE}/projects`, {
          |                        ^
      167 |         headers: { 'Cookie': validCookie() }
      168 |       });
      169 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:166:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ GET /api/models requires authentication

    TypeError: fetch failed

      173 |   describe('/api/models - Model Management', () => {
      174 |     test('GET /api/models requires authentication', async () => {
    > 175 |       const response = await fetch(`${API_BASE}/models`);
          |                        ^
      176 |       expect(response.status).toBe(401);
      177 |     });
      178 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:175:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ POST /api/models requires authentication

    TypeError: fetch failed

      178 |
      179 |     test('POST /api/models requires authentication', async () => {
    > 180 |       const response = await fetch(`${API_BASE}/models`, {
          |                        ^
      181 |         method: 'POST',
      182 |         headers: { 'Content-Type': 'application/json' },
      183 |         body: JSON.stringify({ name: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:180:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      187 |
      188 |     test('allows with authentication', async () => {
    > 189 |       const response = await fetch(`${API_BASE}/models`, {
          |                        ^
      190 |         headers: { 'Authorization': validBearerToken }
      191 |       });
      192 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:189:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/templates - Template Management ‚Ä∫ GET /api/templates requires authentication

    TypeError: fetch failed

      196 |   describe('/api/templates - Template Management', () => {
      197 |     test('GET /api/templates requires authentication', async () => {
    > 198 |       const response = await fetch(`${API_BASE}/templates`);
          |                        ^
      199 |       expect(response.status).toBe(401);
      200 |     });
      201 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:198:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/templates - Template Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      201 |
      202 |     test('allows with authentication', async () => {
    > 203 |       const response = await fetch(`${API_BASE}/templates`, {
          |                        ^
      204 |         headers: { 'Cookie': validCookie() }
      205 |       });
      206 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:203:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ GET /api/settings requires authentication

    TypeError: fetch failed

      210 |   describe('/api/settings - Settings Management', () => {
      211 |     test('GET /api/settings requires authentication', async () => {
    > 212 |       const response = await fetch(`${API_BASE}/settings`);
          |                        ^
      213 |       expect(response.status).toBe(401);
      214 |     });
      215 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:212:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ POST /api/settings requires authentication

    TypeError: fetch failed

      215 |
      216 |     test('POST /api/settings requires authentication', async () => {
    > 217 |       const response = await fetch(`${API_BASE}/settings`, {
          |                        ^
      218 |         method: 'POST',
      219 |         headers: { 'Content-Type': 'application/json' },
      220 |         body: JSON.stringify({ settings: {} })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:217:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      224 |
      225 |     test('allows with authentication', async () => {
    > 226 |       const response = await fetch(`${API_BASE}/settings`, {
          |                        ^
      227 |         headers: { 'Authorization': validBearerToken }
      228 |       });
      229 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:226:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Public Endpoints - Should NOT require auth ‚Ä∫ GET /api/health is public

    TypeError: fetch failed

      233 |   describe('Public Endpoints - Should NOT require auth', () => {
      234 |     test('GET /api/health is public', async () => {
    > 235 |       const response = await fetch(`${API_BASE}/health`);
          |                        ^
      236 |       expect(response.status).toBe(200);
      237 |       const data = await response.json();
      238 |       expect(data.status).toBe('healthy');

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:235:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Public Endpoints - Should NOT require auth ‚Ä∫ GET /api/test is public

    TypeError: fetch failed

      240 |
      241 |     test('GET /api/test is public', async () => {
    > 242 |       const response = await fetch(`${API_BASE}/test`);
          |                        ^
      243 |       expect(response.status).toBe(200);
      244 |     });
      245 |   });

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:242:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects SQL injection in cookie

    TypeError: fetch failed

      247 |   describe('Attack Vectors', () => {
      248 |     test('rejects SQL injection in cookie', async () => {
    > 249 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      250 |         headers: {
      251 |           'Cookie': `${COOKIE_NAME}=' OR '1'='1|fakesig`
      252 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:249:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects XSS attempt in authorization

    TypeError: fetch failed

      256 |
      257 |     test('rejects XSS attempt in authorization', async () => {
    > 258 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      259 |         headers: {
      260 |           'Authorization': 'Bearer <script>alert(1)</script>'
      261 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:258:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects tampered cookie signature

    TypeError: fetch failed

      268 |
      269 |     test('rejects tampered cookie signature', async () => {
    > 270 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      271 |         headers: {
      272 |           'Cookie': `${COOKIE_NAME}=admin|tampered_sig`
      273 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:270:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects cookie without signature

    TypeError: fetch failed

      277 |
      278 |     test('rejects cookie without signature', async () => {
    > 279 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      280 |         headers: {
      281 |           'Cookie': `${COOKIE_NAME}=admin`
      282 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:279:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects empty Bearer token

    TypeError: fetch failed

      286 |
      287 |     test('rejects empty Bearer token', async () => {
    > 288 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      289 |         headers: {
      290 |           'Authorization': 'Bearer '
      291 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:288:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects Basic auth format

    TypeError: fetch failed

      296 |
      297 |     test('rejects Basic auth format', async () => {
    > 298 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      299 |         headers: {
      300 |           'Authorization': 'Basic dXNlcjpwYXNz'
      301 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:298:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects case-mismatched bearer

    TypeError: fetch failed

      305 |
      306 |     test('rejects case-mismatched bearer', async () => {
    > 307 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      308 |         headers: {
      309 |           'Authorization': 'bearer validtoken'
      310 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:307:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ CORS and Headers ‚Ä∫ returns CORS headers

    TypeError: fetch failed

      316 |   describe('CORS and Headers', () => {
      317 |     test('returns CORS headers', async () => {
    > 318 |       const response = await fetch(`${API_BASE}/health`, {
          |                        ^
      319 |         method: 'OPTIONS'
      320 |       });
      321 |       expect(response.headers.has('access-control-allow-origin')).toBe(true);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:318:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ CORS and Headers ‚Ä∫ handles preflight requests

    TypeError: fetch failed

      323 |
      324 |     test('handles preflight requests', async () => {
    > 325 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      326 |         method: 'OPTIONS',
      327 |         headers: {
      328 |           'Origin': 'http://localhost:3001',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:325:24)

    Cause:
    AggregateError:


FAIL src/lib/__tests__/orchestration.test.ts
  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ creates a solo orchestration session

    expect(received).toBe(expected) // Object.is equality

    Expected: "solo"
    Received: undefined

      91 |
      92 |         expect(result.session).toBeDefined();
    > 93 |         expect(result.session.orchestrationType).toBe('solo');
         |                                                  ^
      94 |         expect(result.session.status).toBe('active');
      95 |       });
      96 |

      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:93:50)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ creates a hierarchical orchestration session with relationships

    TypeError: Cannot read properties of undefined (reading 'id')

      558 | function mapSessionRow(row: any): AgentSession {
      559 |   return {
    > 560 |     id: row.id,
          |             ^
      561 |     orchestrationType: row.orchestration_type,
      562 |     primaryAgentId: row.primary_agent_id,
      563 |     sessionMetadata: row.session_metadata || {},

      at id (src/lib/orchestration.ts:560:13)
      at mapSessionRow (src/lib/orchestration.ts:70:23)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ throws error when no agents match criteria

    expect(received).rejects.toThrow(expected)

    Expected substring: "No agents match the selection criteria"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          558 | function mapSessionRow(row: any): AgentSession {
          559 |   return {
        > 560 |     id: row.id,
              |             ^
          561 |     orchestrationType: row.orchestration_type,
          562 |     primaryAgentId: row.primary_agent_id,
          563 |     sessionMetadata: row.session_metadata || {},

      at id (src/lib/orchestration.ts:560:13)
      at mapSessionRow (src/lib/orchestration.ts:70:23)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:197:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ updateOrchestrationSession ‚Ä∫ throws error when session not found

    expect(received).rejects.toThrow(expected)

    Expected substring: "Session nonexistent-session not found"

    Received function did not throw

      271 |             status: 'completed'
      272 |           })
    > 273 |         ).rejects.toThrow('Session nonexistent-session not found');
          |                   ^
      274 |       });
      275 |     });
      276 |

      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:273:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Agent Communication ‚Ä∫ sendAgentMessage ‚Ä∫ throws error when session is inactive

    expect(received).rejects.toThrow(expected)

    Expected substring: "Cannot send message to inactive session"

    Received function did not throw

      615 |             payload: {}
      616 |           })
    > 617 |         ).rejects.toThrow('Cannot send message to inactive session');
          |                   ^
      618 |       });
      619 |     });
      620 |

      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:617:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ handles hierarchical orchestration without workers

    expect(received).toBe(expected) // Object.is equality

    Expected: "hierarchical"
    Received: undefined

      854 |       });
      855 |
    > 856 |       expect(result.session.orchestrationType).toBe('hierarchical');
          |                                                ^
      857 |     });
      858 |
      859 |     it('handles swarm with more than 10 agents', async () => {

      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:856:48)

FAIL tests/unit/teams-routes-simple.test.ts
  ‚óè Teams Routes ‚Ä∫ POST /teams ‚Ä∫ should create team successfully

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/invites ‚Ä∫ should send invite successfully

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/invites ‚Ä∫ should prevent inviting existing members

    Expected status 400 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/accept-invite ‚Ä∫ should accept invite successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ DELETE /teams/:teamId/invites/:inviteId ‚Ä∫ should cancel invite successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ DELETE /teams/:teamId/members/:memberId ‚Ä∫ should remove member successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/leave ‚Ä∫ should allow member to leave team

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/leave ‚Ä∫ should prevent owner from leaving team

    Expected status 400 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/transfer-ownership ‚Ä∫ should transfer ownership successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/unit/registry.store.test.ts
  ‚óè registry store ‚Ä∫ publishAgent inserts registry and version rows

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      131 |         return { rows: [versionRow] };
      132 |       }
    > 133 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      134 |     });
      135 |
      136 |     const result = await registry.publishAgent(payload);

      at tests/unit/registry.store.test.ts:133:13
      at src/lib/registry.ts:383:36
      at tests/unit/registry.store.test.ts:12:73
      at src/lib/registry.ts:382:98
      at f (src/lib/observability.ts:113:24)
      at Object.publishAgent (src/lib/registry.ts:382:45)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:136:20)

  ‚óè registry store ‚Ä∫ getAgent returns null when not found

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      164 |         return { rows: [] };
      165 |       }
    > 166 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      167 |     });
      168 |
      169 |     const result = await registry.getAgent('missing-agent');

      at tests/unit/registry.store.test.ts:166:13
      at src/lib/registry.ts:367:10
      at f (src/lib/observability.ts:113:24)
      at Object.getAgent (src/lib/registry.ts:366:55)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:169:20)

  ‚óè registry store ‚Ä∫ rollbackAgent activates target version

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      377 |         return { rows: versionRows };
      378 |       }
    > 379 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      380 |     });
      381 |
      382 |     const detail = await registry.rollbackAgent('doc-writer', '1.0.0');

      at tests/unit/registry.store.test.ts:379:13
      at src/lib/registry.ts:367:10
      at f (src/lib/observability.ts:113:24)
      at getAgent (src/lib/registry.ts:366:55)
      at src/lib/registry.ts:480:20
      at timeIt (src/lib/observability.ts:113:18)
      at Object.rollbackAgent (src/lib/registry.ts:466:33)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:382:20)

{"level":50,"time":1760317196605,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","err":{"type":"Error","message":"relation \"nofx.agent_registry\" does not exist","stack":"Error: relation \"nofx.agent_registry\" does not exist\n    at /Volumes/Development/nofx-local-starter/tests/unit/registry.store.test.ts:518:13\n    at /Volumes/Development/nofx-local-starter/node_modules/jest-environment-node/node_modules/jest-mock/build/index.js:397:39\n    at /Volumes/Development/nofx-local-starter/node_modules/jest-environment-node/node_modules/jest-mock/build/index.js:404:13\n    at mockConstructor (/Volumes/Development/nofx-local-starter/node_modules/jest-environment-node/node_modules/jest-mock/build/index.js:148:19)\n    at ensureSchema (/Volumes/Development/nofx-local-starter/src/lib/registry.ts:32:16)\n    at Object.ensureSchema [as listAgents] (/Volumes/Development/nofx-local-starter/src/lib/registry.ts:326:9)\n    at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/unit/registry.store.test.ts:521:27)\n    at Promise.finally.completed (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)\n    at _callCircusTest (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processImmediate (node:internal/timers:453:9)\n    at process.callbackTrampoline (node:internal/async_hooks:130:17)\n    at _runTest (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:947:3)\n    at /Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n    at run (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)\n    at jestAdapter (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Development/nofx-local-starter/node_modules/jest-config/node_modules/jest-runner/build/index.js:343:7)"},"msg":"registry.ensureSchema.missing"}
FAIL src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts
  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event with all required fields

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-123/events/event-uuid-123.json", ObjectContaining {"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"stepName": "Execute Test", "tool": "test_runner"}, "run_id": "run-123", "type": "step.started"}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"stepName": "Execute Test", "tool": "test_runner"}, "run_id": "run-123", "type": "step.started"}]

    Number of calls: 1

      78 |       await service.recordEvent(runId, type, payload);
      79 |
    > 80 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
         |                                         ^
      81 |         '/workspace/runs/run-123/events/event-uuid-123.json',
      82 |         expect.objectContaining({
      83 |           id: 'event-uuid-123',

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:80:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event with step ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"step_id": "step-456"}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"result": "success"}, "run_id": "run-123", "step_id": "step-456", "type": "step.completed"}]

    Number of calls: 1

       95 |       await service.recordEvent('run-123', 'step.completed', { result: 'success' }, stepId);
       96 |
    >  97 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
       98 |         expect.any(String),
       99 |         expect.objectContaining({
      100 |           step_id: stepId

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:97:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event without step ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectNotContaining {"step_id": Anything}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-123", "type": "run.started"}]

    Number of calls: 1

      106 |       await service.recordEvent('run-123', 'run.started', {});
      107 |
    > 108 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      109 |         expect.any(String),
      110 |         expect.not.objectContaining({
      111 |           step_id: expect.anything()

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:108:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ ensures events directory exists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-789/events"
    Received: "/workspace/runs/run-789"

    Number of calls: 1

      117 |       await service.recordEvent('run-789', 'test.event', {});
      118 |
    > 119 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-789/events');
          |                                         ^
      120 |     });
      121 |
      122 |     it('handles default empty payload', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:119:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles default empty payload

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {}}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-123", "type": "simple.event"}]

    Number of calls: 1

      123 |       await service.recordEvent('run-123', 'simple.event');
      124 |
    > 125 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      126 |         expect.any(String),
      127 |         expect.objectContaining({
      128 |           payload: {}

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:125:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles null payload

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": null}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": null, "run_id": "run-123", "type": "null.event"}]

    Number of calls: 1

      134 |       await service.recordEvent('run-123', 'null.event', null);
      135 |
    > 136 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      137 |         expect.any(String),
      138 |         expect.objectContaining({
      139 |           payload: null

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:136:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles complex nested payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"level1": {"level2": {"level3": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": "value"}}}}, "metadata": {"timestamp": 1705320000000, "user": "test-user"}}}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"level1": {"level2": {"level3": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": "value"}}}}, "metadata": {"timestamp": 1705320000000, "user": "test-user"}}, "run_id": "run-123", "type": "complex.event"}]

    Number of calls: 1

      161 |       await service.recordEvent('run-123', 'complex.event', complexPayload);
      162 |
    > 163 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      164 |         expect.any(String),
      165 |         expect.objectContaining({
      166 |           payload: complexPayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:163:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles array payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": [1, 2, 3, {"key": "value"}]}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": [1, 2, 3, {"key": "value"}], "run_id": "run-123", "type": "array.event"}]

    Number of calls: 1

      174 |       await service.recordEvent('run-123', 'array.event', arrayPayload);
      175 |
    > 176 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      177 |         expect.any(String),
      178 |         expect.objectContaining({
      179 |           payload: arrayPayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:176:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ generates unique IDs for multiple events

    expect(received).toMatchObject(expected)

    Expected: {"id": "uuid-1"}
    Received: [{"created_at": "2024-01-15T12:00:00.000Z", "id": "uuid-1", "payload": {}, "run_id": "run-1", "type": "event.1"}]

      193 |
      194 |       const calls = mockFileOps.writeJsonFile.mock.calls;
    > 195 |       expect(calls[0][1]).toMatchObject({ id: 'uuid-1' });
          |                           ^
      196 |       expect(calls[1][1]).toMatchObject({ id: 'uuid-2' });
      197 |       expect(calls[2][1]).toMatchObject({ id: 'uuid-3' });
      198 |     });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:195:27)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles very large payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"data": [{"id": 0, "value": "item-0"}, {"id": 1, "value": "item-1"}, {"id": 2, "value": "item-2"}, {"id": 3, "value": "item-3"}, {"id": 4, "value": "item-4"}, {"id": 5, "value": "item-5"}, {"id": 6, "value": "item-6"}, {"id": 7, "value": "item-7"}, {"id": 8, "value": "item-8"}, {"id": 9, "value": "item-9"}, ‚Ä¶]}}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"data": [{"id": 0, "value": "item-0"}, {"id": 1, "value": "item-1"}, {"id": 2, "value": "item-2"}, {"id": 3, "value": "item-3"}, {"id": 4, "value": "item-4"}, {"id": 5, "value": "item-5"}, {"id": 6, "value": "item-6"}, {"id": 7, "value": "item-7"}, {"id": 8, "value": "item-8"}, {"id": 9, "value": "item-9"}, ‚Ä¶]}, "run_id": "run-1", "type": "large.event"}]

    Number of calls: 1

      230 |       await service.recordEvent('run-1', 'large.event', largePayload);
      231 |
    > 232 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      233 |         expect.any(String),
      234 |         expect.objectContaining({
      235 |           payload: largePayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:232:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles special characters in event type

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": "event.type-with_special.chars"}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.type-with_special.chars"}]

    Number of calls: 1

      241 |       await service.recordEvent('run-1', 'event.type-with_special.chars', {});
      242 |
    > 243 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      244 |         expect.any(String),
      245 |         expect.objectContaining({
      246 |           type: 'event.type-with_special.chars'

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:243:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ generates consistent timestamps

    expect(received).toMatchObject(expected)

    Expected: {"created_at": "2024-01-15T12:00:00.000Z"}
    Received: [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.1"}]

      258 |
      259 |       const calls = mockFileOps.writeJsonFile.mock.calls;
    > 260 |       expect(calls[0][1]).toMatchObject({ created_at: '2024-01-15T12:00:00.000Z' });
          |                           ^
      261 |       expect(calls[1][1]).toMatchObject({ created_at: '2024-01-15T12:00:01.000Z' });
      262 |     });
      263 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:260:27)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ returns empty array when no events exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-123/events"

    Number of calls: 0

      270 |
      271 |       expect(result).toEqual([]);
    > 272 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-123/events');
          |                                         ^
      273 |     });
      274 |
      275 |     it('lists all events in a run', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:272:41)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ lists all events in a run

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      292 |       const result = await service.listEvents('run-123');
      293 |
    > 294 |       expect(result).toHaveLength(3);
          |                      ^
      295 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-2', 'event-3']);
      296 |     });
      297 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:294:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ sorts events by created_at in ascending order (chronological)

    expect(received).toEqual(expected) // deep equality

    - Expected  - 5
    + Received  + 1

    - Array [
    -   "event-1",
    -   "event-2",
    -   "event-3",
    - ]
    + Array []

      315 |       const result = await service.listEvents('run-123');
      316 |
    > 317 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-2', 'event-3']);
          |                                     ^
      318 |     });
      319 |
      320 |     it('skips non-JSON files', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:317:37)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ skips non-JSON files

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      332 |       const result = await service.listEvents('run-123');
      333 |
    > 334 |       expect(result).toHaveLength(2);
          |                      ^
      335 |       expect(mockFileOps.readJsonFile).toHaveBeenCalledTimes(2);
      336 |     });
      337 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:334:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ skips invalid JSON files

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      349 |       const result = await service.listEvents('run-123');
      350 |
    > 351 |       expect(result).toHaveLength(2);
          |                      ^
      352 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-3']);
      353 |     });
      354 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:351:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ ensures events directory exists before reading

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-456/events"

    Number of calls: 0

      356 |       await service.listEvents('run-456');
      357 |
    > 358 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-456/events');
          |                                         ^
      359 |     });
      360 |
      361 |     it('handles events with same timestamp', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:358:41)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ handles events with same timestamp

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      379 |       const result = await service.listEvents('run-123');
      380 |
    > 381 |       expect(result).toHaveLength(3);
          |                      ^
      382 |       // Order should be stable even with same timestamps
      383 |     });
      384 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:381:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ handles large number of events efficiently

    expect(received).toHaveLength(expected)

    Expected length: 1000
    Received length: 0
    Received array:  []

      399 |       const result = await service.listEvents('run-123');
      400 |
    > 401 |       expect(result).toHaveLength(1000);
          |                      ^
      402 |     });
      403 |   });
      404 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:401:22)

  ‚óè EventManagementService ‚Ä∫ Concurrent Operations ‚Ä∫ handles concurrent event listing

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      433 |
      434 |       expect(results).toHaveLength(3);
    > 435 |       results.forEach(result => expect(result).toHaveLength(1));
          |                                                ^
      436 |     });
      437 |
      438 |     it('handles concurrent recording and listing', async () => {

      at src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:435:48
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:435:15)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles empty event type

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": ""}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": ""}]

    Number of calls: 1

      502 |       await service.recordEvent('run-1', '', {});
      503 |
    > 504 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      505 |         expect.any(String),
      506 |         expect.objectContaining({
      507 |           type: ''

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:504:41)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles extremely long event types

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": "event.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}]

    Number of calls: 1

      515 |       await service.recordEvent('run-1', longType, {});
      516 |
    > 517 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      518 |         expect.any(String),
      519 |         expect.objectContaining({
      520 |           type: longType

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:517:41)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles events with undefined step_id

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectNotContaining {"step_id": Anything}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "test.event"}]

    Number of calls: 1

      539 |       await service.recordEvent('run-1', 'test.event', {}, undefined);
      540 |
    > 541 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      542 |         expect.any(String),
      543 |         expect.not.objectContaining({
      544 |           step_id: expect.anything()

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:541:41)

  ‚óè EventManagementService ‚Ä∫ Data Integrity ‚Ä∫ preserves payload structure exactly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": {"value": "test"}}, "null": null, "number": 42, "string": "value"}}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": {"value": "test"}}, "null": null, "number": 42, "string": "value"}, "run_id": "run-1", "type": "test.event"}]

    Number of calls: 1

      561 |       await service.recordEvent('run-1', 'test.event', payload);
      562 |
    > 563 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      564 |         expect.any(String),
      565 |         expect.objectContaining({
      566 |           payload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:563:41)

  ‚óè EventManagementService ‚Ä∫ Data Integrity ‚Ä∫ maintains event ordering by timestamp

    expect(received).toEqual(expected) // deep equality

    - Expected  - 6
    + Received  + 1

    - Array [
    -   "e1",
    -   "e2",
    -   "e3",
    -   "e4",
    - ]
    + Array []

      589 |
      590 |       // Should be sorted chronologically
    > 591 |       expect(result.map(e => e.id)).toEqual(['e1', 'e2', 'e3', 'e4']);
          |                                     ^
      592 |     });
      593 |   });
      594 | });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:591:37)

FAIL src/shared/responses/__tests__/archive.test.ts
  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Run Management ‚Ä∫ should update run status

    expect(received).toBeGreaterThan(expected)

    Expected: > 1760317196765
    Received:   1760317196765

      171 |       expect(updated.status).toBe('completed');
      172 |       expect(updated.result).toBeDefined();
    > 173 |       expect(updated.updatedAt.getTime()).toBeGreaterThan(created.createdAt.getTime());
          |                                           ^
      174 |     });
      175 |
      176 |     it('should throw error when updating non-existent run', () => {

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:173:43)

  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Run Management ‚Ä∫ should list runs sorted by creation date

    expect(received).toBe(expected) // Object.is equality

    Expected: "run-3"
    Received: "run-1"

      196 |       expect(listed).toHaveLength(3);
      197 |       // Should be sorted by creation date descending (newest first)
    > 198 |       expect(listed[0].runId).toBe('run-3');
          |                               ^
      199 |       expect(listed[1].runId).toBe('run-2');
      200 |       expect(listed[2].runId).toBe('run-1');
      201 |     });

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:198:31)

  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Delegation Management ‚Ä∫ should record delegation

    expect(received).toContain(expected) // indexOf

    Expected value: {"arguments": {"param": "value"}, "callId": "call-1", "completedAt": undefined, "error": undefined, "linkedRunId": "linked-run", "output": {"result": "success"}, "requestedAt": 2025-10-13T00:59:56.801Z, "status": "requested", "toolName": "test-tool"}
    Received array: [{"arguments": {"param": "value"}, "callId": "call-1", "completedAt": undefined, "error": undefined, "linkedRunId": "linked-run", "output": {"result": "success"}, "requestedAt": 2025-10-13T00:59:56.801Z, "status": "requested", "toolName": "test-tool"}]

    Looks like you wanted to test for object/array equality with the stricter `toContain` matcher. You probably need to use `toContainEqual` instead.

      498 |
      499 |       const run = archive.getRun('test-run');
    > 500 |       expect(run!.delegations).toContain(recorded);
          |                                ^
      501 |     });
      502 |
      503 |     it('should update existing delegation', () => {

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:500:32)

FAIL src/billing/__tests__/stripe.test.ts
  ‚óè Stripe Utilities Tests ‚Ä∫ Customer Management ‚Ä∫ createOrRetrieveCustomer ‚Ä∫ should return existing customer ID

    expect(received).toBe(expected) // Object.is equality

    Expected: "cus_existing123"
    Received: null

      137 |
      138 |         const result = await createOrRetrieveCustomer('user123');
    > 139 |         expect(result).toBe(existingCustomerId);
          |                        ^
      140 |       });
      141 |
      142 |       it('should create new customer when none exists', async () => {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:139:24)

  ‚óè Stripe Utilities Tests ‚Ä∫ Customer Management ‚Ä∫ createOrRetrieveCustomer ‚Ä∫ should create new customer when none exists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"address": {"city": "Test City"}, "email": "test@example.com", "metadata": {"supabase_user_id": "user123"}, "name": "Test User"}

    Number of calls: 0

      163 |         const result = await createOrRetrieveCustomer(userId, email);
      164 |
    > 165 |         expect(mockStripeInstance.customers.create).toHaveBeenCalledWith({
          |                                                     ^
      166 |           email: email,
      167 |           metadata: { supabase_user_id: userId },
      168 |           name: 'Test User',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:165:53)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ upsertProduct ‚Ä∫ should sync product to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "description": "A test product", "id": "prod_123", "image": "https://example.com/image.png", "metadata": {"key": "value"}, "name": "Test Product"}

    Number of calls: 0

      208 |         await upsertProduct(product);
      209 |
    > 210 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      211 |           id: 'prod_123',
      212 |           active: true,
      213 |           name: 'Test Product',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:210:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ upsertProduct ‚Ä∫ should handle product without image

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "description": "A test product", "id": "prod_123", "image": null, "metadata": {}, "name": "Test Product"}

    Number of calls: 0

      230 |         await upsertProduct(product);
      231 |
    > 232 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      233 |           id: 'prod_123',
      234 |           active: true,
      235 |           name: 'Test Product',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:232:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ deleteProduct ‚Ä∫ should delete product from database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "id", "prod_123"

    Number of calls: 0

      271 |         await deleteProduct('prod_123');
      272 |
    > 273 |         expect(mockSupabase.from().delete().eq).toHaveBeenCalledWith('id', 'prod_123');
          |                                                 ^
      274 |       });
      275 |
      276 |       it('should handle database errors gracefully', async () => {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:273:49)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should sync recurring price to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "currency": "usd", "description": "Monthly Plan", "id": "price_123", "interval": "month", "interval_count": 1, "metadata": {"key": "value"}, "product_id": "prod_123", "trial_period_days": 7, "type": "recurring", "unit_amount": 2000}

    Number of calls: 0

      303 |         await upsertPrice(price);
      304 |
    > 305 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      306 |           id: 'price_123',
      307 |           product_id: 'prod_123',
      308 |           active: true,

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:305:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should sync one-time price to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "currency": "usd", "description": null, "id": "price_456", "interval": null, "interval_count": null, "metadata": {}, "product_id": "prod_123", "trial_period_days": null, "type": "one_time", "unit_amount": 5000}

    Number of calls: 0

      331 |         await upsertPrice(price);
      332 |
    > 333 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      334 |           id: 'price_456',
      335 |           product_id: 'prod_123',
      336 |           active: true,

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:333:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should handle price without unit_amount

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"unit_amount": 0}

    Number of calls: 0

      358 |         await upsertPrice(price);
      359 |
    > 360 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith(
          |                                            ^
      361 |           expect.objectContaining({
      362 |             unit_amount: 0,
      363 |           })

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:360:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ deletePrice ‚Ä∫ should delete price from database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "id", "price_123"

    Number of calls: 0

      370 |         await deletePrice('price_123');
      371 |
    > 372 |         expect(mockSupabase.from().delete().eq).toHaveBeenCalledWith('id', 'price_123');
          |                                                 ^
      373 |       });
      374 |     });
      375 |   });

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:372:49)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should sync subscription to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"expand": ["default_payment_method", "items.data.price.product"]}

    Number of calls: 0

      419 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      420 |
    > 421 |         expect(mockStripeInstance.subscriptions.retrieve).toHaveBeenCalledWith(
          |                                                           ^
      422 |           subscriptionId,
      423 |           { expand: ['default_payment_method', 'items.data.price.product'] }
      424 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:421:59)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should update user payment method

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"payment_method": {"card": {"brand": "visa", "exp_month": 12, "exp_year": 2025, "last4": "4242"}, "type": "card"}}

    Number of calls: 0

      455 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      456 |
    > 457 |         expect(mockSupabase.from().update).toHaveBeenCalledWith({
          |                                            ^
      458 |           payment_method: {
      459 |             type: 'card',
      460 |             card: {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:457:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should handle missing subscription items

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"price_id": undefined, "quantity": 1}

    Number of calls: 0

      493 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      494 |
    > 495 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith(
          |                                            ^
      496 |           expect.objectContaining({
      497 |             price_id: undefined,
      498 |             quantity: 1

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:495:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ cancelSubscription ‚Ä∫ should cancel subscription immediately

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": false}

    Number of calls: 0

      512 |         const result = await cancelSubscription(subscriptionId, true);
      513 |
    > 514 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      515 |           subscriptionId,
      516 |           { cancel_at_period_end: false }
      517 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:514:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ cancelSubscription ‚Ä∫ should cancel subscription at period end

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": true}

    Number of calls: 0

      528 |         const result = await cancelSubscription(subscriptionId, false);
      529 |
    > 530 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      531 |           subscriptionId,
      532 |           { cancel_at_period_end: true }
      533 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:530:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ resumeSubscription ‚Ä∫ should resume subscription

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": false}

    Number of calls: 0

      555 |         const result = await resumeSubscription(subscriptionId);
      556 |
    > 557 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      558 |           subscriptionId,
      559 |           { cancel_at_period_end: false }
      560 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:557:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Checkout and Portal ‚Ä∫ createCheckoutSession ‚Ä∫ should create checkout session with customer

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"allow_promotion_codes": true, "cancel_url": "https://example.com/cancel", "customer": "cus_123", "line_items": [{"price": "price_123", "quantity": 1}], "mode": "subscription", "payment_method_types": ["card"], "subscription_data": {"metadata": {"supabase_user_id": "user123"}, "trial_period_days": 14}, "success_url": "https://example.com/success"}

    Number of calls: 0

      597 |         );
      598 |
    > 599 |         expect(mockStripeInstance.checkout.sessions.create).toHaveBeenCalledWith({
          |                                                             ^
      600 |           customer: 'cus_123',
      601 |           mode: 'subscription',
      602 |           payment_method_types: ['card'],

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:599:61)

  ‚óè Stripe Utilities Tests ‚Ä∫ Checkout and Portal ‚Ä∫ createPortalSession ‚Ä∫ should create portal session

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"customer": "cus_123", "return_url": "https://example.com/return"}

    Number of calls: 0

      672 |         const result = await createPortalSession(userId, returnUrl);
      673 |
    > 674 |         expect(mockStripeInstance.billingPortal.sessions.create).toHaveBeenCalledWith({
          |                                                                  ^
      675 |           customer: customerId,
      676 |           return_url: returnUrl
      677 |         });

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:674:66)

FAIL src/lib/__tests__/db.test.ts
  ‚óè db ‚Ä∫ query ‚Ä∫ logs successful query execution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"latencyMs": 50, "status": "ok"}, "db.query"

    Number of calls: 0

      126 |       await query('SELECT * FROM users');
      127 |
    > 128 |       expect(mockLog.info).toHaveBeenCalledWith(
          |                            ^
      129 |         { status: 'ok', latencyMs: 50 },
      130 |         'db.query'
      131 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:128:28)

  ‚óè db ‚Ä∫ query ‚Ä∫ handles query errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
        "err": [Error: Connection failed],
        "latencyMs": 50,
    +   "queryPreview": "SELECT * FROM users",
        "status": "error",
      },
      "db.query.error",

    Number of calls: 1

      149 |       await expect(query('SELECT * FROM users')).rejects.toThrow('Connection failed');
      150 |
    > 151 |       expect(mockLog.error).toHaveBeenCalledWith(
          |                             ^
      152 |         { status: 'error', latencyMs: 50, err: error },
      153 |         'db.query.error'
      154 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:151:29)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ rolls back on error

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      260 |         .mockResolvedValueOnce({ rows: [] }); // ROLLBACK
      261 |
    > 262 |       await expect(
          |             ^
      263 |         withTransaction(async () => {
      264 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      265 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:262:13)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ handles rollback errors gracefully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      278 |         .mockRejectedValueOnce(new Error('Rollback failed')); // ROLLBACK fails
      279 |
    > 280 |       await expect(
          |             ^
      281 |         withTransaction(async () => {
      282 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      283 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:280:13)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ releases client even if commit fails

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      319 |         .mockRejectedValueOnce(new Error('Commit failed')); // COMMIT fails
      320 |
    > 321 |       await expect(
          |             ^
      322 |         withTransaction(async () => {
      323 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      324 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:321:13)

  ‚óè db ‚Ä∫ Performance ‚Ä∫ measures query latency

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      510 |
      511 |       // Should have logged with latency measurement
    > 512 |       expect(mockLog.info).toHaveBeenCalled();
          |                            ^
      513 |       expect(mockMetrics.dbQueryDuration.observe).toHaveBeenCalled();
      514 |     });
      515 |

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:512:28)

  ‚óè db ‚Ä∫ Performance ‚Ä∫ tracks query metrics

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"op": "query"}, Any<Number>

    Number of calls: 0

      520 |
      521 |       // Verify metrics are being tracked
    > 522 |       expect(mockMetrics.dbQueryDuration.observe).toHaveBeenCalledWith(
          |                                                   ^
      523 |         { op: 'query' },
      524 |         expect.any(Number)
      525 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:522:51)

FAIL tests/unit/handlers/workspace_write.test.ts
  ‚óè workspace_write handler ‚Ä∫ run - error handling ‚Ä∫ should fail with invalid source specification edge case

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"error": StringContaining "Invalid source specification"}, "status": "failed"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "error": StringContaining "Invalid source specification",
            -   },
            -   "status": "failed",
            +   "started_at": "2025-10-13T00:59:57.183Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:57.183Z",
                "outputs": Object {
            -     "error": StringContaining "Invalid source specification",
            +     "error": "workspace:write requires either sourceArtifact or (fromStep + artifactName)",
                },
                "status": "failed",
              },

    Number of calls: 2

      384 |       await handler.run({ runId: 'run-456', step });
      385 |
    > 386 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      387 |         status: 'failed',
      388 |         outputs: { error: expect.stringContaining('Invalid source specification') },
      389 |         ended_at: expect.any(String)

      at Object.<anonymous> (tests/unit/handlers/workspace_write.test.ts:386:36)

FAIL src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts
  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents path traversal with .. in run ID

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      75 |         expect(() => {
      76 |           service.getRunPath('../../etc/passwd', '/workspace');
    > 77 |         }).toThrow(/Path traversal detected/);
         |            ^
      78 |       });
      79 |
      80 |       it('prevents absolute paths escaping workspace', () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:77:12)

  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents absolute paths escaping workspace

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      85 |         expect(() => {
      86 |           service.getRunPath('/etc/passwd', '/workspace');
    > 87 |         }).toThrow(/Path traversal detected/);
         |            ^
      88 |       });
      89 |
      90 |       it('allows paths equal to workspace root', () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:87:12)

  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents escaping expected subdirectory for steps

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      107 |         expect(() => {
      108 |           service.getStepPath('run-id', '../artifacts/evil', '/workspace');
    > 109 |         }).toThrow(/Path traversal detected/);
          |            ^
      110 |       });
      111 |     });
      112 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:109:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Runs ‚Ä∫ getRunPath ‚Ä∫ validates path is within workspace

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      300 |         expect(() => {
      301 |           service.getRunPath('../../escape', '/workspace');
    > 302 |         }).toThrow(/Path traversal detected/);
          |            ^
      303 |       });
      304 |     });
      305 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:302:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Runs ‚Ä∫ getRunDirectory ‚Ä∫ validates directory is within runs

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      318 |         expect(() => {
      319 |           service.getRunDirectory('../evil', '/workspace');
    > 320 |         }).toThrow(/Path traversal detected/);
          |            ^
      321 |       });
      322 |     });
      323 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:320:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Steps ‚Ä∫ getStepPath ‚Ä∫ validates path is within run steps directory

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      346 |         expect(() => {
      347 |           service.getStepPath('run-123', '../../../etc/passwd', '/workspace');
    > 348 |         }).toThrow(/Path traversal detected/);
          |            ^
      349 |       });
      350 |     });
      351 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:348:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Events ‚Ä∫ getEventPath ‚Ä∫ validates path security

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      374 |         expect(() => {
      375 |           service.getEventPath('run-123', '../../evil', '/workspace');
    > 376 |         }).toThrow(/Path traversal detected/);
          |            ^
      377 |       });
      378 |     });
      379 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:376:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Artifacts ‚Ä∫ getArtifactPath ‚Ä∫ prevents path traversal in artifact ID

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      402 |         expect(() => {
      403 |           service.getArtifactPath('run-123', '../../escape', '/workspace');
    > 404 |         }).toThrow(/Path traversal detected/);
          |            ^
      405 |       });
      406 |     });
      407 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:404:12)

FAIL src/lib/store/FileSystemStore/__tests__/RunManagementService.test.ts
  ‚óè RunManagementService ‚Ä∫ updateRun ‚Ä∫ throws error when run not found

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      256 |       mockFileOps.readJsonFile.mockResolvedValue(null);
      257 |
    > 258 |       await expect(
          |             ^
      259 |         service.updateRun('non-existent-id', { status: 'completed' })
      260 |       ).rejects.toThrow('Run non-existent-id not found');
      261 |     });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/RunManagementService.test.ts:258:13)

FAIL src/lib/queue/__tests__/RedisAdapter.test.ts
  ‚óè RedisQueueAdapter - Integration Tests ‚Ä∫ Error Handling ‚Ä∫ handles queue creation errors gracefully

    expect(received).toThrow(expected)

    Expected substring: "Queue creation failed"

    Received function did not throw

      274 |       expect(() => {
      275 |         new RedisQueueAdapter();
    > 276 |       }).toThrow('Queue creation failed');
          |          ^
      277 |     });
      278 |
      279 |     it('handles worker creation errors gracefully', () => {

      at Object.<anonymous> (src/lib/queue/__tests__/RedisAdapter.test.ts:276:10)

FAIL tests/unit/registry.api.test.ts
  ‚óè registry API routes ‚Ä∫ GET /api/agents returns json payload

    TypeError: Cannot read properties of undefined (reading 'authorization')

      23 | export async function getTenantContext(req: VercelRequest): Promise<TenantContext | null> {
      24 |   // Get auth token from Authorization header or cookie
    > 25 |   const authHeader = req.headers.authorization;
         |                                  ^
      26 |   const token = authHeader?.replace('Bearer ', '');
      27 |
      28 |   if (!token) {

      at authorization (src/lib/tenant-auth.ts:25:34)
      at handler (api/agents/index.ts:30:47)
      at api/_lib/cors.ts:84:12
      at Object.<anonymous> (tests/unit/registry.api.test.ts:45:11)

  ‚óè registry API routes ‚Ä∫ POST /api/agents/publish validates body and marks inbox

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 401

    Number of calls: 1

      85 |     await handler(req, res);
      86 |
    > 87 |     expect(res.status).toHaveBeenCalledWith(201);
         |                        ^
      88 |     expect(res.body).toHaveProperty('agent');
      89 |     expect(inboxMarkIfNew).toHaveBeenCalledWith('registry:agent:doc-writer:1.0.0');
      90 |     expect(inboxDelete).toHaveBeenCalledWith('registry:agent:doc-writer:1.0.0');

      at Object.<anonymous> (tests/unit/registry.api.test.ts:87:24)

  ‚óè registry API routes ‚Ä∫ POST /api/agents/publish skips duplicate when inbox returns false

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 202
    Received: 401

    Number of calls: 1

      127 |     await handler(req, res);
      128 |
    > 129 |     expect(res.status).toHaveBeenCalledWith(202);
          |                        ^
      130 |     expect(res.body).toEqual({ status: 'skipped', reason: 'duplicate' });
      131 |   });
      132 |

      at Object.<anonymous> (tests/unit/registry.api.test.ts:129:24)

FAIL src/lib/store/__tests__/FileSystemStore.test.ts
  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Run Management ‚Ä∫ updateRun ‚Ä∫ throws error for non-existent run

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      125 |         mockFsp.readFile.mockRejectedValue(new Error('ENOENT'));
      126 |
    > 127 |         await expect(store.updateRun('non-existent-id', { status: 'completed' }))
          |               ^
      128 |           .rejects.toThrow('Run non-existent-id not found');
      129 |       });
      130 |     });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:127:15)

  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Event Management ‚Ä∫ listEvents ‚Ä∫ lists events for a run

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      306 |         const result = await store.listEvents('run-id');
      307 |
    > 308 |         expect(result).toHaveLength(2);
          |                        ^
      309 |         expect(result[0].id).toBe('event1'); // Chronological order
      310 |       });
      311 |     });

      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:308:24)

  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Error Handling ‚Ä∫ handles malformed JSON gracefully

    expect(received).toBeUndefined()

    Received: {"created_at": "2023-01-02T00:00:00.000Z", "id": "event2"}

      329 |       const result = await store.getRun('test-id');
      330 |
    > 331 |       expect(result).toBeUndefined();
          |                      ^
      332 |     });
      333 |   });
      334 |

      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:331:22)

FAIL tests/unit/handlers/basic-mode-service.test.ts
  ‚óè BasicModeService ‚Ä∫ handleBranch ‚Ä∫ should reject invalid branch names with path traversal

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: ../../../etc/passwd"}

      151 |       };
      152 |
    > 153 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      154 |         .rejects.toThrow('Invalid branch name');
      155 |     });
      156 |

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:153:13)

  ‚óè BasicModeService ‚Ä∫ handleBranch ‚Ä∫ should reject branch names with invalid characters

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: feature/$invalid"}

      162 |       };
      163 |
    > 164 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      165 |         .rejects.toThrow('Invalid branch name');
      166 |     });
      167 |

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:164:13)

  ‚óè BasicModeService ‚Ä∫ edge cases ‚Ä∫ should reject branch name with only dots

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: .."}

      541 |       };
      542 |
    > 543 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      544 |         .rejects.toThrow('Invalid branch name');
      545 |     });
      546 |   });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:543:13)

FAIL tests/unit/worker.relay.test.ts
  ‚óè Worker Outbox Relay Tests ‚Ä∫ startOutboxRelay ‚Ä∫ starts relay in non-test environment

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has type:  function
    Received has value: [Function setTimeout]

      65 |       startOutboxRelay();
      66 |
    > 67 |       expect(setTimeout).toHaveBeenCalledWith(expect.any(Function), 1000);
         |                          ^
      68 |
      69 |       process.env.NODE_ENV = originalEnv;
      70 |     });

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:67:26)

  ‚óè Worker Outbox Relay Tests ‚Ä∫ relay tick processing ‚Ä∫ respects custom batch size

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 50
    Received: 25

    Number of calls: 1

      276 |       await jest.advanceTimersByTimeAsync(1000);
      277 |
    > 278 |       expect(mockStore.outboxListUnsent).toHaveBeenCalledWith(50);
          |                                          ^
      279 |     });
      280 |
      281 |     test('respects custom interval', async () => {

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:278:42)

  ‚óè Worker Outbox Relay Tests ‚Ä∫ relay tick processing ‚Ä∫ respects custom interval

    expect(jest.fn()).not.toHaveBeenCalled()

    Expected number of calls: 0
    Received number of calls: 1

    1: 25

      287 |       // Should not trigger at 1000ms
      288 |       await jest.advanceTimersByTimeAsync(1000);
    > 289 |       expect(mockStore.outboxListUnsent).not.toHaveBeenCalled();
          |                                              ^
      290 |
      291 |       // Should trigger at 2000ms
      292 |       await jest.advanceTimersByTimeAsync(1000);

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:289:46)

FAIL tests/api/stream.test.ts
  ‚óè Stream API Endpoint ‚Ä∫ GET /api/runs/[id]/stream ‚Ä∫ should timeout after 55 seconds

    TypeError: Cannot read properties of undefined (reading 'cookie')

      35 |   // Check old cookie-based auth
      36 |   const secret = process.env.ADMIN_SECRET || process.env.ADMIN_PASSWORD || 'dev-secret';
    > 37 |   const cookies = parseCookies(req.headers.cookie);
         |                                            ^
      38 |   const c = cookies[COOKIE_NAME];
      39 |   if (c) {
      40 |     const [value, sig] = c.split('|');

      at cookie (src/lib/auth.ts:37:44)
      at handler (api/runs/[id]/stream.ts:9:25)
      at api/_lib/cors.ts:84:12
      at Object.<anonymous> (tests/api/stream.test.ts:156:26)

  ‚óè Stream API Endpoint ‚Ä∫ GET /api/runs/[id]/stream ‚Ä∫ should handle client disconnect

    TypeError: Cannot read properties of undefined (reading 'cookie')

      35 |   // Check old cookie-based auth
      36 |   const secret = process.env.ADMIN_SECRET || process.env.ADMIN_PASSWORD || 'dev-secret';
    > 37 |   const cookies = parseCookies(req.headers.cookie);
         |                                            ^
      38 |   const c = cookies[COOKIE_NAME];
      39 |   if (c) {
      40 |     const [value, sig] = c.split('|');

      at cookie (src/lib/auth.ts:37:44)
      at handler (api/runs/[id]/stream.ts:9:25)
      at api/_lib/cors.ts:84:12
      at callHandler (tests/api/utils/testHelpers.ts:140:9)
      at Object.<anonymous> (tests/api/stream.test.ts:185:24)

FAIL tests/unit/handlers/project_init.test.ts
  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should fail when project_id is missing

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      84 |       };
      85 |
    > 86 |       await expect(projectInitHandler.run({
         |             ^
      87 |         runId: 'run-123',
      88 |         step: stepMissingProject as any
      89 |       })).rejects.toThrow('project_id is required');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:86:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should fail when project is not found

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      107 |       mockGetProject.mockResolvedValue(null);
      108 |
    > 109 |       await expect(projectInitHandler.run({
          |             ^
      110 |         runId: 'run-123',
      111 |         step: baseStep as any
      112 |       })).rejects.toThrow('Project project-456 not found');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:109:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should skip initialization when project already initialized

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "step.finished", {"workspace": "/workspace/path"}, "step-123"
    Received
           1
              "run-123",
              "step.started",
              Object {
            -   "workspace": "/workspace/path",
            +   "name": "init-project",
            +   "tool": "project_init",
              },
              "step-123",
           2
              "run-123",
              "step.finished",
              Object {
            +   "outputs": Object {
            +     "initialized": true,
            +     "message": "Project already initialized",
                  "workspace": "/workspace/path",
            +   },
              },
              "step-123",

    Number of calls: 2

      142 |
      143 |       // Should record finished event
    > 144 |       expect(mockRecordEvent).toHaveBeenCalledWith(
          |                               ^
      145 |         'run-123',
      146 |         'step.finished',
      147 |         { workspace: '/workspace/path' },

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:144:31)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should initialize project when not initialized

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": false, "name": "Test Project"}, "Initialize Test Project with ecommerce template"

    Number of calls: 0

      180 |
      181 |       // Should have auto-committed changes
    > 182 |       expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                               ^
      183 |         uninitializedProject,
      184 |         'Initialize Test Project with ecommerce template'
      185 |       );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:182:47)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should force re-initialization when force flag is set

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": true, "name": "Test Project"}, "Initialize Test Project with saas template"

    Number of calls: 0

      227 |
      228 |       // Should have auto-committed changes even if already initialized
    > 229 |       expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                               ^
      230 |         initializedProject,
      231 |         'Initialize Test Project with saas template'
      232 |       );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:229:47)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should handle workspace setup errors properly

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      280 |       mockWorkspaceManager.ensureWorkspace.mockRejectedValue(new Error('Workspace creation failed'));
      281 |
    > 282 |       await expect(projectInitHandler.run({
          |             ^
      283 |         runId: 'run-123',
      284 |         step: baseStep as any
      285 |       })).rejects.toThrow('Workspace creation failed');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:282:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should validate all supported template types

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": false, "name": "Test Project"}, "Initialize Test Project with ecommerce template"

    Number of calls: 0

      321 |         });
      322 |
    > 323 |         expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                                 ^
      324 |           project,
      325 |           `Initialize Test Project with ${template} template`
      326 |         );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:323:49)

FAIL tests/integration/database-transactions.mock.test.ts
  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should maintain referential integrity on cascade delete

    expect(received).toBe(expected) // Object.is equality

    Expected: "test-run-456"
    Received: "step-0"

       95 |       );
       96 |
    >  97 |       expect(createRun.rows[0].id).toBe(runId);
          |                                    ^
       98 |
       99 |       await query(
      100 |         'INSERT INTO step (run_id, name, tool, inputs, status, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, NOW(), NOW())',

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:97:36)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle constraint violation rollback

    expect(received).toBe(expected) // Object.is equality

    Expected: "duplicate-id"
    Received: "test-run-123"

      121 |       );
      122 |
    > 123 |       expect(firstInsert.rows[0].id).toBe('duplicate-id');
          |                                      ^
      124 |
      125 |       // Second insert fails with constraint violation
      126 |       mockQuery.mockRejectedValueOnce(

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:123:38)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle foreign key violation

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": [{"id": "step-0", "name": "test-step-1"}]}

      150 |       );
      151 |
    > 152 |       await expect(
          |             ^
      153 |         query(
      154 |           'INSERT INTO step (run_id, name, tool, inputs, status, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, NOW(), NOW())',
      155 |           ['non-existent-run-id', 'orphan-step', 'codegen', '{}', 'pending']

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:152:13)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent step creations

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: 9

      216 |
      217 |       const successful = stepCreations.filter(s => s.status === 'fulfilled');
    > 218 |       expect(successful.length).toBe(10);
          |                                 ^
      219 |     });
      220 |   });
      221 |

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:218:33)

PASS tests/unit/navigation.test.ts
PASS src/api/routes/__tests__/teams.integration.test.ts (7.434 s)
  ‚óè Console

    console.error
      Failed to create activity log: {
        code: '23503',
        details: 'Key (user_id)=(7d892b12-e113-4670-b261-07a2649e9ffc) is not present in table "users".',
        hint: null,
        message: 'insert or update on table "team_activity_logs" violates foreign key constraint "team_activity_logs_user_id_fkey"'
      }

      684 |
      685 |       if (logError || !log) {
    > 686 |         console.error('Failed to create activity log:', logError);
          |                 ^
      687 |         return;
      688 |       }
      689 |

      at Object.<anonymous> (src/api/routes/__tests__/teams.integration.test.ts:686:17)

PASS tests/integration/production-smoke.test.ts
  ‚óè Console

    console.error
      Unhandled error: {
        error: "Expected property name or '}' in JSON at position 2 (line 1 column 3)",
        stack: "SyntaxError: Expected property name or '}' in JSON at position 2 (line 1 column 3)\n" +
          '    at JSON.parse (<anonymous>)\n' +
          '    at parse (/Volumes/Development/nofx-local-starter/node_modules/body-parser/lib/types/json.js:92:19)\n' +
          '    at /Volumes/Development/nofx-local-starter/node_modules/body-parser/lib/read.js:128:18\n' +
          '    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n' +
          '    at invokeCallback (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:238:16)\n' +
          '    at done (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:227:7)\n' +
          '    at IncomingMessage.onEnd (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:287:7)\n' +
          '    at IncomingMessage.emit (node:events:518:28)\n' +
          '    at endReadableNT (node:internal/streams/readable:1698:12)\n' +
          '    at processTicksAndRejections (node:internal/process/task_queues:90:21)',
        correlationId: 'err-1760317206338-1dhlkwpas',
        url: '/runs',
        method: 'POST',
        userAgent: undefined
      }

      115 |   const correlationId = req.headers['x-correlation-id'] || `err-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
      116 |
    > 117 |   console.error('Unhandled error:', {
          |           ^
      118 |     error: error.message,
      119 |     stack: error.stack,
      120 |     correlationId,

      at error (src/api/main.ts:117:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      
      üìä Performance Metrics Summary:
        Total Requests: 1
        Average Response Time: 15.00ms
        P50 (Median): 15.00ms
        P95: 15.00ms
        P99: 15.00ms
        Min: 15.00ms
        Max: 15.00ms

      at Object.<anonymous> (tests/integration/production-smoke.test.ts:299:15)

PASS tests/unit/handlers/static-loader.test.ts
{"level":50,"time":1760317212457,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"6dc79c1f-fbef-435f-a5ce-7da886775d22","retryCount":0,"error":{"__isAuthError":true,"name":"AuthApiError","status":400,"code":"invalid_credentials"},"email":"admin@example.com","msg":"Login failed"}
{"level":50,"time":1760317212457,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"6dc79c1f-fbef-435f-a5ce-7da886775d22","retryCount":0,"error":{},"msg":"Login error"}
PASS tests/integration/error-recovery-resilience.test.ts
  ‚óè Console

    console.log
      ‚ö†Ô∏è [WARNING] Slow response time: 102.99ms

      at PerformanceMonitor.log [as emitAlert] (src/lib/performance-monitor.ts:272:13)

    console.error
      Unhandled error: {
        error: "Expected property name or '}' in JSON at position 2 (line 1 column 3)",
        stack: "SyntaxError: Expected property name or '}' in JSON at position 2 (line 1 column 3)\n" +
          '    at JSON.parse (<anonymous>)\n' +
          '    at parse (/Volumes/Development/nofx-local-starter/node_modules/body-parser/lib/types/json.js:92:19)\n' +
          '    at /Volumes/Development/nofx-local-starter/node_modules/body-parser/lib/read.js:128:18\n' +
          '    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n' +
          '    at invokeCallback (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:238:16)\n' +
          '    at done (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:227:7)\n' +
          '    at IncomingMessage.onEnd (/Volumes/Development/nofx-local-starter/node_modules/raw-body/index.js:287:7)\n' +
          '    at IncomingMessage.emit (node:events:518:28)\n' +
          '    at endReadableNT (node:internal/streams/readable:1698:12)\n' +
          '    at processTicksAndRejections (node:internal/process/task_queues:90:21)',
        correlationId: 'err-1760317212469-fm3wizrrs',
        url: '/runs',
        method: 'POST',
        userAgent: undefined
      }

      115 |   const correlationId = req.headers['x-correlation-id'] || `err-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
      116 |
    > 117 |   console.error('Unhandled error:', {
          |           ^
      118 |     error: error.message,
      119 |     stack: error.stack,
      120 |     correlationId,

      at error (src/api/main.ts:117:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      ‚ö†Ô∏è Skipping step execution test - authentication required

      at Object.<anonymous> (tests/integration/error-recovery-resilience.test.ts:232:17)

    console.log
      ‚ö†Ô∏è Skipping retry test - authentication required

      at Object.<anonymous> (tests/integration/error-recovery-resilience.test.ts:270:17)

    console.log
      Circuit breaker test: 10/10 requests succeeded

      at Object.<anonymous> (tests/integration/error-recovery-resilience.test.ts:435:15)

PASS tests/unit/handlers/gate.test.ts
PASS src/api/routes/__tests__/teams.test.ts
PASS tests/unit/bulletproof.test.ts
PASS tests/unit/handlers/loader.test.ts
PASS src/auth/middleware/__tests__/RateLimitingService.test.ts
PASS tests/unit/standard.create.unit.test.ts
{"level":50,"time":1760317223703,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"5189a0ae-d78d-4f56-a6d3-0596372d555b","runId":"8239e357-d9b1-4040-be1b-b5f1ea1572e9","stepId":"a5c9afd3-32df-4edc-a42f-fceb64f5140e","retryCount":0,"projectId":"default","error":{},"stepName":"write readme","msg":"Failed to enqueue step"}
{"level":50,"time":1760317223704,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"5189a0ae-d78d-4f56-a6d3-0596372d555b","runId":"8239e357-d9b1-4040-be1b-b5f1ea1572e9","stepId":"d65a34c3-bf0d-4845-834a-3b1d7d6acabb","retryCount":0,"projectId":"default","error":{},"stepName":"typecheck","msg":"Failed to enqueue step"}
{"level":50,"time":1760317223704,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"5189a0ae-d78d-4f56-a6d3-0596372d555b","runId":"8239e357-d9b1-4040-be1b-b5f1ea1572e9","stepId":"4730eeed-87dc-48f2-8829-9d077d0f43f9","retryCount":0,"projectId":"default","error":{},"stepName":"lint","msg":"Failed to enqueue step"}
{"level":50,"time":1760317223704,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"5189a0ae-d78d-4f56-a6d3-0596372d555b","runId":"8239e357-d9b1-4040-be1b-b5f1ea1572e9","stepId":"7ee00821-389a-4ae9-b8ce-b164d3918df3","retryCount":0,"projectId":"default","error":{},"stepName":"unit","msg":"Failed to enqueue step"}
{"level":50,"time":1760317223928,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","topic":"step.ready","jobId":3,"status":"failed","err":{"type":"Error","message":"fail","stack":"Error: fail\n    at /Volumes/Development/nofx-local-starter/src/reliability.unit.test.ts:42:15\n    at /Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:84:11"},"msg":"memq.failed"}
PASS src/reliability.unit.test.ts
PASS tests/integration/haiku-generation.test.ts
  ‚óè Console

    console.log
      ‚ö† Retrieved content differs (expected 86 chars, got 4 chars). This is okay if Supabase has cached data.

      at Object.<anonymous> (tests/integration/haiku-generation.test.ts:150:17)

PASS tests/integration/runs.api.e2e.test.ts
  ‚óè Console

    console.log
      ‚ö†Ô∏è [WARNING] Slow response time: 122.44ms

      at PerformanceMonitor.log [as emitAlert] (src/lib/performance-monitor.ts:272:13)

{"level":50,"time":1760317225986,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"b792303b-bffa-438d-a587-093169c7c160","runId":"a84fe763-560c-4f0a-8ffa-cb75c4b03a20","stepId":"7a1a6852-c2ac-4139-83c3-7c8d4bd53159","retryCount":0,"projectId":"p_kgqw5w4c","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"alter table nofx.settings add column if not exists ops jsonb not null default '{}'::jsonb","msg":"db.query.error"}
{"level":50,"time":1760317225987,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"b792303b-bffa-438d-a587-093169c7c160","runId":"a84fe763-560c-4f0a-8ffa-cb75c4b03a20","stepId":"7a1a6852-c2ac-4139-83c3-7c8d4bd53159","retryCount":0,"projectId":"p_kgqw5w4c","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
PASS tests/unit/worker.queue.adapters.test.ts
PASS tests/integration/api.test.ts
PASS tests/integration/builder.api.test.ts
PASS tests/integration/standard.preview.test.ts
FAIL tests/unit/api.idempotency.integration.test.ts
  ‚óè API Idempotency Integration ‚Ä∫ POST /runs ‚Ä∫ should handle idempotent run creation

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Idempotency Key Validation ‚Ä∫ should accept valid idempotency keys

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Error Handling ‚Ä∫ should continue processing when idempotency cache fails

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

{"level":50,"time":1760317229969,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"test-request-456","error":{},"msg":"Failed to create run"}
{"level":50,"time":1760317230003,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"test-request-456","error":{},"msg":"Failed to create run"}
{"level":50,"time":1760317230009,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","requestId":"test-request-456","error":{},"msg":"Failed to create run"}
PASS tests/unit/responses.ui.mui.test.ts
PASS tests/performance/queue-performance.test.ts
PASS tests/integration/builder.ui.test.ts
PASS src/security_paths.unit.test.ts
PASS tests/api/all-endpoints.test.ts
PASS tests/unit/worker.main.enhanced.test.ts
PASS tests/unit/email.teamDeletion.test.ts
PASS src/auth/middleware/__tests__/AuthenticationService.test.ts
PASS tests/unit/models.test.ts
PASS tests/unit/handlers/codegen_v2.test.ts
PASS tests/integration/workspace-write.integration.test.ts
PASS tests/api/health.test.ts
PASS src/worker/handlers/__tests__/git_ops.test.ts
PASS src/api/routes/__tests__/auth_v2.improved.test.ts
PASS src/api/routes/__tests__/queue.test.ts
PASS src/services/responses/runtime/__tests__/RuntimeDataService.test.ts
PASS tests/api/runs.test.ts
  ‚óè Console

    console.error
      Failed to process run steps: TypeError: (0 , observability_1.getContext) is not a function
          at mixin (/Volumes/Development/nofx-local-starter/src/lib/logger.ts:17:27)
          at Pino.write (/Volumes/Development/nofx-local-starter/node_modules/pino/lib/proto.js:210:35)
          at Pino.LOG [as error] (/Volumes/Development/nofx-local-starter/node_modules/pino/lib/tools.js:77:21)
          at processRunSteps (/Volumes/Development/nofx-local-starter/api/runs/index.ts:182:11)
          at handler (/Volumes/Development/nofx-local-starter/api/runs/index.ts:116:7)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at processImmediate (node:internal/timers:453:9)
          at process.callbackTrampoline (node:internal/async_hooks:130:17)
          at callHandler (/Volumes/Development/nofx-local-starter/tests/api/utils/testHelpers.ts:140:3)
          at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/api/runs.test.ts:125:24)

      116 |       processRunSteps(plan, runId).catch(err => {
      117 |         trace('run.create.api-step-error', { runId, error: err instanceof Error ? err.message : String(err) });
    > 118 |         console.error('Failed to process run steps:', err);
          |                 ^
      119 |       });
      120 |
      121 |       return res.status(201).json({ ...run, id: runId });

      at api/runs/index.ts:118:17

    console.error
      Failed to process run steps: TypeError: (0 , observability_1.getContext) is not a function
          at mixin (/Volumes/Development/nofx-local-starter/src/lib/logger.ts:17:27)
          at Pino.write (/Volumes/Development/nofx-local-starter/node_modules/pino/lib/proto.js:210:35)
          at Pino.LOG [as error] (/Volumes/Development/nofx-local-starter/node_modules/pino/lib/tools.js:77:21)
          at processRunSteps (/Volumes/Development/nofx-local-starter/api/runs/index.ts:182:11)
          at handler (/Volumes/Development/nofx-local-starter/api/runs/index.ts:116:7)
          at callHandler (/Volumes/Development/nofx-local-starter/tests/api/utils/testHelpers.ts:140:3)
          at Object.<anonymous> (/Volumes/Development/nofx-local-starter/tests/api/runs.test.ts:142:24)

      116 |       processRunSteps(plan, runId).catch(err => {
      117 |         trace('run.create.api-step-error', { runId, error: err instanceof Error ? err.message : String(err) });
    > 118 |         console.error('Failed to process run steps:', err);
          |                 ^
      119 |       });
      120 |
      121 |       return res.status(201).json({ ...run, id: runId });

      at api/runs/index.ts:118:17

PASS tests/unit/runStep.completion.test.ts
{"level":50,"time":1760317239421,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
{"level":50,"time":1760317239422,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
PASS src/lib/__tests__/cache.test.ts
PASS src/services/responses/__tests__/runCoordinator.test.ts
PASS tests/contract/run-detail-schema.contract.test.ts
PASS src/api/routes/__tests__/auth_v2.test.ts
PASS tests/unit/auth.test.ts
PASS src/shared/responses/archive/__tests__/RollbackService.test.ts
PASS tests/unit/policy.enforcement.test.ts
{"level":50,"time":1760317242272,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"alter table nofx.settings add column if not exists ops jsonb not null default '{}'::jsonb","msg":"db.query.error"}
{"level":50,"time":1760317242273,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
{"level":50,"time":1760317242277,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"alter table nofx.settings add column if not exists ops jsonb not null default '{}'::jsonb","msg":"db.query.error"}
{"level":50,"time":1760317242277,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
PASS tests/unit/idempotency.middleware.test.ts
PASS tests/integration/preview.test.ts
PASS tests/unit/handlers/git-validation-service.test.ts
PASS tests/unit/runner.nohandler.uses.store.test.ts
{"level":50,"time":1760317243772,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"alter table nofx.settings add column if not exists ops jsonb not null default '{}'::jsonb","msg":"db.query.error"}
{"level":50,"time":1760317243773,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
{"level":50,"time":1760317243773,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"alter table nofx.settings add column if not exists ops jsonb not null default '{}'::jsonb","msg":"db.query.error"}
{"level":50,"time":1760317243774,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","status":"error","latencyMs":0,"err":{"type":"Error","message":"Cannot use a pool after calling end on the pool","stack":"Error: Cannot use a pool after calling end on the pool\n    at /Volumes/Development/nofx-local-starter/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"},"queryPreview":"select approvals, gates, llm, ops from nofx.settings where id='default' limit 1","msg":"db.query.error"}
PASS src/middleware/__tests__/security.test.ts
PASS tests/integration/agent-sdk.test.ts
PASS src/auth/__tests__/middleware.test.ts
PASS src/shared/responses/archive/__tests__/DelegationManagementService.test.ts
PASS src/lib/store/FileSystemStore/__tests__/StepManagementService.test.ts
PASS src/lib/store/FileSystemStore/__tests__/ArtifactManagementService.test.ts
PASS src/services/responses/__tests__/runtime.test.ts
PASS src/shared/responses/__tests__/eventRouter.test.ts
PASS src/billing/stripe/__tests__/DateUtilityService.test.ts
PASS src/services/responses/__tests__/archiveStore.test.ts
PASS tests/unit/apiResponse.test.ts
PASS src/billing/stripe/__tests__/ProductManagementService.test.ts
PASS tests/api/responses.test.ts
PASS tests/unit/codegen.handler.success.test.ts
PASS tests/api/settings.test.ts
PASS src/services/responses/__tests__/streamBuffer.test.ts
PASS tests/unit/handlers/git_ops.test.ts
PASS tests/unit/queue-fixed.test.ts
PASS src/shared/responses/archive/__tests__/SafetyManagementService.test.ts
PASS tests/unit/worker.runner.test.ts
PASS src/lib/__tests__/runRecovery.test.ts
PASS src/lib/__tests__/autobackup.test.ts
PASS src/api/routes/auth_v2/__tests__/ApiKeyService.test.ts
PASS src/services/responses/runtime/__tests__/RuntimeSummaryService.test.ts
FAIL tests/unit/main.test.ts
  ‚óè Database Module Tests ‚Ä∫ handles null and special parameters

    TypeError: Cannot read properties of undefined (reading 'rows')

      117 |     // Thresholds: WARN at 100ms, ERROR at 500ms
      118 |     const queryPreview = text.substring(0, 100).replace(/\s+/g, ' ').trim();
    > 119 |     const rowCount = res.rows.length;
          |                          ^
      120 |
      121 |     if (latencyMs > 500) {
      122 |       // Critical slow query - needs immediate attention

      at rows (src/lib/db.ts:119:26)
      at Object.<anonymous> (tests/unit/main.test.ts:99:5)

PASS src/api/routes/__tests__/auth_v2.refactored.test.ts
PASS tests/unit/handlers/db_write.test.ts
PASS src/auth/middleware/__tests__/AuthorizationService.test.ts
PASS tests/api/gates.test.ts
PASS tests/security/vulnerabilities.test.ts
  ‚óè Console

    console.warn
      [security tests] API at http://localhost:3000 is unavailable (unknown error); skipping network-dependent checks.

      22 |       if (!apiUnavailable) {
      23 |         const message = error instanceof Error ? [error.message, (error as any)?.cause?.message].filter(Boolean).join(' ') : 'unknown error';
    > 24 |         console.warn(`[security tests] API at ${API_URL} is unavailable (${message || 'fetch failed'}); skipping network-dependent checks.`);
         |                 ^
      25 |       }
      26 |
      27 |       apiUnavailable = true;

      at safeFetch (tests/security/vulnerabilities.test.ts:24:17)
      at Object.<anonymous> (tests/security/vulnerabilities.test.ts:39:24)

PASS src/services/responses/runtime/__tests__/RuntimeUtilityService.test.ts
PASS src/api/routes/__tests__/auth_v2.simple.test.ts
PASS tests/unit/builder.manager.test.ts
PASS tests/unit/settings.test.ts
PASS src/services/responses/runtime/__tests__/RuntimeIncidentService.test.ts
PASS tests/unit/worker.handlers.test.ts
PASS src/api/routes/__tests__/auth_v2.fixed.test.ts
PASS tests/unit/handlers/git-pr-utils.test.ts
PASS src/services/responses/runtime/__tests__/RuntimeRetryService.test.ts
PASS tests/api/models.test.ts
PASS tests/unit/validation.test.ts
PASS tests/unit/logger.test.ts
PASS tests/api/projects.test.ts
PASS tests/unit/worker.test.ts
PASS src/billing/stripe/__tests__/SubscriptionManagementService.test.ts
PASS tests/api/backups.test.ts
PASS src/api/routes/webhooks/__tests__/WebhookValidationService.test.ts
PASS src/billing/stripe/__tests__/SessionManagementService.test.ts
PASS src/auth/middleware/__tests__/UsageTrackingService.test.ts
PASS src/billing/stripe/__tests__/CustomerManagementService.test.ts
PASS tests/unit/handlers/git-pr-edge-cases.test.ts
PASS tests/unit/builder.store.test.ts
PASS tests/integration/api.integration.test.ts
PASS src/retry_backoff.unit.test.ts
{"level":50,"time":1760317259091,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","topic":"test.backoff.1760317259091","jobId":1,"status":"failed","err":{"type":"Error","message":"boom","stack":"Error: boom\n    at /Volumes/Development/nofx-local-starter/src/retry_backoff.unit.test.ts:31:24\n    at handler (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:84:17)\n    at MemoryQueueAdapter.drain (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:121:8)\n    at drain (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:50:27)\n    at callTimer (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:744:24)\n    at doTickInner (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1312:29)\n    at doTick (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1393:20)\n    at Immediate.<anonymous> (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)\n    at processImmediate (node:internal/timers:485:21)\n    at process.callbackTrampoline (node:internal/async_hooks:130:17)"},"msg":"memq.failed"}
{"level":50,"time":1760317261091,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","topic":"test.backoff.1760317259091","jobId":2,"status":"failed","err":{"type":"Error","message":"boom","stack":"Error: boom\n    at /Volumes/Development/nofx-local-starter/src/retry_backoff.unit.test.ts:31:24\n    at handler (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:84:17)\n    at MemoryQueueAdapter.drain (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:121:8)\n    at drain (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:50:27)\n    at callTimer (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:744:24)\n    at doTickInner (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1312:29)\n    at doTick (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1393:20)\n    at Immediate.<anonymous> (/Volumes/Development/nofx-local-starter/node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)\n    at processImmediate (node:internal/timers:485:21)\n    at process.callbackTrampoline (node:internal/async_hooks:130:17)"},"msg":"memq.failed"}
PASS src/billing/stripe/__tests__/PriceManagementService.test.ts
PASS tests/unit/handlers/manual.test.ts
PASS tests/unit/responses.archive.test.ts
PASS src/observability.unit.test.ts
PASS src/auth/middleware/__tests__/OwnershipValidationService.test.ts
PASS tests/unit/artifacts.hash.test.ts
PASS tests/unit/responses.runCoordinator.test.ts
PASS tests/unit/store.idempotency.test.ts
PASS tests/unit/responses.runtime.summary.test.ts
PASS tests/unit/orchestration.test.ts
PASS tests/unit/responses.runService.test.ts
PASS tests/unit/responses.contract.test.ts
PASS tests/unit/openai.provider.test.ts
PASS tests/unit/handlers/test_echo.test.ts
PASS tests/unit/dbWrite.security.test.ts
PASS src/api/routes/__tests__/auth_v2.isolated.test.ts
PASS tests/unit/handlers/types.test.ts
FAIL tests/unit/api.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/api.test.ts[0m:[93m6[0m:[93m7[0m - [91merror[0m[90m TS2451: [0mCannot redeclare block-scoped variable 'mockApp'.

    [7m6[0m const mockApp = {
    [7m [0m [91m      ~~~~~~~[0m

      [96mtests/integration/api.integration.test.ts[0m:[93m6[0m:[93m7[0m
        [7m6[0m const mockApp = {
        [7m [0m [96m      ~~~~~~~[0m
        'mockApp' was also declared here.

PASS tests/unit/handlers/test_fail.test.ts
PASS src/api/routes/__tests__/teams.simple.test.ts
PASS tests/unit/memoryqueue.dlq.test.ts
{"level":50,"time":1760317264137,"pid":25920,"hostname":"Bens-MacBook-Pro-M4.local","topic":"step.ready","jobId":1,"status":"failed","err":{"type":"Error","message":"boom","stack":"Error: boom\n    at /Volumes/Development/nofx-local-starter/tests/unit/memoryqueue.dlq.test.ts:25:51\n    at handler (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:84:17)\n    at MemoryQueueAdapter.drain (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:121:8)\n    at Timeout.drain [as _onTimeout] (/Volumes/Development/nofx-local-starter/src/lib/queue/MemoryAdapter.ts:50:27)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)"},"msg":"memq.failed"}
PASS tests/unit/responses.eventRouter.test.ts
PASS tests/performance/registry.performance.test.ts
PASS tests/unit/devRestart.test.ts
PASS tests/unit/openai.responses.client.test.ts
PASS tests/perf/responses.load.test.ts
PASS tests/unit/store.completedAt.fallback.test.ts
PASS tests/unit/planBuilder.test.ts
PASS tests/unit/toolRegistry.test.ts
PASS tests/unit/traceLogger.test.ts
PASS src/store_inbox.unit.test.ts
PASS tests/unit/streamBuffer.test.ts
PASS tests/unit/responses.archive.rollback.test.ts
PASS tests/unit/registry.integration.service.test.ts
PASS tests/unit/historyPlanner.test.ts
PASS tests/unit/responses.archive.fs.test.ts
PASS tests/unit/rateLimitTracker.test.ts
PASS tests/unit/package-scripts-recursion.test.ts
PASS tests/unit/delegationTracker.test.ts
PASS tests/unit/conversationStateManager.test.ts
PASS tests/unit/builder.compiler.test.ts
PASS src/logger_redaction.unit.test.ts
PASS tests/unit/stripe.test.ts
PASS tests/unit/incidentLog.test.ts
PASS tests/unit/logging.test.ts
FAIL src/lib/email/__tests__/resend-client.test.ts
  ‚óè Test suite failed to run

    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m482[0m:[93m19[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m482[0m         sendEmail(basicEmailOptions)
    [7m   [0m [91m                  ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m494[0m:[93m12[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m494[0m         ...basicEmailOptions,
    [7m   [0m [91m           ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m556[0m:[93m23[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m556[0m       await sendEmail(basicEmailOptions);
    [7m   [0m [91m                      ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m573[0m:[93m23[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m573[0m       await sendEmail(basicEmailOptions);
    [7m   [0m [91m                      ~~~~~~~~~~~~~~~~~[0m

FAIL tests/unit/handlers/runs.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/handlers/runs.test.ts[0m:[93m832[0m:[93m47[0m - [91merror[0m[90m TS2554: [0mExpected 0 arguments, but got 1.

    [7m832[0m         new mockRunRecovery.StepNotFoundError('Step not found')
    [7m   [0m [91m                                              ~~~~~~~~~~~~~~~~[0m

FAIL tests/unit/teams-routes.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/teams-routes.test.ts[0m:[93m92[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { team: { id: string; name: string; slug: string; owner_id: string; subscription_status: string; trial_ends_at: any; created_at: string; }; role: string; joined_at: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m92[0m       mockSupabase.eq.mockResolvedValue({ data: mockTeams, error: null });
    [7m  [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m104[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m104[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m105[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m106[0m         error: { message: 'Database error' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m107[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m127[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Error' is not assignable to parameter of type 'never'.

    [7m127[0m       mockSupabase.eq.mockRejectedValue(new Error('Network error'));
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m137[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m137[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m158[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; slug: string; owner_id: string; billing_email: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m158[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m159[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m159[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m160[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m160[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m192[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; slug: string; owner_id: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m192[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m193[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m193[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m194[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m194[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m202[0m:[93m9[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m202[0m         call[0].billing_email !== undefined
    [7m   [0m [91m        ~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m202[0m:[93m14[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m202[0m         call[0].billing_email !== undefined
    [7m   [0m [91m             ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m204[0m:[93m14[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m204[0m       expect(insertCall[0].billing_email).toBe('test@example.com');
    [7m   [0m [91m             ~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m204[0m:[93m25[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m204[0m       expect(insertCall[0].billing_email).toBe('test@example.com');
    [7m   [0m [91m                        ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m208[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m208[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m209[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m210[0m         error: { message: 'Team creation failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m211[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m224[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m224[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m226[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m226[0m         .mockResolvedValueOnce({ data: null, error: { message: 'Member creation failed' } })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m227[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m227[0m         .mockResolvedValueOnce({ data: null, error: null }); // cleanup
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m244[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; slug: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m244[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m245[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m245[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m246[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m246[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m254[0m:[93m14[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m254[0m       expect(insertCall[0].slug).toBe('my-awesome-team');
    [7m   [0m [91m             ~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m254[0m:[93m25[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m254[0m       expect(insertCall[0].slug).toBe('my-awesome-team');
    [7m   [0m [91m                        ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m273[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; members: { id: string; role: string; user: { id: string; email: string; }; }[]; invites: any[]; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m273[0m       mockSupabase.single.mockResolvedValue({ data: mockTeam, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m284[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m284[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m285[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m286[0m         error: { message: 'Team not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m287[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { name: string; billingEmail: string; id: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m302[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m303[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m303[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m323[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m323[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m324[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m325[0m         error: { message: 'Update failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m326[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m339[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m339[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m350[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m350[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m351[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m352[0m         error: { message: 'Deletion failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m353[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m381[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m381[0m         .mockResolvedValueOnce({ data: mockTeam, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m382[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; token: string; expires_at: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m382[0m         .mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m385[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m385[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m388[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m388[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m391[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m391[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m393[0m:[93m31[0m - [91merror[0m[90m TS2554: [0mExpected 1 arguments, but got 0.

    [7m393[0m       mockSendTeamInviteEmail.mockResolvedValue();
    [7m   [0m [91m                              ~~~~~~~~~~~~~~~~~[0m

      [96mnode_modules/jest-mock/build/index.d.ts[0m:[93m181[0m:[93m21[0m
        [7m181[0m   mockResolvedValue(value: ResolveType<T>): this;
        [7m   [0m [96m                    ~~~~~~~~~~~~~~~~~~~~~[0m
        An argument for 'value' was not provided.
    [96mtests/unit/teams-routes.test.ts[0m:[93m427[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m427[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m429[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m429[0m         .mockResolvedValueOnce({ data: [existingMember], error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m430[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m430[0m         .mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m444[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m444[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m446[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m446[0m         .mockResolvedValueOnce({ data: null, error: null }) // no existing member
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m447[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; status: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m447[0m         .mockResolvedValueOnce({ data: [existingInvite], error: null }); // existing invite
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m462[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m462[0m         .mockResolvedValueOnce({ data: mockTeam, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m463[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; token: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m463[0m         .mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m465[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m465[0m         .mockResolvedValueOnce({ data: null, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m466[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m466[0m         .mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m467[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m467[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m492[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; team_id: string; email: string; role: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m492[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m495[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m495[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m498[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m498[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m501[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m501[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m512[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m512[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m513[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m514[0m         error: { message: 'Invite not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m515[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m532[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m532[0m       mockSupabase.single.mockResolvedValue({ data: expiredInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m549[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m549[0m       mockSupabase.single.mockResolvedValue({ data: acceptedInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m567[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; email: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m567[0m       mockSupabase.single.mockResolvedValue({ data: mockInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m580[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m580[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m590[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m590[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m591[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m592[0m         error: { message: 'Invite not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m593[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m612[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m612[0m         .mockResolvedValueOnce({ data: mockMember, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m613[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m613[0m         .mockResolvedValueOnce({ data: mockMember, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m614[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m614[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m631[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m631[0m       mockSupabase.single.mockResolvedValue({ data: ownerMember, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m659[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m659[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockMember, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m660[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m660[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m661[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m661[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m677[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m677[0m       mockSupabase.single.mockResolvedValue({ data: ownerMember, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m689[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m689[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m690[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m690[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m705[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m705[0m       mockSupabase.eq.mockResolvedValue({ data: [ownerMembership], error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m725[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m725[0m       mockSupabase.single.mockResolvedValueOnce({ data: newOwner, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m727[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m727[0m         .mockResolvedValueOnce({ data: null, error: null }) // update new owner
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m728[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m728[0m         .mockResolvedValueOnce({ data: null, error: null }); // update old owner
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m729[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m729[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m740[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m740[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m741[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m742[0m         error: { message: 'Member not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m743[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m829[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m829[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m831[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m831[0m         .mockResolvedValueOnce({ data: null, error: null }) // member
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m832[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m832[0m         .mockResolvedValueOnce({ data: null, error: null }); // activity log
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m843[0m:[93m31[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m843[0m       expect(activityLogCall![0]).toMatchObject({
    [7m   [0m [91m                              ~[0m

PASS tests/unit/errorHandling.test.ts
-------------------------------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------
File                                 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                      
-------------------------------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------
All files                            |   64.55 |    51.85 |   65.45 |   66.53 |                                                                                                                        
 src                                 |       0 |        0 |       0 |       0 |                                                                                                                        
  simple.ts                          |       0 |        0 |       0 |       0 | 1-17                                                                                                                   
 src/api                             |    72.5 |    64.28 |   35.48 |   73.62 |                                                                                                                        
  loader.ts                          |   93.33 |    55.55 |     100 |     100 | 9,16-17                                                                                                                
  main.ts                            |   52.47 |     40.9 |    9.09 |      53 | 55-61,66,151-200,205-218,225-227,234-240,246-252                                                                       
  planBuilder.ts                     |   92.85 |    73.13 |     100 |   98.57 | 139                                                                                                                    
 src/api/navigation                  |       0 |        0 |       0 |       0 |                                                                                                                        
  manifest.ts                        |       0 |        0 |       0 |       0 | 2-80                                                                                                                   
 src/api/routes                      |   40.26 |    25.14 |   36.06 |   43.27 |                                                                                                                        
  auth.ts                            |   26.92 |        0 |   16.66 |      28 | 7-8,11-16,19-20,23-24,30-36                                                                                            
  auth_v2.ts                         |     100 |      100 |     100 |     100 |                                                                                                                        
  backups.ts                         |   23.07 |        0 |      25 |   35.29 | 7-9,12-16,19-21                                                                                                        
  billing.ts                         |   11.53 |        0 |   11.11 |   11.53 | 17-35,43-75,83-108,116-132,140-190,198-236,244-278                                                                     
  builder.ts                         |      60 |    29.46 |    90.9 |    69.6 | 58-59,71,100-103,117,120,135-141,156-162,172-175,190-196,228-234                                                       
  dev-admin.ts                       |   33.33 |       50 |       0 |      36 | 18-30,41-55,66                                                                                                         
  dev.ts                             |   13.54 |        0 |       4 |   18.26 | 10-38,44-54,59-66,71-78,84-90,93-100,103-109,114-115,118-121,125-128,136-149,152-166                                   
  docs.ts                            |   73.68 |       50 |   33.33 |   73.68 | 34-35,39,44-47                                                                                                         
  gates.ts                           |   12.69 |        0 |   14.28 |   14.81 | 9-11,16-20,25-49,54-75                                                                                                 
  metrics.ts                         |   33.33 |        0 |      50 |   33.33 | 6-12                                                                                                                   
  models.ts                          |   11.82 |        0 |    7.14 |   13.92 | 9-11,14-20,24-35,39-78,83-115,119-121                                                                                  
  performance.ts                     |   22.53 |        0 |       0 |   22.53 | 20-28,40-50,62-72,84-94,106-114,126-134,146-162,174-193,205-214,226-234,246-264                                        
  projects.ts                        |   59.57 |    38.23 |      50 |   69.44 | 35-36,45-47,50-53,56-57                                                                                                
  public-performance.ts              |   25.49 |        0 |       0 |   25.49 | 18-19,31-50,58-67,75-86,94-105,113-122,130-148,156-177,185                                                             
  queue.ts                           |     100 |    95.45 |     100 |     100 | 28                                                                                                                     
  responses.ts                       |   99.25 |    80.61 |     100 |   99.17 | 152                                                                                                                    
  settings.ts                        |   26.47 |        0 |   16.66 |   33.33 | 11-18,22-41                                                                                                            
  super-admin.ts                     |   25.42 |        0 |       0 |   25.42 | 20-29,40-54,65-84,95-111,122-143,154-165,176-208,219-231                                                               
  teams.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  traceLog.ts                        |   29.26 |        0 |   16.66 |      30 | 8-12,19-20,24-31,47-51,55-66                                                                                           
  ui.ts                              |   54.12 |    38.88 |    64.7 |   60.21 | 19-20,27,33-41,48-51,54-55,62,67,88-102,110-146,175-187                                                                
  ui_projects.ts                     |   26.31 |        0 |   33.33 |   26.31 | 8-16,25-39                                                                                                             
  webhooks.ts                        |   52.83 |    33.33 |      80 |   52.83 | 46-118                                                                                                                 
 src/api/routes/auth_v2              |   62.04 |    43.65 |   68.75 |   62.13 |                                                                                                                        
  ApiKeyService.ts                   |   96.15 |    96.15 |     100 |   96.07 | 142-143                                                                                                                
  AuthService.ts                     |   16.12 |     6.81 |   23.07 |    16.3 | 21-117,134-156,162-259                                                                                                 
  handlers.ts                        |   78.37 |    48.21 |     100 |   78.37 | 68,94-97,111-114,121,137,160-163,170,176-177,184,190,199-202                                                           
  index.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  types.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
 src/api/routes/teams                |   65.29 |    42.94 |   85.71 |   65.76 |                                                                                                                        
  InviteService.ts                   |   27.77 |    11.42 |   55.55 |   27.77 | 15,35-93,115-146,160-194,205-250                                                                                       
  MemberService.ts                   |   51.51 |    28.12 |     100 |   51.51 | 13,43-44,73-74,107-108,115-127,143-160,188-218,263,267-271                                                             
  TeamService.ts                     |   69.11 |    55.17 |      80 |   69.23 | 70-81,141-142,169-184,219-229                                                                                          
  handlers.ts                        |   88.49 |    63.33 |     100 |   90.82 | 40,67-68,96,116,120,131,163,174,191                                                                                    
  index.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  types.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
 src/api/routes/webhooks             |   25.31 |     5.19 |   20.83 |   26.49 |                                                                                                                        
  CustomerEventService.ts            |    12.5 |        0 |       0 |    12.5 | 13-29                                                                                                                  
  EmailNotificationService.ts        |   33.33 |      100 |       0 |   33.33 | 21-39                                                                                                                  
  InvoiceEventService.ts             |   13.33 |        0 |   14.28 |   14.28 | 17-18,31-139                                                                                                           
  ProductEventService.ts             |   14.28 |        0 |       0 |   14.28 | 19-49                                                                                                                  
  SubscriptionEventService.ts        |    8.47 |        0 |    12.5 |    9.09 | 16-17,30-176                                                                                                           
  WebhookValidationService.ts        |     100 |      100 |     100 |     100 |                                                                                                                        
 src/api/server                      |   88.13 |    33.33 |      60 |   88.13 |                                                                                                                        
  frontend.ts                        |   53.33 |    33.33 |      20 |   53.33 | 19-20,27-35                                                                                                            
  middleware.ts                      |     100 |      100 |     100 |     100 |                                                                                                                        
  routes.ts                          |     100 |      100 |     100 |     100 |                                                                                                                        
 src/api/server/handlers             |   64.39 |    49.65 |      64 |      65 |                                                                                                                        
  artifactHandlers.ts                |   34.78 |    27.58 |      50 |   36.36 | 22,42-61,77-102                                                                                                        
  health.ts                          |   85.71 |       50 |     100 |   85.71 | 22,37                                                                                                                  
  index.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  runs.ts                            |   69.15 |    55.17 |   63.63 |   69.34 | 30,44-47,61,76,119,198-199,202,234-240,246-247,261,274,281-285,309-310,327-332,348-349,354-372,377-410,438-440,451-459 
 src/auth                            |   39.61 |    20.43 |      55 |   42.06 |                                                                                                                        
  middleware.ts                      |   87.87 |    33.33 |      80 |   87.87 | 42-43,92,106                                                                                                           
  supabase.ts                        |   26.44 |       20 |      30 |   28.57 | 16,25,42,65,87-90,102-141,149-173,181-211,224-241,249-291,306-321                                                      
 src/auth/__tests__                  |   46.49 |    45.31 |   30.43 |      48 |                                                                                                                        
  test-helpers.ts                    |   46.49 |    45.31 |   30.43 |      48 | 27,130-134,217-251,288-300,316,333-363,378-411,423-439,476-486                                                         
 src/auth/middleware                 |   98.29 |    89.58 |     100 |   98.29 |                                                                                                                        
  AuthenticationService.ts           |   97.82 |    93.75 |     100 |   97.82 | 97                                                                                                                     
  AuthorizationService.ts            |   98.27 |    91.42 |     100 |   98.27 | 65                                                                                                                     
  OwnershipValidationService.ts      |     100 |      100 |     100 |     100 |                                                                                                                        
  RateLimitingService.ts             |   97.22 |    85.18 |     100 |   97.22 | 114                                                                                                                    
  UsageTrackingService.ts            |     100 |       80 |     100 |     100 | 36                                                                                                                     
 src/billing                         |     100 |    83.33 |     100 |     100 |                                                                                                                        
  stripe.ts                          |     100 |    83.33 |     100 |     100 | 17                                                                                                                     
 src/billing/stripe                  |   98.54 |    94.28 |     100 |   98.43 |                                                                                                                        
  CustomerManagementService.ts       |     100 |      100 |     100 |     100 |                                                                                                                        
  DateUtilityService.ts              |     100 |      100 |     100 |     100 |                                                                                                                        
  PriceManagementService.ts          |   95.23 |    95.45 |     100 |   94.73 | 60                                                                                                                     
  ProductManagementService.ts        |   95.23 |       90 |     100 |   94.73 | 55                                                                                                                     
  SessionManagementService.ts        |     100 |      100 |     100 |     100 |                                                                                                                        
  SubscriptionManagementService.ts   |     100 |     90.9 |     100 |     100 | 11,65                                                                                                                  
 src/config                          |   45.23 |    57.44 |   42.85 |   51.35 |                                                                                                                        
  app.ts                             |      65 |    81.81 |      75 |      65 | 12,17,22,31,40,45,76                                                                                                   
  email.ts                           |   15.78 |        0 |       0 |   21.42 | 147-155,162-168                                                                                                        
  index.ts                           |     100 |      100 |       0 |     100 |                                                                                                                        
 src/lib                             |   58.47 |    46.78 |   55.84 |   61.27 |                                                                                                                        
  apiResponse.ts                     |     100 |    86.36 |     100 |     100 | 83,143-158                                                                                                             
  artifacts.ts                       |   57.14 |    47.05 |   33.33 |   58.53 | 9,16-22,30-31,35-36,42-43,50-52                                                                                        
  auth.ts                            |   97.05 |    86.95 |     100 |     100 | 11-22,36                                                                                                               
  autobackup.ts                      |     100 |    92.85 |     100 |     100 | 11                                                                                                                     
  backup.ts                          |    7.89 |        0 |       0 |    9.37 | 25,28-42,45-104,108-188                                                                                                
  benchmarks.ts                      |   80.64 |    61.76 |      80 |   84.21 | 58,146,184,246-250,308-316,350-359                                                                                     
  cache.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  correlation.ts                     |       0 |        0 |       0 |       0 | 7-118                                                                                                                  
  db.ts                              |    93.5 |     77.5 |    87.5 |   93.42 | 50-51,101,123,186                                                                                                      
  devRestart.ts                      |     100 |      100 |     100 |     100 |                                                                                                                        
  events.ts                          |     100 |    85.71 |     100 |     100 | 6                                                                                                                      
  json.ts                            |   52.54 |    52.27 |   71.42 |   54.16 | 18-21,24,27,41,45-51,63-64,70,76-84                                                                                    
  logger.ts                          |    61.9 |       50 |     100 |    61.9 | 27-38,42                                                                                                               
  metrics.ts                         |   96.77 |      100 |   33.33 |   96.77 | 36                                                                                                                     
  migrations.ts                      |       0 |        0 |       0 |       0 | 11-271                                                                                                                 
  modelImporters.ts                  |    6.75 |        0 |       0 |    9.25 | 4-30,34-56,60-75,79-94                                                                                                 
  models.ts                          |   41.66 |        0 |       0 |   41.66 | 20-21,24-25,28-35,38                                                                                                   
  observability.ts                   |   94.23 |    83.33 |     100 |   97.91 | 93                                                                                                                     
  orchestration.ts                   |    90.4 |    86.86 |   80.85 |   92.34 | 42,74,401,410,484-510,552                                                                                              
  performance-monitor.ts             |   58.82 |    40.32 |   47.82 |    62.5 | 100,132,137,177-250,303-342                                                                                            
  performance.ts                     |       0 |        0 |       0 |       0 | 11-288                                                                                                                 
  projects.ts                        |    52.3 |    25.67 |   61.53 |   63.63 | 31-32,37-38,42-45,54-56,61,64-65,69-73                                                                                 
  queue.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  registry.ts                        |   74.67 |    56.77 |   77.08 |   79.47 | 79-88,311-321,339-340,343-345,406-413,439-446,450-461,481-486,499-500,507-509,514-522,549,551,652,696                  
  runRecovery.ts                     |   96.77 |    81.25 |     100 |     100 | 8,10,42                                                                                                                
  secrets.ts                         |   11.11 |        0 |       0 |   13.79 | 12-31,35-43,47-54                                                                                                      
  settings.ts                        |   59.61 |     28.4 |   66.66 |   61.22 | 92,97,102,161-203,210-217                                                                                              
  store.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
  supabase.ts                        |       0 |        0 |       0 |       0 | 1-19                                                                                                                   
  tenant-auth.ts                     |   39.28 |       15 |      25 |   39.28 | 33-59,67-73,82-83,92                                                                                                   
  traceConfig.ts                     |   67.79 |    67.85 |   63.63 |   66.66 | 29-30,56-58,75-77,89-91,95-96,100-104,109-110                                                                          
  traceLogger.ts                     |     100 |       80 |      80 |     100 | 24,30                                                                                                                  
  tracing.ts                         |    23.4 |    16.66 |    8.33 |   30.55 | 12,16-47,52-58,62                                                                                                      
  tx.ts                              |     100 |      100 |     100 |     100 |                                                                                                                        
  uiFlags.ts                         |   94.44 |      100 |      75 |   93.75 | 44                                                                                                                     
  validateEnv.ts                     |       0 |        0 |       0 |       0 | 19-114                                                                                                                 
  workspaces.ts                      |   59.34 |       50 |   73.33 |   59.34 | 65-71,77,106-107,117-118,126-196,208-209,261-272,302,325                                                               
 src/lib/agentSdk                    |   59.37 |    41.66 |      80 |   59.37 |                                                                                                                        
  adapter.ts                         |   59.37 |    41.66 |      80 |   59.37 | 63,120,139-153,176,194,197,200,209,212,230-248,274,285-296,311-312,330-337,351-373                                     
 src/lib/email                       |   20.45 |    20.83 |       0 |    22.5 |                                                                                                                        
  resend-client.ts                   |   20.45 |    20.83 |       0 |    22.5 | 46-111,124-141,148-149,156                                                                                             
 src/lib/middleware                  |      96 |    73.21 |     100 |   95.95 |                                                                                                                        
  idempotency.ts                     |      96 |    73.21 |     100 |   95.95 | 64-68,354-362                                                                                                          
 src/lib/queue                       |    69.9 |    53.48 |   62.71 |   70.68 |                                                                                                                        
  MemoryAdapter.ts                   |   99.22 |    85.71 |     100 |     100 | 78-95,103,109,117,138-148                                                                                              
  PostgresAdapter.ts                 |    4.47 |        0 |       0 |    4.54 | 31-246                                                                                                                 
  RedisAdapter.ts                    |   65.62 |       50 |      55 |   74.69 | 39-41,63-89                                                                                                            
  constants.ts                       |     100 |      100 |     100 |     100 |                                                                                                                        
  index.ts                           |   96.96 |     64.7 |     100 |      96 | 24                                                                                                                     
  jobMap.ts                          |     100 |      100 |     100 |     100 |                                                                                                                        
 src/lib/store                       |   83.38 |    69.36 |   84.61 |    84.7 |                                                                                                                        
  DatabaseStore.ts                   |   85.55 |    70.58 |   82.14 |   85.05 | 102,111-112,143-149,170-183,196-197                                                                                    
  FileSystemStore.ts                 |   93.02 |    76.31 |   85.71 |   99.04 | 136                                                                                                                    
  StoreFactory.ts                    |   93.33 |    88.88 |     100 |   93.33 | 31                                                                                                                     
  correlationHelper.ts               |       0 |        0 |       0 |       0 | 5-85                                                                                                                   
  index.ts                           |     100 |    57.14 |     100 |     100 | 60-68                                                                                                                  
 src/lib/store/FileSystemStore       |   99.48 |    96.77 |     100 |     100 |                                                                                                                        
  ArtifactManagementService.ts       |     100 |      100 |     100 |     100 |                                                                                                                        
  EventManagementService.ts          |     100 |      100 |     100 |     100 |                                                                                                                        
  FileOperationService.ts            |     100 |      100 |     100 |     100 |                                                                                                                        
  RunManagementService.ts            |     100 |      100 |     100 |     100 |                                                                                                                        
  StepManagementService.ts           |    98.5 |    91.66 |     100 |     100 | 100,155                                                                                                                
 src/middleware                      |   50.29 |    29.78 |   36.66 |      50 |                                                                                                                        
  errorHandler.ts                    |       0 |        0 |       0 |       0 | 5-302                                                                                                                  
  security.ts                        |   98.83 |     87.5 |     100 |   98.82 | 230                                                                                                                    
 src/models                          |    7.64 |        0 |       0 |    8.63 |                                                                                                                        
  router.ts                          |    7.64 |        0 |       0 |    8.63 | 25-283                                                                                                                 
 src/models/providers                |    44.1 |    26.97 |      50 |   47.56 |                                                                                                                        
  anthropic.ts                       |   11.53 |        0 |       0 |   13.04 | 12-53                                                                                                                  
  gemini.ts                          |   10.71 |        0 |       0 |      12 | 9-53                                                                                                                   
  http.ts                            |    6.06 |        0 |       0 |     7.4 | 10-55                                                                                                                  
  openai.ts                          |   76.53 |     54.9 |     100 |   82.71 | 73-74,78,118,159-161,180,188-196                                                                                       
  types.ts                           |      30 |    16.66 |      50 |    37.5 | 48-53                                                                                                                  
 src/policy                          |   55.55 |     12.5 |     100 |   57.14 |                                                                                                                        
  dbWritePolicy.ts                   |   55.55 |     12.5 |     100 |   57.14 | 6-8                                                                                                                    
 src/services                        |   94.28 |    66.66 |     100 |   93.33 |                                                                                                                        
  registryIntegration.ts             |   94.28 |    66.66 |     100 |   93.33 | 42,78                                                                                                                  
 src/services/builder                |   90.21 |     64.8 |   93.47 |   92.89 |                                                                                                                        
  builderCompiler.ts                 |   76.47 |    43.33 |     100 |   76.47 | 11,57-76                                                                                                               
  builderManager.ts                  |   89.47 |    69.23 |   81.81 |   97.05 | 31                                                                                                                     
  builderStore.ts                    |   93.75 |    71.79 |   96.29 |   96.51 | 108,140,163                                                                                                            
  templateCatalog.ts                 |     100 |       75 |     100 |     100 | 65                                                                                                                     
 src/services/email                  |   19.77 |     8.21 |   11.76 |   20.85 |                                                                                                                        
  emailService.ts                    |   13.18 |        0 |       0 |   13.79 | 22-78,97-145,162-209,226-281,291-314                                                                                   
  teamEmails.ts                      |   26.74 |    16.21 |      25 |   28.94 | 27-53,69-104,119-154,166-230,296-297                                                                                   
 src/services/navigation             |       0 |        0 |       0 |       0 |                                                                                                                        
  navigationService.ts               |       0 |        0 |       0 |       0 | 1-455                                                                                                                  
 src/services/responses              |   89.02 |    73.65 |   92.48 |    92.4 |                                                                                                                        
  archiveStore.ts                    |   87.23 |    88.88 |   79.16 |     100 | 62                                                                                                                     
  conversationStateManager.ts        |   95.65 |      100 |   88.88 |   95.23 | 66                                                                                                                     
  delegationTracker.ts               |   73.01 |    48.14 |     100 |   75.86 | 54-56,96-106,120-121,126-129,137-140                                                                                   
  historyPlanner.ts                  |   90.47 |    82.35 |     100 |   90.47 | 46-47                                                                                                                  
  incidentLog.ts                     |   70.49 |    39.02 |    87.5 |   76.92 | 62,105-111,153-162                                                                                                     
  openaiClient.ts                    |     100 |      100 |     100 |     100 |                                                                                                                        
  rateLimitTracker.ts                |   89.47 |    78.04 |     100 |   90.62 | 64-65,97                                                                                                               
  runCoordinator.ts                  |     100 |    95.83 |     100 |     100 | 148                                                                                                                    
  runService.ts                      |   92.42 |     85.5 |    90.9 |   93.65 | 133,160,166,192                                                                                                        
  runtime.ts                         |   95.65 |    86.95 |   93.33 |   95.65 | 117-118,196                                                                                                            
  sanitize.ts                        |   83.33 |       76 |     100 |   96.66 | 26                                                                                                                     
  streamBuffer.ts                    |     100 |     77.5 |     100 |     100 | 39-69,84-89                                                                                                            
  toolRegistry.ts                    |    91.3 |       75 |     100 |   95.23 | 35                                                                                                                     
 src/services/responses/archiveStore |   54.46 |    38.18 |   58.92 |   58.42 |                                                                                                                        
  DelegationManagementService.ts     |    9.67 |        0 |      20 |   11.53 | 17-61                                                                                                                  
  EventManagementService.ts          |      50 |       50 |      40 |      60 | 24,52-67                                                                                                               
  ExportService.ts                   |   41.37 |    33.33 |      50 |   40.74 | 30-39,44-51                                                                                                            
  FileManagerService.ts              |   70.37 |       40 |    90.9 |      76 | 23-24,61-65                                                                                                            
  RunManagementService.ts            |   87.23 |    60.71 |   88.88 |   90.69 | 29-31,55                                                                                                               
  SafetyManagementService.ts         |      50 |       25 |   66.66 |   54.54 | 24-25,37-53                                                                                                            
  SerializationService.ts            |   57.89 |       50 |   42.85 |   52.94 | 37-59,72,82,92,102                                                                                                     
 src/services/responses/coordinator  |   88.23 |    72.66 |   96.87 |   90.07 |                                                                                                                        
  BufferService.ts                   |   80.24 |    60.81 |     100 |      84 | 65,68,109-116,136-138,159-160,166-167,173                                                                              
  EventProcessingService.ts          |     100 |    83.87 |     100 |     100 | 45,47-52                                                                                                               
  RequestPreparationService.ts       |     100 |    82.14 |     100 |     100 | 47,69-74                                                                                                               
  TracingService.ts                  |    91.3 |    88.23 |   83.33 |   90.47 | 54-55                                                                                                                  
 src/services/responses/runtime      |     100 |     93.8 |     100 |     100 |                                                                                                                        
  RuntimeDataService.ts              |     100 |    96.42 |     100 |     100 | 22                                                                                                                     
  RuntimeIncidentService.ts          |     100 |      100 |     100 |     100 |                                                                                                                        
  RuntimeRetryService.ts             |     100 |      100 |     100 |     100 |                                                                                                                        
  RuntimeSummaryService.ts           |     100 |    88.88 |     100 |     100 | 115,133,215-217,267-282                                                                                                
  RuntimeUtilityService.ts           |     100 |      100 |     100 |     100 |                                                                                                                        
 src/services/responses/streamBuffer |   96.58 |     91.3 |     100 |     100 |                                                                                                                        
  AudioProcessingService.ts          |   95.55 |     87.5 |     100 |     100 | 62,77-78                                                                                                               
  EventTypeGuards.ts                 |     100 |      100 |     100 |     100 |                                                                                                                        
  ImageArtifactService.ts            |   96.29 |     90.9 |     100 |     100 | 18,44                                                                                                                  
  ReasoningCollectionService.ts      |     100 |      100 |     100 |     100 |                                                                                                                        
  TextMessageService.ts              |   95.83 |    83.33 |     100 |     100 | 32-39,47                                                                                                               
 src/shared                          |     100 |      100 |     100 |     100 |                                                                                                                        
  types.ts                           |     100 |      100 |     100 |     100 |                                                                                                                        
 src/shared/openai                   |     100 |      100 |     100 |     100 |                                                                                                                        
  responsesSchemas.ts                |     100 |      100 |     100 |     100 |                                                                                                                        
 src/shared/responses                |     100 |    94.11 |     100 |     100 |                                                                                                                        
  archive.ts                         |     100 |      100 |     100 |     100 |                                                                                                                        
  eventRouter.ts                     |     100 |    94.11 |     100 |     100 | 80                                                                                                                     
 src/shared/responses/archive        |    99.4 |    94.92 |     100 |    99.3 |                                                                                                                        
  DelegationManagementService.ts     |     100 |    95.83 |     100 |     100 | 29                                                                                                                     
  EventManagementService.ts          |     100 |    93.75 |     100 |     100 | 51                                                                                                                     
  RollbackService.ts                 |   98.33 |    94.44 |     100 |   98.03 | 97                                                                                                                     
  RunManagementService.ts            |     100 |    91.66 |     100 |     100 | 82-88                                                                                                                  
  SafetyManagementService.ts         |     100 |      100 |     100 |     100 |                                                                                                                        
 src/testing                         |   69.56 |       50 |      75 |   72.72 |                                                                                                                        
  factories.ts                       |   69.56 |       50 |      75 |   72.72 | 44-49,66                                                                                                               
 src/tools                           |   21.42 |        0 |       0 |   23.07 |                                                                                                                        
  codegen.ts                         |   21.42 |        0 |       0 |   23.07 | 6-16                                                                                                                   
 src/types                           |       0 |      100 |     100 |       0 |                                                                                                                        
  navigation-manifest.ts             |       0 |      100 |     100 |       0 | 1-108                                                                                                                  
 src/validation                      |       0 |        0 |       0 |       0 |                                                                                                                        
  schemas.ts                         |       0 |        0 |       0 |       0 | 4-286                                                                                                                  
 src/worker                          |   73.81 |    69.66 |    61.4 |   74.27 |                                                                                                                        
  health.ts                          |   25.47 |     8.82 |   18.18 |   25.96 | 49-191,207-210,215,220-224,230-254,268-271,277-284,291,295                                                             
  main.ts                            |   89.02 |       76 |   76.92 |   92.85 | 79,106-109                                                                                                             
  relay.ts                           |     100 |    96.15 |     100 |     100 | 15                                                                                                                     
  runner.ts                          |   90.34 |    80.19 |   94.44 |   90.58 | 45-63,90,105,173-174,207-208                                                                                           
 src/worker/handlers                 |   89.17 |    80.34 |   88.57 |   89.73 |                                                                                                                        
  bash.ts                            |   96.07 |       90 |   88.88 |   96.07 | 92-93                                                                                                                  
  codegen.ts                         |   71.23 |    52.63 |      75 |   70.83 | 19-20,32-81                                                                                                            
  codegen_v2.ts                      |     100 |      100 |     100 |     100 |                                                                                                                        
  db_write.ts                        |    90.9 |    79.66 |   78.57 |   92.68 | 52-54,58,68,111                                                                                                        
  gate.ts                            |   82.17 |    66.66 |   83.33 |   82.64 | 18,35-43,67-69,135,156,169,179-182,188-191,223-225                                                                     
  git_ops.ts                         |     100 |    71.42 |     100 |     100 | 33,66                                                                                                                  
  git_pr.ts                          |   95.34 |    95.83 |     100 |   99.06 | 127                                                                                                                    
  loader.ts                          |     100 |      100 |     100 |     100 |                                                                                                                        
  manual.ts                          |     100 |       90 |     100 |     100 | 39                                                                                                                     
  project_init.ts                    |   68.11 |       75 |   77.77 |   67.16 | 120,123-133,140-187,193-246                                                                                            
  static-loader.ts                   |     100 |      100 |     100 |     100 |                                                                                                                        
  test_echo.ts                       |     100 |      100 |     100 |     100 |                                                                                                                        
  test_fail.ts                       |     100 |      100 |     100 |     100 |                                                                                                                        
  workspace_write.ts                 |   98.76 |    91.66 |     100 |   98.73 | 78                                                                                                                     
 src/worker/handlers/git_ops         |     100 |      100 |     100 |     100 |                                                                                                                        
  AdvancedModeService.ts             |     100 |      100 |     100 |     100 |                                                                                                                        
  BasicModeService.ts                |     100 |      100 |     100 |     100 |                                                                                                                        
  GitValidationService.ts            |     100 |      100 |     100 |     100 |                                                                                                                        
  HiddenModeService.ts               |     100 |      100 |     100 |     100 |                                                                                                                        
  WorkspaceManagementService.ts      |     100 |      100 |     100 |     100 |                                                                                                                        
-------------------------------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------

Summary of all failing tests
FAIL tests/integration/load-concurrent-operations.test.ts (32.445 s)
  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Concurrent API Requests ‚Ä∫ should handle 100 concurrent health check requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.99
    Received:   0

      66 |
      67 |       // Assertions
    > 68 |       expect(successRate).toBeGreaterThan(0.99); // 99% success rate
         |                           ^
      69 |       expect(p95Duration).toBeLessThan(1000); // P95 < 1 second
      70 |       expect(avgDuration).toBeLessThan(500); // Average < 500ms
      71 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:68:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Concurrent API Requests ‚Ä∫ should handle concurrent run creation requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.9
    Received:   0

      118 |
      119 |       // Assertions
    > 120 |       expect(successRate).toBeGreaterThan(0.90); // 90% success rate
          |                           ^
      121 |       expect(metrics.getP95()).toBeLessThan(3000); // P95 < 3 seconds
      122 |       expect(metrics.getAverage()).toBeLessThan(2000); // Average < 2 seconds
      123 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:120:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Sustained Load Testing ‚Ä∫ should handle sustained API load

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.95
    Received:   0

      182 |
      183 |       // Assertions
    > 184 |       expect(successRate).toBeGreaterThan(0.95); // 95% success rate under sustained load
          |                           ^
      185 |       expect(p95).toBeLessThan(1000); // P95 < 1 second
      186 |
      187 |       console.log(`ÔøΩÔøΩ Sustained Load Test Results (30 seconds @ ${rps} RPS):

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:184:27)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Resource Exhaustion Scenarios ‚Ä∫ should handle memory-intensive operations

    TypeError: (0 , supertest_1.default)(...).post(...).set(...).send(...).timeout is not a function

      298 |         .set('Authorization', authToken ? `Bearer ${authToken}` : '')
      299 |         .send(largePayload)
    > 300 |         .timeout(10000);
          |          ^
      301 |
      302 |       // Should handle large payload gracefully
      303 |       expect([201, 400, 413]).toContain(response.status);

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:300:10)

  ‚óè Integration: Load Testing and Concurrent Operations ‚Ä∫ Performance Degradation Detection ‚Ä∫ should detect performance degradation over time

    TypeError: (0 , supertest_1.default)(...).get(...).timeout is not a function

      333 |         await request(app)
      334 |           .get('/health')
    > 335 |           .timeout(5000);
          |            ^
      336 |
      337 |         measurements.push(Date.now() - startTime);
      338 |

      at Object.<anonymous> (tests/integration/load-concurrent-operations.test.ts:335:12)

FAIL tests/unit/worker.main.test.ts (30.788 s)
  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ processes step successfully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:127:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step execution error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Step failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:151:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:151:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step timeout

    expect(received).rejects.toThrow(expected)

    Expected substring: "step timeout"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:171:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:171:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ handles step timeout with race condition

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      180 |     });
      181 |
    > 182 |     test('handles step timeout with race condition', async () => {
          |     ^
      183 |       // Mock a slow runStep that will be interrupted by timeout
      184 |       runStep.mockImplementation(() => new Promise(resolve => setTimeout(resolve, 40000)));
      185 |

      at tests/unit/worker.main.test.ts:182:5
      at tests/unit/worker.main.test.ts:108:3
      at Object.<anonymous> (tests/unit/worker.main.test.ts:67:1)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ step processing ‚Ä∫ uses custom timeout from environment

    expect(received).rejects.toThrow(expected)

    Expected substring: "step timeout"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          57 |         stepId,
          58 |         error: (err && typeof err.message === 'string') ? err.message : String(err)
        > 59 |       }).catch(() => {});
             |         ^
          60 |       throw err;
          61 |     } finally {
          62 |       if (timeoutHandle) {

      at src/worker/main.ts:59:9
      at Object.<anonymous> (tests/unit/worker.main.test.ts:226:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:226:37)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ uses provided idempotency key

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:247:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ generates idempotency key from step data

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:268:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ handles inbox errors gracefully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:307:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ idempotency handling ‚Ä∫ cleans up idempotency key on error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Processing failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:323:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:323:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ calculates retry count from attempt

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:342:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ handles missing attempt number

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:356:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ retry count handling ‚Ä∫ handles invalid attempt number

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:371:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ error handling in outbox operations ‚Ä∫ handles outbox success write failure gracefully

    TypeError: Cannot read properties of undefined (reading 'catch')

      64 |       }
      65 |       if (marked && key) {
    > 66 |         await store.inboxDelete(key).catch(() => {});
         |                                     ^
      67 |       }
      68 |     }
      69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:396:7)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ error handling in outbox operations ‚Ä∫ handles outbox failure write failure gracefully

    expect(received).rejects.toThrow(expected)

    Expected substring: "Step failed"
    Received message:   "Cannot read properties of undefined (reading 'catch')"

          64 |       }
          65 |       if (marked && key) {
        > 66 |         await store.inboxDelete(key).catch(() => {});
             |                                     ^
          67 |       }
          68 |     }
          69 |   });

      at src/worker/main.ts:66:37
      at Object.<anonymous> (tests/unit/worker.main.test.ts:411:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/worker.main.test.ts:411:56)

  ‚óè Worker Main Entry Point Tests ‚Ä∫ dev restart functionality ‚Ä∫ watches for restart flag when enabled

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining ".dev-restart-worker"

    Number of calls: 0

      499 |
      500 |       // Should clean up stale flag
    > 501 |       expect(fs.unlinkSync).toHaveBeenCalledWith(
          |                             ^
      502 |         expect.stringContaining('.dev-restart-worker')
      503 |       );
      504 |

      at Object.<anonymous> (tests/unit/worker.main.test.ts:501:29)

FAIL tests/unit/git_ops.handler.test.ts
  ‚óè git_ops handler ‚Ä∫ basic mode operations ‚Ä∫ should handle commit with custom message in basic mode

    expect(received).toContain(expected) // indexOf

    Expected substring: "Added new feature"
    Received string:    "No changes to commit"

      168 |       expect(updateCall).toBeDefined();
      169 |       const outputs = (updateCall?.[1] as Partial<StepRow>)?.outputs as Record<string, any>;
    > 170 |       expect(outputs?.message).toContain('Added new feature');
          |                                ^
      171 |       expect(outputs?.committed).toBe(true);
      172 |     });
      173 |

      at Object.<anonymous> (tests/unit/git_ops.handler.test.ts:170:32)

  ‚óè git_ops handler ‚Ä∫ basic mode operations ‚Ä∫ should handle branch creation in basic mode

    expect(received).toBeDefined()

    Received: undefined

      198 |       );
      199 |
    > 200 |       expect(updateCall).toBeDefined();
          |                          ^
      201 |       const outputs = (updateCall?.[1] as Partial<StepRow>)?.outputs as Record<string, any>;
      202 |       expect(outputs?.message).toContain('Created and switched to branch: feature/test');
      203 |     });

      at Object.<anonymous> (tests/unit/git_ops.handler.test.ts:200:26)

FAIL tests/unit/workspaces.test.ts
  ‚óè WorkspaceManager ‚Ä∫ initializeRepo ‚Ä∫ should create a new git repository

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      121 |       // Check that README was created
      122 |       const readmePath = path.join(workspacePath, 'README.md');
    > 123 |       expect(fs.existsSync(readmePath)).toBe(true);
          |                                         ^
      124 |     });
      125 |
      126 |     it('should respect git_mode when generating commit messages', async () => {

      at Object.<anonymous> (tests/unit/workspaces.test.ts:123:41)

FAIL tests/integration/run-detail-api.integration.test.ts
  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Vercel Routing Integration ‚Ä∫ handles direct API call to /api/runs/[id]

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 404

    Number of calls: 1

      23 |       await handler(mockReq, mockRes);
      24 |
    > 25 |       expect(mockRes.status).toHaveBeenCalledWith(200);
         |                              ^
      26 |       expect(mockRes.json).toHaveBeenCalledWith(
      27 |         expect.objectContaining({
      28 |           run: expect.any(Object)

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:25:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Vercel Routing Integration ‚Ä∫ rejects non-GET methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 405
    Received: 204

    Number of calls: 1

      61 |         await handler(mockReq, mockRes);
      62 |
    > 63 |         expect(mockRes.status).toHaveBeenCalledWith(405);
         |                                ^
      64 |         expect(mockRes.json).toHaveBeenCalledWith(
      65 |           expect.objectContaining({
      66 |             error: 'Method not allowed'

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:63:32)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Database Integration ‚Ä∫ retrieves run from database

    expect(received).toBeDefined()

    Received: undefined

      83 |
      84 |       const response = mockRes.json.mock.calls[0][0];
    > 85 |       expect(response.run).toBeDefined();
         |                            ^
      86 |       expect(response.run.id).toBe('existing-run-id');
      87 |     });
      88 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:85:28)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Database Integration ‚Ä∫ retrieves associated steps

    expect(received).toBeDefined()

    Received: undefined

       98 |
       99 |       const response = mockRes.json.mock.calls[0][0];
    > 100 |       expect(response.steps).toBeDefined();
          |                              ^
      101 |       expect(Array.isArray(response.steps)).toBe(true);
      102 |     });
      103 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:100:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Database Integration ‚Ä∫ retrieves associated artifacts

    expect(received).toBeDefined()

    Received: undefined

      113 |
      114 |       const response = mockRes.json.mock.calls[0][0];
    > 115 |       expect(response.artifacts).toBeDefined();
          |                                  ^
      116 |       expect(Array.isArray(response.artifacts)).toBe(true);
      117 |     });
      118 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:115:34)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Database Integration ‚Ä∫ handles database connection failures

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 500
    Received: 404

    Number of calls: 1

      146 |       await handler(mockReq, mockRes);
      147 |
    > 148 |       expect(mockRes.status).toHaveBeenCalledWith(500);
          |                              ^
      149 |       expect(mockRes.json).toHaveBeenCalledWith(
      150 |         expect.objectContaining({
      151 |           error: expect.any(String)

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:148:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Authentication & Authorization ‚Ä∫ rejects invalid JWT token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      201 |       await handler(mockReq, mockRes);
      202 |
    > 203 |       expect(mockRes.status).toHaveBeenCalledWith(401);
          |                              ^
      204 |     });
      205 |
      206 |     test('rejects expired JWT token', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:203:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Authentication & Authorization ‚Ä∫ rejects expired JWT token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      217 |       await handler(mockReq, mockRes);
      218 |
    > 219 |       expect(mockRes.status).toHaveBeenCalledWith(401);
          |                              ^
      220 |     });
      221 |
      222 |     test('rejects malformed Authorization header', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:219:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Authentication & Authorization ‚Ä∫ rejects malformed Authorization header

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 404

    Number of calls: 1

      241 |         await handler(mockReq, mockRes);
      242 |
    > 243 |         expect(mockRes.status).toHaveBeenCalledWith(401);
          |                                ^
      244 |       }
      245 |     });
      246 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:243:32)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è CORS & Security Headers ‚Ä∫ handles OPTIONS preflight request

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 200
    Received: 204

    Number of calls: 1

      291 |       await handler(mockReq, mockRes);
      292 |
    > 293 |       expect(mockRes.status).toHaveBeenCalledWith(200);
          |                              ^
      294 |       expect(mockRes.setHeader).toHaveBeenCalledWith(
      295 |         'Access-Control-Allow-Methods',
      296 |         expect.stringContaining('GET')

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:293:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è CORS & Security Headers ‚Ä∫ sets security headers

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "X-Content-Type-Options", "nosniff"
    Received
           1: "Access-Control-Allow-Origin", "http://localhost:3000"
           2: "Access-Control-Allow-Credentials", "true"
           3: "Access-Control-Allow-Methods", "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD"

    Number of calls: 6

      326 |       await handler(mockReq, mockRes);
      327 |
    > 328 |       expect(mockRes.setHeader).toHaveBeenCalledWith(
          |                                 ^
      329 |         'X-Content-Type-Options',
      330 |         'nosniff'
      331 |       );

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:328:33)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Error Handling & Edge Cases ‚Ä∫ handles missing query parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 500

    Number of calls: 1

      344 |       await handler(mockReq, mockRes);
      345 |
    > 346 |       expect(mockRes.status).toHaveBeenCalledWith(400);
          |                              ^
      347 |     });
      348 |
      349 |     test('handles array of IDs in query parameter', async () => {

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:346:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Performance & Resource Limits ‚Ä∫ handles run with thousands of steps

    expect(received).toBeDefined()

    Received: undefined

      443 |
      444 |       const response = mockRes.json.mock.calls[0][0];
    > 445 |       expect(response.steps).toBeDefined();
          |                              ^
      446 |       expect(Array.isArray(response.steps)).toBe(true);
      447 |     });
      448 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:445:30)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Data Integrity & Validation ‚Ä∫ returns complete run object with all fields

    expect(received).toMatchObject(expected)

    Matcher error: received value must be a non-null object

    Received has value: undefined

      492 |
      493 |       const response = mockRes.json.mock.calls[0][0];
    > 494 |       expect(response.run).toMatchObject({
          |                            ^
      495 |         id: expect.any(String),
      496 |         status: expect.any(String),
      497 |         tenant_id: expect.any(String),

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:494:28)

  ‚óè Run Detail API Endpoint - BULLETPROOF INTEGRATION TESTS ‚Ä∫ ÔøΩÔøΩÔ∏è Data Integrity & Validation ‚Ä∫ validates run ID format before database query

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 404]

      522 |         // Should return 400 or 404, not 500
      523 |         const statusCode = mockRes.status.mock.calls[0][0];
    > 524 |         expect([400, 404]).toContain(statusCode);
          |                            ^
      525 |       }
      526 |     });
      527 |

      at Object.<anonymous> (tests/integration/run-detail-api.integration.test.ts:524:28)

FAIL src/api/routes/__tests__/webhooks.test.ts
  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Webhook Security ‚Ä∫ validates webhook signature

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<Buffer>, "valid_signature", "whsec_test_123"

    Number of calls: 0

      93 |         .send({ test: 'data' });
      94 |
    > 95 |       expect(mockStripe.webhooks.constructEvent).toHaveBeenCalledWith(
         |                                                  ^
      96 |         expect.any(Buffer),
      97 |         'valid_signature',
      98 |         'whsec_test_123'

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:95:50)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Webhook Security ‚Ä∫ prevents signature enumeration attacks

    expect(received).toContain(expected) // indexOf

    Expected substring: "Webhook Error"
    Received string:    "Missing signature"

      162 |
      163 |         expect(response.status).toBe(400);
    > 164 |         expect(response.body.error).toContain('Webhook Error');
          |                                     ^
      165 |       }
      166 |     });
      167 |   });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:164:37)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.created events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"description": "A test product", "id": "prod_123", "name": "Test Product"}

    Number of calls: 0

      198 |           .send({});
      199 |
    > 200 |         expect(upsertProduct).toHaveBeenCalledWith(productEvent.data.object);
          |                               ^
      201 |         expect(response.status).toBe(200);
      202 |       });
      203 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:200:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.updated events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "prod_123", "name": "Updated Product"}

    Number of calls: 0

      216 |           .send({});
      217 |
    > 218 |         expect(upsertProduct).toHaveBeenCalledWith(productEvent.data.object);
          |                               ^
      219 |       });
      220 |
      221 |       it('handles product.deleted events', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:218:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Product Events ‚Ä∫ handles product.deleted events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "prod_123"

    Number of calls: 0

      233 |           .send({});
      234 |
    > 235 |         expect(deleteProduct).toHaveBeenCalledWith('prod_123');
          |                               ^
      236 |       });
      237 |     });
      238 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:235:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Price Events ‚Ä∫ handles price.created events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"currency": "usd", "id": "price_123", "unit_amount": 1000}

    Number of calls: 0

      258 |           .send({});
      259 |
    > 260 |         expect(upsertPrice).toHaveBeenCalledWith(priceEvent.data.object);
          |                             ^
      261 |       });
      262 |
      263 |       it('handles price.deleted events', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:260:29)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Price Events ‚Ä∫ handles price.deleted events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "price_123"

    Number of calls: 0

      275 |           .send({});
      276 |
    > 277 |         expect(deletePrice).toHaveBeenCalledWith('price_123');
          |                             ^
      278 |       });
      279 |     });
      280 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:277:29)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Checkout Events ‚Ä∫ handles checkout.session.completed for subscriptions

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123", true

    Number of calls: 0

      323 |           .send({});
      324 |
    > 325 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123', true);
          |                                                ^
      326 |         expect(sendSubscriptionConfirmationEmail).toHaveBeenCalled();
      327 |       });
      328 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:325:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Subscription Events ‚Ä∫ handles customer.subscription.created

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123"

    Number of calls: 0

      372 |           .send({});
      373 |
    > 374 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123');
          |                                                ^
      375 |       });
      376 |
      377 |       it('handles customer.subscription.deleted with audit logging', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:374:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Subscription Events ‚Ä∫ handles customer.subscription.deleted with audit logging

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      398 |           .send({});
      399 |
    > 400 |         expect(manageSubscriptionStatusChange).toHaveBeenCalled();
          |                                                ^
      401 |         expect(require('../../../auth/supabase').createAuditLog).toHaveBeenCalledWith(
      402 |           'user_123',
      403 |           'billing.subscription_cancelled',

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:400:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Invoice Events ‚Ä∫ handles invoice.payment_succeeded

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", "cus_123"

    Number of calls: 0

      432 |           .send({});
      433 |
    > 434 |         expect(manageSubscriptionStatusChange).toHaveBeenCalledWith('sub_123', 'cus_123');
          |                                                ^
      435 |         expect(require('../../../auth/supabase').trackUsage).toHaveBeenCalledWith(
      436 |           'user_123',
      437 |           'payment_succeeded',

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:434:48)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Invoice Events ‚Ä∫ handles invoice.payment_failed with email notification

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user_123", "test@example.com", ObjectContaining {"amount": "$10", "failureReason": "Card declined", "lastFourDigits": "4242"}

    Number of calls: 0

      473 |           .send({});
      474 |
    > 475 |         expect(sendPaymentFailedEmail).toHaveBeenCalledWith(
          |                                        ^
      476 |           'user_123',
      477 |           'test@example.com',
      478 |           expect.objectContaining({

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:475:40)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Processing ‚Ä∫ Customer Events ‚Ä∫ handles customer.updated

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"billing_address": {"city": "San Francisco", "country": "US", "line1": "123 Main St", "postal_code": "94105", "state": "CA"}}

    Number of calls: 0

      512 |           .send({});
      513 |
    > 514 |         expect(mockSupabase.update).toHaveBeenCalledWith({
          |                                     ^
      515 |           billing_address: customerEvent.data.object.address
      516 |         });
      517 |       });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:514:37)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles billing service errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      536 |
      537 |       // Should return 200 to prevent Stripe retries
    > 538 |       expect(response.status).toBe(200);
          |                               ^
      539 |       expect(response.body).toEqual({ received: true, error: 'Processing error' });
      540 |     });
      541 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:538:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles email service failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      571 |
      572 |       // Should still process successfully
    > 573 |       expect(response.status).toBe(200);
          |                               ^
      574 |       expect(manageSubscriptionStatusChange).toHaveBeenCalled();
      575 |     });
      576 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:573:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Error Handling ‚Ä∫ handles database connection failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      590 |         .send({});
      591 |
    > 592 |       expect(response.status).toBe(200);
          |                               ^
      593 |     });
      594 |   });
      595 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:592:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Filtering ‚Ä∫ processes only relevant events

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      619 |           .send({});
      620 |
    > 621 |         expect(response.status).toBe(200);
          |                                 ^
      622 |       }
      623 |     });
      624 |

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:621:33)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Event Filtering ‚Ä∫ ignores irrelevant events

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      645 |           .send({});
      646 |
    > 647 |         expect(response.status).toBe(200);
          |                                 ^
      648 |         expect(response.body).toEqual({ received: true });
      649 |       }
      650 |     });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:647:33)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Test Endpoint (Development) ‚Ä∫ rejects test webhooks in production

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      698 |       const response = await request(app).post('/webhooks/test');
      699 |
    > 700 |       expect(response.status).toBe(404);
          |                               ^
      701 |
      702 |       process.env.NODE_ENV = originalEnv;
      703 |     });

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:700:31)

  ‚óè Webhook Handling - Security & Reliability Tests ‚Ä∫ Performance Tests ‚Ä∫ handles high-volume webhook events

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      723 |       const results = await Promise.all(promises);
      724 |
    > 725 |       expect(results.every(r => r.status === 200)).toBe(true);
          |                                                    ^
      726 |     });
      727 |
      728 |     it('processes webhooks within time limits', async () => {

      at Object.<anonymous> (src/api/routes/__tests__/webhooks.test.ts:725:52)

FAIL tests/unit/worker.integration.test.ts
  ‚óè Worker Integration Tests ‚Ä∫ Error Recovery and Resilience ‚Ä∫ handles partial failures in atomic operations

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      285 |       });
      286 |
    > 287 |       await expect(runner.runStep('run-456', 'step-123')).rejects.toThrow('Count failed');
          |             ^
      288 |     });
      289 |
      290 |     test('handles handler loading failures', async () => {

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/worker.integration.test.ts:287:13)

FAIL src/api/routes/__tests__/responses.test.ts
  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ blocks non-admin users

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ handles runtime errors gracefully

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/summary ‚Ä∫ handles unknown errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/ops/incidents ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/incidents/:id/resolve ‚Ä∫ resolves incident with valid data

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -1,10 +1,10 @@
      Object {
        "incident": Object {
          "id": "inc_123",
          "occurredAt": "2024-01-01T10:00:00.000Z",
    -     "resolvedAt": 2024-01-01T10:00:00.000Z,
    +     "resolvedAt": "2024-01-01T10:00:00.000Z",
          "resolvedBy": "admin",
          "runId": "run_123",
          "sequence": 1,
          "status": "resolved",
          "type": "retry",

      261 |         .expect(200);
      262 |
    > 263 |       expect(response.body).toEqual({ incident: mockIncident });
          |                             ^
      264 |       expect(mockRuntime.resolveResponseIncident).toHaveBeenCalledWith({
      265 |         incidentId: 'inc_123',
      266 |         resolvedBy: 'admin',

      at Object.<anonymous> (src/api/routes/__tests__/responses.test.ts:263:29)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/incidents/:id/resolve ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/prune ‚Ä∫ handles prune operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/ops/ui-event ‚Ä∫ logs UI events with valid payload

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/retry ‚Ä∫ handles run not found

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/retry ‚Ä∫ handles retry operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/moderation-notes ‚Ä∫ handles moderation service errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/rollback ‚Ä∫ handles run not found

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/rollback ‚Ä∫ handles rollback operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ POST /responses/runs/:id/export ‚Ä∫ handles export operation errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs/:id ‚Ä∫ returns 404 for non-existent run

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Response API Routes - Comprehensive Tests ‚Ä∫ GET /responses/runs/:id ‚Ä∫ handles runtime errors

    TypeError: fn is not a function

      139 |         try {
      140 |           for (const fn of this.expectations) {
    > 141 |             await fn(response);
          |                   ^
      142 |           }
      143 |           resolve(response);
      144 |         } catch (err) {

      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/integration/reliability.db.integration.test.ts
  ‚óè DB + Redis drivers persist events and enqueue reliably

    TypeError: Cannot read properties of undefined (reading 'keyPrefix')

      15 |   private getQueue(topic: string) {
      16 |     if (!this.queues.has(topic)) {
    > 17 |       const q = new Queue(topic, { connection: this.connection });
         |                 ^
      18 |       this.queues.set(topic, q);
      19 |     }
      20 |     return this.queues.get(topic)!;

      at new RedisConnection (node_modules/bullmq/src/classes/redis-connection.ts:101:32)
      at new QueueBase (node_modules/bullmq/src/classes/queue-base.ts:68:23)
      at new Queue (node_modules/bullmq/src/classes/queue.ts:164:5)
      at RedisQueueAdapter.getQueue (src/lib/queue/RedisAdapter.ts:17:17)
      at RedisQueueAdapter.getQueue [as enqueue] (src/lib/queue/RedisAdapter.ts:50:16)
      at enqueue (src/lib/queue/index.ts:40:14)
      at retryStep (src/lib/runRecovery.ts:47:16)
      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:109:3)


  ‚óè Test suite failed to run

    TypeError: ioredis_1.default is not a constructor

      77 |     if (queue) {
      78 |       const { Queue } = await import('bullmq');
    > 79 |       const q = new Queue(queue.STEP_READY_TOPIC, { connection: { url: REDIS_URL } });
         |                 ^
      80 |       await q.drain(true);
      81 |       await q.close();
      82 |     }

      at RedisConnection.init (node_modules/bullmq/src/classes/redis-connection.ts:235:28)
      at new RedisConnection (node_modules/bullmq/src/classes/redis-connection.ts:132:30)
      at new QueueBase (node_modules/bullmq/src/classes/queue-base.ts:68:23)
      at new Queue (node_modules/bullmq/src/classes/queue.ts:164:5)
      at Object.<anonymous> (tests/integration/reliability.db.integration.test.ts:79:17)

FAIL tests/integration/complete-run-workflow.test.ts
  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should create and execute a complete run workflow

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should handle concurrent run creation

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.8
    Received:   0

      168 |
      169 |       // At least 80% should succeed
    > 170 |       expect(successful.length / results.length).toBeGreaterThan(0.8);
          |                                                  ^
      171 |
      172 |       console.log(`Concurrent runs: ${successful.length} succeeded, ${failed.length} failed`);
      173 |     }, 120000);

      at Object.<anonymous> (tests/integration/complete-run-workflow.test.ts:170:50)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Complete Run Lifecycle ‚Ä∫ should support run cancellation

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Step Execution and Dependencies ‚Ä∫ should execute steps in correct order

    Expected status 201 but received 401

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Integration: Complete Run Workflow ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle invalid plan gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      291 |         });
      292 |
    > 293 |       expect([400, 422]).toContain(response.status);
          |                          ^
      294 |       expect(response.body.error || response.body.message).toBeDefined();
      295 |     });
      296 |

      at Object.<anonymous> (tests/integration/complete-run-workflow.test.ts:293:26)

FAIL tests/integration/artifact-pipeline.test.ts
  ‚óè Artifact Storage Pipeline ‚Ä∫ should retrieve artifact content via API endpoint

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 3
    + Received  + 1

    - Soft threads weave
    - Through woven comfort and warmth
    - Sweatshirts embrace cold
    + test

      72 |
      73 |     expect(response.body).toBeDefined();
    > 74 |     expect(response.body.content).toBe(testContent);
         |                                   ^
      75 |     expect(response.body.path).toBe(artifactPath);
      76 |     expect(response.body.size).toBe(testContent.length);
      77 |   });

      at Object.<anonymous> (tests/integration/artifact-pipeline.test.ts:74:35)

  ‚óè Artifact Storage Pipeline ‚Ä∫ should handle non-existent artifacts gracefully

    Expected status 404 but received 200

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/integration/projects.api.test.ts
  ‚óè Projects API ‚Ä∫ lists projects with admin cookie

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      21 |     const cookie = issueAdminCookie();
      22 |     const res = await request(app).get('/projects').set('Cookie', cookie);
    > 23 |     expect(res.status).toBe(200);
         |                        ^
      24 |     expect(Array.isArray(res.body.projects)).toBe(true);
      25 |     const ids = (res.body.projects || []).map((p: any) => p.id);
      26 |     expect(ids).toContain('default');

      at Object.<anonymous> (tests/integration/projects.api.test.ts:23:24)

  ‚óè Projects API ‚Ä∫ creates a local project

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      33 |       .set('Cookie', cookie)
      34 |       .send({ name: 'LocalRepo', local_path: process.cwd(), workspace_mode: 'local_path' });
    > 35 |     expect([200,201]).toContain(res.status);
         |                       ^
      36 |     expect(res.body).toHaveProperty('id');
      37 |     expect(res.body.name).toBe('LocalRepo');
      38 |   });

      at Object.<anonymous> (tests/integration/projects.api.test.ts:35:23)

FAIL tests/integration/database-transactions.test.ts
  ‚óè Integration: Database Transactions ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should handle complete run creation transaction

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should maintain referential integrity on cascade delete

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle constraint violation rollback

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle foreign key violation

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent updates to same run

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent step creations

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Data Consistency Validation ‚Ä∫ should maintain status consistency

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Data Consistency Validation ‚Ä∫ should handle NULL values correctly

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)

  ‚óè Integration: Database Transactions ‚Ä∫ Performance Under Load ‚Ä∫ should handle bulk inserts efficiently

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:12:5)


  ‚óè Test suite failed to run

    error: relation "run" does not exist

      106 |   const start = Date.now();
      107 |   try {
    > 108 |     const res = await runQuery<T>(runner, text, params);
          |                 ^
      109 |     const latencyMs = Date.now() - start;
      110 |
      111 |     // Record metrics

      at node_modules/pg-pool/index.js:45:11
      at query (src/lib/db.ts:108:17)
      at Object.<anonymous> (tests/integration/database-transactions.test.ts:17:5)

FAIL src/lib/__tests__/events.test.ts
  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event with transaction wrapper

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event without stepId

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ records event with empty payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ sanitizes payload using toJsonValue

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ wraps both operations in transaction

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ propagates errors from recordEvent

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ propagates errors from outboxAdd

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - Database Driver ‚Ä∫ rolls back transaction on error

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ records event without transaction wrapper

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ attempts outboxAdd but ignores errors

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ records event successfully with FS driver

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ propagates recordEvent errors even in FS mode

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ recordEvent - File System Driver ‚Ä∫ handles outbox error silently in FS mode

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles null payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles undefined payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles array payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles string payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles number payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles boolean payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Payload Sanitization ‚Ä∫ handles deeply nested payload

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ includes stepId when provided

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ sets stepId to null when not provided

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ StepId Handling ‚Ä∫ handles empty string stepId

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles typical run lifecycle events

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles mixed driver scenarios

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Integration Scenarios ‚Ä∫ handles high-volume event recording

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Error Recovery ‚Ä∫ recovers from transient errors

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Error Recovery ‚Ä∫ maintains consistency on partial failure

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Performance Tests ‚Ä∫ handles concurrent event recording

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

  ‚óè Events Module ‚Ä∫ Performance Tests ‚Ä∫ handles large payloads

    TypeError: Cannot set property withTransaction of #<Object> which has only a getter

      31 |     mockedStore.recordEvent = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
      32 |     mockedStore.outboxAdd = jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void);
    > 33 |     mockedDb.withTransaction = jest.fn().mockImplementation(async (fn: any) => {
         |                             ^
      34 |       return await fn();
      35 |     });
      36 |   });

      at Object.<anonymous> (src/lib/__tests__/events.test.ts:33:29)

FAIL src/api/__tests__/main.test.ts
  ‚óè Main API Server Tests ‚Ä∫ Health Check ‚Ä∫ should return health status

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Health Check ‚Ä∫ should include queue and store status

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs/preview ‚Ä∫ should preview run with valid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs/preview ‚Ä∫ should validate plan schema

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should create run with valid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should reject invalid plan

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ POST /runs ‚Ä∫ should handle store errors gracefully

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id ‚Ä∫ should return run by ID

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id ‚Ä∫ should handle non-existent run

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id/timeline ‚Ä∫ should return run timeline

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs/:id/stream ‚Ä∫ should setup SSE stream for run events

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs ‚Ä∫ should list runs with pagination

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Run Management ‚Ä∫ GET /runs ‚Ä∫ should handle invalid pagination parameters

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Frontend Routing ‚Ä∫ should serve frontend app routes

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Frontend Routing ‚Ä∫ should handle SPA routing for frontend

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ CORS Configuration ‚Ä∫ should handle preflight requests

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ CORS Configuration ‚Ä∫ should set CORS headers

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Middleware Stack ‚Ä∫ should parse JSON bodies

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Middleware Stack ‚Ä∫ should handle large payloads within limit

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Error Handling ‚Ä∫ should handle invalid JSON gracefully

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Error Handling ‚Ä∫ should not leak sensitive information in errors

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Security ‚Ä∫ should validate input parameters

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Security ‚Ä∫ should handle malformed run IDs

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

  ‚óè Main API Server Tests ‚Ä∫ Performance ‚Ä∫ should respond to health check quickly

    TypeError: next is not a function

      59 |   requireAuth: jest.fn((_req: any, _res: any, next: any) => next()),
      60 |   optionalAuth: jest.fn((_req: any, _res: any, next: any) => next()),
    > 61 |   checkUsage: jest.fn((_req: any, _res: any, next: any) => next()),
         |                                                            ^
      62 |   rateLimit: jest.fn((_req: any, _res: any, next: any) => next()),
      63 |   trackApiUsage: jest.fn((_req: any, _res: any, next: any) => next()),
      64 | }));

      at src/api/__tests__/main.test.ts:61:60
      at Object.<anonymous> (src/api/main.ts:93:13)
      at Object.<anonymous> (src/api/__tests__/main.test.ts:94:32)

FAIL tests/unit/handlers/git_pr.test.ts
  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should fail when gate is rejected

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      223 |       mockStore.getLatestGate.mockResolvedValue({ status: 'failed', id: 'gate-1' } as any);
      224 |
    > 225 |       await expect(gitPrHandler.run({
          |             ^
      226 |         runId: 'run-123',
      227 |         step: baseStep as any
      228 |       })).rejects.toThrow('git_pr not approved');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:225:13)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should create PR with inline content

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["rev-parse", "--is-inside-work-tree"], Any<String>, Any<Object>
    Received
           1
              "git",
              ["rev-parse", "--is-inside-work-tree"],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              Array [
            -   "rev-parse",
            -   "--is-inside-work-tree",
            +   "fetch",
            +   "origin",
            +   "main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "rev-parse",
            -   "--is-inside-work-tree",
            +   "checkout",
            +   "-B",
            +   "feat/run-run-123",
            +   "origin/main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      258 |
      259 |       // Should execute git commands
    > 260 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['rev-parse', '--is-inside-work-tree'], expect.any(String), expect.any(Object));
          |                             ^
      261 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['fetch', 'origin', 'main'], expect.any(String), expect.any(Object));
      262 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['checkout', '-B', expect.stringMatching(/feat\/run-/), 'origin/main'], expect.any(String), expect.any(Object));
      263 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['add', '--all'], expect.any(String), expect.any(Object));

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:260:29)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should handle git command failures

    expect(received).rejects.toThrow(expected)

    Expected substring: "cmd failed: git"
    Received message:   "not a git repo"

          130 |
          131 |     // git plumbing
        > 132 |     try { sh('git', ['rev-parse','--is-inside-work-tree'], repo, env); } catch { throw new Error('not a git repo'); }
              |                                                                                        ^
          133 |     sh('git', ['fetch','origin', base], repo, env);
          134 |     // Create branch from origin/base
          135 |     sh('git', ['checkout','-B', branch, `origin/${base}`], repo, env);

      at Object.run (src/worker/handlers/git_pr.ts:132:88)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:444:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:447:19)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should set git user config if not configured

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["config", "user.email", "nofx@example.com"], Any<String>, Any<Object>
    Received
           1
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "rev-parse",
            +   "--is-inside-work-tree",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "fetch",
            +   "origin",
            +   "main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "config",
            -   "user.email",
            -   "nofx@example.com",
            +   "checkout",
            +   "-B",
            +   "feat/run-run-123",
            +   "origin/main",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      469 |
      470 |       // Should set git user config
    > 471 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['config', 'user.email', 'nofx@example.com'], expect.any(String), expect.any(Object));
          |                             ^
      472 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['config', 'user.name', 'NOFX Bot'], expect.any(String), expect.any(Object));
      473 |     });
      474 |

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:471:29)

  ‚óè git_pr handler ‚Ä∫ run ‚Ä∫ should use custom branch and base

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "git", ["fetch", "origin", "develop"], Any<String>, Any<Object>
    Received
           1
              "git",
              Array [
            -   "fetch",
            -   "origin",
            -   "develop",
            +   "rev-parse",
            +   "--is-inside-work-tree",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           2
              "git",
              ["fetch", "origin", "develop"],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},
           3
              "git",
              Array [
            -   "fetch",
            -   "origin",
            -   "develop",
            +   "checkout",
            +   "-B",
            +   "feature/custom-branch",
            +   "origin/develop",
              ],
              {"cwd": "/Volumes/Development/nofx-local-starter", "encoding": "utf8", "env": {"NODE_ENV": "test"}, "stdio": "pipe"},

    Number of calls: 9

      533 |
      534 |       // Should use custom branch and base
    > 535 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['fetch', 'origin', 'develop'], expect.any(String), expect.any(Object));
          |                             ^
      536 |       expect(mockSpawnSync).toHaveBeenCalledWith('git', ['checkout', '-B', 'feature/custom-branch', 'origin/develop'], expect.any(String), expect.any(Object));
      537 |
      538 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {

      at Object.<anonymous> (tests/unit/handlers/git_pr.test.ts:535:29)

FAIL tests/performance/benchmarks.test.ts
  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Health check endpoint performance

    TypeError: fetch failed

      57 |         'health-check',
      58 |         async () => {
    > 59 |           const response = await fetch(`${API_URL}/health`);
         |                            ^
      60 |           return response.text();
      61 |         },
      62 |         { endpoint: '/health', method: 'GET' }

      at endpoint (tests/performance/benchmarks.test.ts:59:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:56:54)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Run creation endpoint performance

    TypeError: fetch failed

      71 |         'create-run',
      72 |         async () => {
    > 73 |           const response = await fetch(`${API_URL}/runs/preview`, {
         |                            ^
      74 |             method: 'POST',
      75 |             headers: { 'Content-Type': 'application/json' },
      76 |             body: JSON.stringify({

      at endpoint (tests/performance/benchmarks.test.ts:73:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:70:46)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ API Endpoint Benchmarks ‚Ä∫ Metrics endpoint performance

    TypeError: fetch failed

       99 |         'metrics-endpoint',
      100 |         async () => {
    > 101 |           const response = await fetch(`${API_URL}/api/metrics`);
          |                            ^
      102 |           return response.text();
      103 |         },
      104 |         { endpoint: '/api/metrics', method: 'GET' }

      at endpoint (tests/performance/benchmarks.test.ts:101:28)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:98:46)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ Concurrent Operation Benchmarks ‚Ä∫ Concurrent API calls benchmark

    TypeError: fetch failed

      370 |           );
      371 |
    > 372 |           const results = await Promise.all(promises);
          |                           ^
      373 |           return results.length;
      374 |         },
      375 |         { operation: 'concurrent-requests', concurrency: 10 }

          at async Promise.all (index 0)
      at operation (tests/performance/benchmarks.test.ts:372:27)
      at BenchmarkRunner.benchmark (src/lib/benchmarks.ts:98:16)
      at Object.<anonymous> (tests/performance/benchmarks.test.ts:365:54)

    Cause:
    AggregateError:


  ‚óè Performance Benchmarks ‚Ä∫ Performance Summary ‚Ä∫ Generate comprehensive performance report

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      472 |       expect(summary.errorRate).toBeLessThan(10); // Less than 10% error rate
      473 |       expect(summary.avgResponseTime).toBeLessThan(1000); // Less than 1 second average
    > 474 |       expect(performanceMonitor.isHealthy()).toBe(true);
          |                                              ^
      475 |     });
      476 |   });
      477 | });

      at Object.<anonymous> (tests/performance/benchmarks.test.ts:474:46)

FAIL tests/unit/store.test.ts
  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ createRun ‚Ä∫ should create a run with FS driver

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data", {"recursive": true}

    Number of calls: 0

      93 |
      94 |         expect(result).toMatchObject(mockRunData);
    > 95 |         expect(mockFs.mkdirSync).toHaveBeenCalledWith(ROOT, { recursive: true });
         |                                  ^
      96 |         expect(mockFs.mkdirSync).toHaveBeenCalledWith(path.join(ROOT, 'runs', 'test-uuid-123'), { recursive: true });
      97 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
      98 |           path.join(ROOT, 'runs', 'test-uuid-123', 'run.json'),

      at Object.<anonymous> (tests/unit/store.test.ts:95:34)

  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ updateRun ‚Ä∫ should update an existing run

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", StringContaining "\"status\":\"running\""
    Received
           1: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", "{
      \"id\": \"test-id\",
      \"status\": \"running\",
      \"created_at\": \"2023-01-01\"
    }"
           2: "/Volumes/Development/nofx-local-starter/local_data/runs/index.json", "[]"

    Number of calls: 2

      146 |         await store.updateRun('test-id', { status: 'running' });
      147 |
    > 148 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      149 |           path.join(ROOT, 'runs', 'test-id', 'run.json'),
      150 |           expect.stringContaining('"status":"running"')
      151 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:148:35)

  ‚óè Store Module ‚Ä∫ Run Operations - FS Driver ‚Ä∫ resetRun ‚Ä∫ should reset run status and timestamps

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", StringContaining "\"status\":\"queued\""
    Received
           1: "/Volumes/Development/nofx-local-starter/local_data/runs/test-id/run.json", "{
      \"id\": \"test-id\",
      \"status\": \"queued\",
      \"ended_at\": null,
      \"completed_at\": null,
      \"created_at\": \"2023-01-01\"
    }"
           2: "/Volumes/Development/nofx-local-starter/local_data/runs/index.json", "[]"

    Number of calls: 2

      172 |         await store.resetRun('test-id');
      173 |
    > 174 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      175 |           path.join(ROOT, 'runs', 'test-id', 'run.json'),
      176 |           expect.stringContaining('"status":"queued"')
      177 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:174:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ createStep ‚Ä∫ should create a step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/test-uuid-123.json", StringContaining "\"status\":\"queued\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/test-uuid-123.json", "{
      \"id\": \"test-uuid-123\",
      \"run_id\": \"run-id\",
      \"name\": \"test-step\",
      \"tool\": \"test-tool\",
      \"inputs\": {
        \"param1\": \"value1\"
      },
      \"status\": \"queued\",
      \"created_at\": \"2025-10-13T00:59:55.360Z\",
      \"started_at\": null,
      \"ended_at\": null,
      \"outputs\": null,
      \"idempotency_key\": null
    }"

    Number of calls: 1

      276 |         });
      277 |
    > 278 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      279 |           path.join(ROOT, 'runs', 'run-id', 'steps', 'test-uuid-123.json'),
      280 |           expect.stringContaining('"status":"queued"')
      281 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:278:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ updateStep ‚Ä∫ should update existing step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run1/steps/step-id.json", StringContaining "\"status\":\"running\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run1/steps/step-id.json", "{
      \"id\": \"step-id\",
      \"status\": \"running\",
      \"created_at\": \"2023-01-01\"
    }"

    Number of calls: 1

      342 |         await store.updateStep('step-id', { status: 'running' });
      343 |
    > 344 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      345 |           path.join(ROOT, 'runs', 'run1', 'steps', 'step-id.json'),
      346 |           expect.stringContaining('"status":"running"')
      347 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:344:35)

  ‚óè Store Module ‚Ä∫ Step Operations - FS Driver ‚Ä∫ resetStep ‚Ä∫ should reset step status and clear timestamps

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/step-id.json", StringContaining "\"status\":\"queued\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/steps/step-id.json", "{
      \"id\": \"step-id\",
      \"status\": \"queued\",
      \"started_at\": null,
      \"ended_at\": null,
      \"completed_at\": null,
      \"outputs\": {}
    }"

    Number of calls: 1

      412 |         await store.resetStep('step-id');
      413 |
    > 414 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      415 |           path.join(ROOT, 'runs', 'run-id', 'steps', 'step-id.json'),
      416 |           expect.stringContaining('"status":"queued"')
      417 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:414:35)

  ‚óè Store Module ‚Ä∫ Event Operations - FS Driver ‚Ä∫ recordEvent ‚Ä∫ should record event to events file

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/events.json", StringContaining "\"type\":\"test-event\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/events.json", "[
      {
        \"id\": \"event1\",
        \"created_at\": \"2023-01-01\"
      },
      {
        \"id\": \"test-uuid-123\",
        \"run_id\": \"run-id\",
        \"type\": \"test-event\",
        \"payload\": {
          \"data\": \"test\"
        },
        \"created_at\": \"2025-10-13T00:59:55.375Z\",
        \"step_id\": \"step-id\"
      }
    ]"

    Number of calls: 1

      432 |         await store.recordEvent('run-id', 'test-event', { data: 'test' }, 'step-id');
      433 |
    > 434 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      435 |           path.join(ROOT, 'runs', 'run-id', 'events.json'),
      436 |           expect.stringContaining('"type":"test-event"')
      437 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:434:35)

  ‚óè Store Module ‚Ä∫ Gate Operations - FS Driver ‚Ä∫ updateGate ‚Ä∫ should update gate with approval info

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/gates.json", StringContaining "\"status\":\"approved\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/runs/run-id/gates.json", "[
      {
        \"id\": \"gate-123\",
        \"status\": \"approved\",
        \"approved_by\": \"user-123\",
        \"approved_at\": \"2025-10-13T00:59:55.381Z\",
        \"run_id\": \"run-id\"
      }
    ]"

    Number of calls: 1

      513 |         });
      514 |
    > 515 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      516 |           path.join(ROOT, 'runs', 'run-id', 'gates.json'),
      517 |           expect.stringContaining('"status":"approved"')
      518 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:515:35)

  ‚óè Store Module ‚Ä∫ Artifact Operations - FS Driver ‚Ä∫ listArtifactsByRun ‚Ä∫ should list artifacts with step names

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 1

      Object {
        "id": "art1",
    -   "step_name": "Step One",
    +   "step_name": null,
      }

      600 |         const result = await store.listArtifactsByRun('run-id');
      601 |
    > 602 |         expect(result[0]).toMatchObject({
          |                           ^
      603 |           id: 'art1',
      604 |           step_name: 'Step One'
      605 |         });

      at Object.<anonymous> (tests/unit/store.test.ts:602:27)

  ‚óè Store Module ‚Ä∫ Inbox/Outbox Operations - FS Driver ‚Ä∫ outbox operations ‚Ä∫ should add messages to outbox

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", StringContaining "\"topic\":\"topic1\""
    Received: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", "[
      {
        \"id\": \"test-uuid-123\",
        \"topic\": \"topic1\",
        \"payload\": {
          \"message\": \"test\"
        },
        \"sent\": false,
        \"created_at\": \"2025-10-13T00:59:55.403Z\"
      }
    ]"

    Number of calls: 1

      637 |         await store.outboxAdd('topic1', { message: 'test' });
      638 |
    > 639 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      640 |           path.join(ROOT, 'outbox.json'),
      641 |           expect.stringContaining('"topic":"topic1"')
      642 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:639:35)

  ‚óè Store Module ‚Ä∫ Inbox/Outbox Operations - FS Driver ‚Ä∫ outbox operations ‚Ä∫ should mark messages as sent

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", StringContaining "\"sent\":true"
    Received: "/Volumes/Development/nofx-local-starter/local_data/outbox.json", "[
      {
        \"id\": \"msg1\",
        \"sent\": true
      }
    ]"

    Number of calls: 1

      665 |         await store.outboxMarkSent('msg1');
      666 |
    > 667 |         expect(mockFsp.writeFile).toHaveBeenCalledWith(
          |                                   ^
      668 |           path.join(ROOT, 'outbox.json'),
      669 |           expect.stringContaining('"sent":true')
      670 |         );

      at Object.<anonymous> (tests/unit/store.test.ts:667:35)

  ‚óè Store Module ‚Ä∫ Integration Scenarios ‚Ä∫ should handle complete run lifecycle

    step not found

      177 |   async addArtifact(stepId: string, type: string, pth: string, metadata?: JsonValue): Promise<ArtifactRow> {
      178 |     const step = await this.getStep(stepId);
    > 179 |     if (!step) throw new Error('step not found');
          |                      ^
      180 |     const file = path.join(ROOT, 'runs', step.run_id, 'artifacts.json');
      181 |     const rows: ArtifactRow[] = JSON.parse(await fsp.readFile(file, 'utf8').catch(()=> '[]'));
      182 |     const row: ArtifactRow = {

      at FileSystemStore.addArtifact (src/lib/store/FileSystemStore.ts:179:22)
      at Object.<anonymous> (tests/unit/store.test.ts:1222:7)

  ‚óè Store Module ‚Ä∫ Integration Scenarios ‚Ä∫ should handle outbox message lifecycle

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      1253 |       // List unsent
      1254 |       const unsent = await store.outboxListUnsent();
    > 1255 |       expect(unsent).toHaveLength(2);
           |                      ^
      1256 |
      1257 |       // Mark first as sent
      1258 |       await store.outboxMarkSent(unsent[0].id);

      at Object.<anonymous> (tests/unit/store.test.ts:1255:22)

FAIL tests/unit/handlers/codegen.test.ts
  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should generate code successfully with default filename

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "README.md", "# My Project¬∑
    This is a great project.", "text/markdown"
    Received: "run-123", "step-123", "README.md", "# My Project¬∑
    This is a great project.", "text/markdown"

    Number of calls: 1

      118 |
      119 |       // Should save artifact with default filename
    > 120 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      121 |         'run-123',
      122 |         'README.md',
      123 |         codegenResult.content,

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:120:32)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should use custom filename when provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "main.js", "console.log(\"Hello World\");", "application/javascript"
    Received: "run-123", "step-123", "main.js", "console.log(\"Hello World\");", "text/markdown"

    Number of calls: 1

      187 |
      188 |       // Should save artifact with custom filename
    > 189 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      190 |         'run-123',
      191 |         'main.js',
      192 |         codegenResult.content,

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:189:32)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should handle codegen without usage information

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"artifact_url": "https://example.com/file.md", "content": "# Simple README", "filename": "README.md", "model": "gpt-3.5-turbo", "provider": "openai"}, "status": "succeeded"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "artifact_url": "https://example.com/file.md",
            -     "content": "# Simple README",
            -     "filename": "README.md",
            -     "model": "gpt-3.5-turbo",
            -     "provider": "openai",
            -   },
            -   "status": "succeeded",
            +   "started_at": "2025-10-13T00:59:55.522Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:55.522Z",
                "outputs": Object {
            -     "artifact_url": "https://example.com/file.md",
            -     "content": "# Simple README",
            -     "filename": "README.md",
            +     "artifact": "https://example.com/file.md",
                  "model": "gpt-3.5-turbo",
                  "provider": "openai",
                },
                "status": "succeeded",
              },

    Number of calls: 2

      223 |
      224 |       // Should not include cost calculation
    > 225 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      226 |         status: 'succeeded',
      227 |         ended_at: expect.any(String),
      228 |         outputs: {

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:225:36)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should detect content type based on filename extension

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "script.py", "test content", "text/x-python"
    Received: "run-123", "step-123", "script.py", "test content", "text/markdown"

    Number of calls: 1

      279 |         });
      280 |
    > 281 |         expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                  ^
      282 |           'run-123',
      283 |           testCase.filename,
      284 |           'test content',

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:281:34)

  ‚óè codegen handler ‚Ä∫ run ‚Ä∫ should handle empty filename input

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "README.md", "test content", "text/markdown"
    Received: "run-123", "step-123", "README.md", "test content", "text/markdown"

    Number of calls: 1

      354 |
      355 |       // Should default to README.md when filename is empty/whitespace
    > 356 |       expect(mockSaveArtifact).toHaveBeenCalledWith(
          |                                ^
      357 |         'run-123',
      358 |         'README.md',
      359 |         'test content',

      at Object.<anonymous> (tests/unit/handlers/codegen.test.ts:356:32)

FAIL tests/unit/correlationId.test.ts
  ‚óè Correlation ID and Structured Logging ‚Ä∫ Request Correlation ‚Ä∫ should extract run ID from URL params

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"correlationId": Any<String>, "method": "POST", "runId": "run_abc123"}

    Number of calls: 0

      107 |
      108 |       // Verify logger was called with correlation ID
    > 109 |       expect(mockLogger.child).toHaveBeenCalledWith(
          |                                ^
      110 |         expect.objectContaining({
      111 |           correlationId: expect.any(String),
      112 |           runId: runId,

      at Object.<anonymous> (tests/unit/correlationId.test.ts:109:32)

  ‚óè Correlation ID and Structured Logging ‚Ä∫ Structured Logging ‚Ä∫ should log request start and completion with context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"event": "request.started"}, "Request started"

    Number of calls: 0

      133 |
      134 |       // Verify request started log
    > 135 |       expect(childLogger.info).toHaveBeenCalledWith(
          |                                ^
      136 |         { event: 'request.started' },
      137 |         'Request started'
      138 |       );

      at Object.<anonymous> (tests/unit/correlationId.test.ts:135:32)

  ‚óè Correlation ID and Structured Logging ‚Ä∫ Structured Logging ‚Ä∫ should include correlation ID in all logs within request context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"correlationId": "test_correlation_456"}

    Number of calls: 0

      173 |
      174 |         // Verify child was created with correlation ID
    > 175 |         expect(mockLogger.child).toHaveBeenCalledWith({ correlationId });
          |                                  ^
      176 |       });
      177 |     });
      178 |   });

      at tests/unit/correlationId.test.ts:175:34
      at run (src/lib/observability.ts:42:14)
      at Object.<anonymous> (tests/unit/correlationId.test.ts:160:13)

FAIL tests/unit/handlers/bash.test.ts
  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should execute simple command successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "echo \"hello world\""],
      Object {
        "cwd": "/default/cwd",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      124 |
      125 |       // Should spawn with correct command
    > 126 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'echo "hello world"'], {
          |                         ^
      127 |         cwd: '/default/cwd',
      128 |         stdio: ['pipe', 'pipe', 'pipe'],
      129 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:126:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle command with stderr output

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"command": "ls nonexistent_file", "exitCode": 1, "stderr": "ls: nonexistent_file: No such file or directory
    ", "stdout": "", "success": false}, "status": "succeeded"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "command": "ls nonexistent_file",
            -     "exitCode": 1,
            -     "stderr": "ls: nonexistent_file: No such file or directory
            - ",
            -     "stdout": "",
            -     "success": false,
            -   },
            -   "status": "succeeded",
            +   "started_at": "2025-10-13T00:59:55.766Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:55.778Z",
                "outputs": Object {
                  "command": "ls nonexistent_file",
                  "exitCode": 1,
            -     "stderr": "ls: nonexistent_file: No such file or directory
            - ",
            +     "stderr": "ls: nonexistent_file: No such file or directory",
                  "stdout": "",
                  "success": false,
                },
            -   "status": "succeeded",
            +   "status": "failed",
              },

    Number of calls: 2

      171 |       await runPromise;
      172 |
    > 173 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      174 |         status: 'succeeded',
      175 |         ended_at: expect.any(String),
      176 |         outputs: {

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:173:36)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use project workspace when project_id provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "pwd"],
      Object {
        "cwd": "/project/workspace",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      211 |       expect(mockGetProject).toHaveBeenCalledWith('proj-123');
      212 |       expect(mockWorkspaceManager.ensureWorkspace).toHaveBeenCalledWith(project);
    > 213 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'pwd'], {
          |                         ^
      214 |         cwd: '/project/workspace',
      215 |         stdio: ['pipe', 'pipe', 'pipe'],
      216 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:213:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use workspace parameter as project_id

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "ls"],
      Object {
        "cwd": "/workspace/path",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      245 |
      246 |       expect(mockGetProject).toHaveBeenCalledWith('proj-456');
    > 247 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'ls'], {
          |                         ^
      248 |         cwd: '/workspace/path',
      249 |         stdio: ['pipe', 'pipe', 'pipe'],
      250 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:247:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use workspace parameter as direct path when project not found

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "ls"],
      Object {
        "cwd": "/direct/path",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      276 |       await runPromise;
      277 |
    > 278 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'ls'], {
          |                         ^
      279 |         cwd: '/direct/path',
      280 |         stdio: ['pipe', 'pipe', 'pipe'],
      281 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:278:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use custom cwd when provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "pwd"],
      Object {
        "cwd": "/custom/working/dir",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      305 |       await runPromise;
      306 |
    > 307 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'pwd'], {
          |                         ^
      308 |         cwd: '/custom/working/dir',
      309 |         stdio: ['pipe', 'pipe', 'pipe'],
      310 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:307:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle command timeout

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      333 |       }, 10);
      334 |
    > 335 |       await expect(runPromise).rejects.toThrow();
          |             ^
      336 |
      337 |       // Should have tried to kill the process
      338 |       expect(mockProcess.kill).toHaveBeenCalledWith('SIGTERM');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:335:13)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should use default command when none provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "bash",
      ["-c", "echo \"No command provided\""],
      Object {
        "cwd": "/default/cwd",
    -   "env": Any<Object>,
    -   "shell": false,
        "stdio": Array [
    -     "pipe",
    +     "ignore",
          "pipe",
          "pipe",
        ],
      },

    Number of calls: 1

      357 |       await runPromise;
      358 |
    > 359 |       expect(mockSpawn).toHaveBeenCalledWith('bash', ['-c', 'echo "No command provided"'], {
          |                         ^
      360 |         cwd: '/default/cwd',
      361 |         stdio: ['pipe', 'pipe', 'pipe'],
      362 |         shell: false,

      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:359:25)

  ‚óè bash handler ‚Ä∫ run ‚Ä∫ should handle spawn errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      389 |       });
      390 |
    > 391 |       await expect(bashHandler.run({
          |             ^
      392 |         runId: 'run-123',
      393 |         step: baseStep as any
      394 |       })).rejects.toThrow('Command not found');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/bash.test.ts:391:13)

FAIL tests/integration/api-auth.integration.test.ts
  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs requires authentication

    TypeError: fetch failed

      21 |   describe('/api/runs - Run Management', () => {
      22 |     test('POST /api/runs requires authentication', async () => {
    > 23 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      24 |         method: 'POST',
      25 |         headers: { 'Content-Type': 'application/json' },
      26 |         body: JSON.stringify({ prompt: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:23:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs allows with valid cookie

    TypeError: fetch failed

      33 |
      34 |     test('POST /api/runs allows with valid cookie', async () => {
    > 35 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      36 |         method: 'POST',
      37 |         headers: {
      38 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:35:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ POST /api/runs allows with Bearer token

    TypeError: fetch failed

      47 |
      48 |     test('POST /api/runs allows with Bearer token', async () => {
    > 49 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      50 |         method: 'POST',
      51 |         headers: {
      52 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:49:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ GET /api/runs requires authentication

    TypeError: fetch failed

      60 |
      61 |     test('GET /api/runs requires authentication', async () => {
    > 62 |       const response = await fetch(`${API_BASE}/runs`);
         |                        ^
      63 |       expect(response.status).toBe(401);
      64 |     });
      65 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:62:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs - Run Management ‚Ä∫ GET /api/runs allows with authentication

    TypeError: fetch failed

      65 |
      66 |     test('GET /api/runs allows with authentication', async () => {
    > 67 |       const response = await fetch(`${API_BASE}/runs`, {
         |                        ^
      68 |         headers: { 'Cookie': validCookie() }
      69 |       });
      70 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:67:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123 requires authentication

    TypeError: fetch failed

      74 |   describe('/api/runs/[id] - Run Details', () => {
      75 |     test('GET /api/runs/test123 requires authentication', async () => {
    > 76 |       const response = await fetch(`${API_BASE}/runs/test123`);
         |                        ^
      77 |       expect(response.status).toBe(401);
      78 |     });
      79 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:76:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/timeline requires authentication

    TypeError: fetch failed

      79 |
      80 |     test('GET /api/runs/test123/timeline requires authentication', async () => {
    > 81 |       const response = await fetch(`${API_BASE}/runs/test123/timeline`);
         |                        ^
      82 |       expect(response.status).toBe(401);
      83 |     });
      84 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:81:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/gates requires authentication

    TypeError: fetch failed

      84 |
      85 |     test('GET /api/runs/test123/gates requires authentication', async () => {
    > 86 |       const response = await fetch(`${API_BASE}/runs/test123/gates`);
         |                        ^
      87 |       expect(response.status).toBe(401);
      88 |     });
      89 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:86:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ GET /api/runs/test123/stream requires authentication

    TypeError: fetch failed

      89 |
      90 |     test('GET /api/runs/test123/stream requires authentication', async () => {
    > 91 |       const response = await fetch(`${API_BASE}/runs/test123/stream`);
         |                        ^
      92 |       expect(response.status).toBe(401);
      93 |     });
      94 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:91:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/[id] - Run Details ‚Ä∫ allows with Bearer token

    TypeError: fetch failed

      94 |
      95 |     test('allows with Bearer token', async () => {
    > 96 |       const response = await fetch(`${API_BASE}/runs/test123`, {
         |                        ^
      97 |         headers: { 'Authorization': validBearerToken }
      98 |       });
      99 |       // May be 404 if run doesn't exist, but not 401

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:96:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/preview - Plan Preview ‚Ä∫ POST /api/runs/preview requires authentication

    TypeError: fetch failed

      104 |   describe('/api/runs/preview - Plan Preview', () => {
      105 |     test('POST /api/runs/preview requires authentication', async () => {
    > 106 |       const response = await fetch(`${API_BASE}/runs/preview`, {
          |                        ^
      107 |         method: 'POST',
      108 |         headers: { 'Content-Type': 'application/json' },
      109 |         body: JSON.stringify({ standard: { prompt: 'test' } })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:106:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/runs/preview - Plan Preview ‚Ä∫ allows with authentication

    TypeError: fetch failed

      113 |
      114 |     test('allows with authentication', async () => {
    > 115 |       const response = await fetch(`${API_BASE}/runs/preview`, {
          |                        ^
      116 |         method: 'POST',
      117 |         headers: {
      118 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:115:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/gates - Gate Management ‚Ä∫ POST /api/gates requires authentication

    TypeError: fetch failed

      127 |   describe('/api/gates - Gate Management', () => {
      128 |     test('POST /api/gates requires authentication', async () => {
    > 129 |       const response = await fetch(`${API_BASE}/gates`, {
          |                        ^
      130 |         method: 'POST',
      131 |         headers: { 'Content-Type': 'application/json' },
      132 |         body: JSON.stringify({ run_id: 'test', gate_type: 'typecheck' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:129:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/gates - Gate Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      136 |
      137 |     test('allows with authentication', async () => {
    > 138 |       const response = await fetch(`${API_BASE}/gates`, {
          |                        ^
      139 |         method: 'POST',
      140 |         headers: {
      141 |           'Content-Type': 'application/json',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:138:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ GET /api/projects requires authentication

    TypeError: fetch failed

      150 |   describe('/api/projects - Project Management', () => {
      151 |     test('GET /api/projects requires authentication', async () => {
    > 152 |       const response = await fetch(`${API_BASE}/projects`);
          |                        ^
      153 |       expect(response.status).toBe(401);
      154 |     });
      155 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:152:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ POST /api/projects requires authentication

    TypeError: fetch failed

      155 |
      156 |     test('POST /api/projects requires authentication', async () => {
    > 157 |       const response = await fetch(`${API_BASE}/projects`, {
          |                        ^
      158 |         method: 'POST',
      159 |         headers: { 'Content-Type': 'application/json' },
      160 |         body: JSON.stringify({ name: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:157:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/projects - Project Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      164 |
      165 |     test('allows with authentication', async () => {
    > 166 |       const response = await fetch(`${API_BASE}/projects`, {
          |                        ^
      167 |         headers: { 'Cookie': validCookie() }
      168 |       });
      169 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:166:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ GET /api/models requires authentication

    TypeError: fetch failed

      173 |   describe('/api/models - Model Management', () => {
      174 |     test('GET /api/models requires authentication', async () => {
    > 175 |       const response = await fetch(`${API_BASE}/models`);
          |                        ^
      176 |       expect(response.status).toBe(401);
      177 |     });
      178 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:175:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ POST /api/models requires authentication

    TypeError: fetch failed

      178 |
      179 |     test('POST /api/models requires authentication', async () => {
    > 180 |       const response = await fetch(`${API_BASE}/models`, {
          |                        ^
      181 |         method: 'POST',
      182 |         headers: { 'Content-Type': 'application/json' },
      183 |         body: JSON.stringify({ name: 'test' })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:180:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/models - Model Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      187 |
      188 |     test('allows with authentication', async () => {
    > 189 |       const response = await fetch(`${API_BASE}/models`, {
          |                        ^
      190 |         headers: { 'Authorization': validBearerToken }
      191 |       });
      192 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:189:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/templates - Template Management ‚Ä∫ GET /api/templates requires authentication

    TypeError: fetch failed

      196 |   describe('/api/templates - Template Management', () => {
      197 |     test('GET /api/templates requires authentication', async () => {
    > 198 |       const response = await fetch(`${API_BASE}/templates`);
          |                        ^
      199 |       expect(response.status).toBe(401);
      200 |     });
      201 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:198:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/templates - Template Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      201 |
      202 |     test('allows with authentication', async () => {
    > 203 |       const response = await fetch(`${API_BASE}/templates`, {
          |                        ^
      204 |         headers: { 'Cookie': validCookie() }
      205 |       });
      206 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:203:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ GET /api/settings requires authentication

    TypeError: fetch failed

      210 |   describe('/api/settings - Settings Management', () => {
      211 |     test('GET /api/settings requires authentication', async () => {
    > 212 |       const response = await fetch(`${API_BASE}/settings`);
          |                        ^
      213 |       expect(response.status).toBe(401);
      214 |     });
      215 |

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:212:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ POST /api/settings requires authentication

    TypeError: fetch failed

      215 |
      216 |     test('POST /api/settings requires authentication', async () => {
    > 217 |       const response = await fetch(`${API_BASE}/settings`, {
          |                        ^
      218 |         method: 'POST',
      219 |         headers: { 'Content-Type': 'application/json' },
      220 |         body: JSON.stringify({ settings: {} })

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:217:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ /api/settings - Settings Management ‚Ä∫ allows with authentication

    TypeError: fetch failed

      224 |
      225 |     test('allows with authentication', async () => {
    > 226 |       const response = await fetch(`${API_BASE}/settings`, {
          |                        ^
      227 |         headers: { 'Authorization': validBearerToken }
      228 |       });
      229 |       expect(response.status).not.toBe(401);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:226:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Public Endpoints - Should NOT require auth ‚Ä∫ GET /api/health is public

    TypeError: fetch failed

      233 |   describe('Public Endpoints - Should NOT require auth', () => {
      234 |     test('GET /api/health is public', async () => {
    > 235 |       const response = await fetch(`${API_BASE}/health`);
          |                        ^
      236 |       expect(response.status).toBe(200);
      237 |       const data = await response.json();
      238 |       expect(data.status).toBe('healthy');

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:235:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Public Endpoints - Should NOT require auth ‚Ä∫ GET /api/test is public

    TypeError: fetch failed

      240 |
      241 |     test('GET /api/test is public', async () => {
    > 242 |       const response = await fetch(`${API_BASE}/test`);
          |                        ^
      243 |       expect(response.status).toBe(200);
      244 |     });
      245 |   });

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:242:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects SQL injection in cookie

    TypeError: fetch failed

      247 |   describe('Attack Vectors', () => {
      248 |     test('rejects SQL injection in cookie', async () => {
    > 249 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      250 |         headers: {
      251 |           'Cookie': `${COOKIE_NAME}=' OR '1'='1|fakesig`
      252 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:249:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects XSS attempt in authorization

    TypeError: fetch failed

      256 |
      257 |     test('rejects XSS attempt in authorization', async () => {
    > 258 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      259 |         headers: {
      260 |           'Authorization': 'Bearer <script>alert(1)</script>'
      261 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:258:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects tampered cookie signature

    TypeError: fetch failed

      268 |
      269 |     test('rejects tampered cookie signature', async () => {
    > 270 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      271 |         headers: {
      272 |           'Cookie': `${COOKIE_NAME}=admin|tampered_sig`
      273 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:270:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects cookie without signature

    TypeError: fetch failed

      277 |
      278 |     test('rejects cookie without signature', async () => {
    > 279 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      280 |         headers: {
      281 |           'Cookie': `${COOKIE_NAME}=admin`
      282 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:279:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects empty Bearer token

    TypeError: fetch failed

      286 |
      287 |     test('rejects empty Bearer token', async () => {
    > 288 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      289 |         headers: {
      290 |           'Authorization': 'Bearer '
      291 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:288:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects Basic auth format

    TypeError: fetch failed

      296 |
      297 |     test('rejects Basic auth format', async () => {
    > 298 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      299 |         headers: {
      300 |           'Authorization': 'Basic dXNlcjpwYXNz'
      301 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:298:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ Attack Vectors ‚Ä∫ rejects case-mismatched bearer

    TypeError: fetch failed

      305 |
      306 |     test('rejects case-mismatched bearer', async () => {
    > 307 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      308 |         headers: {
      309 |           'Authorization': 'bearer validtoken'
      310 |         }

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:307:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ CORS and Headers ‚Ä∫ returns CORS headers

    TypeError: fetch failed

      316 |   describe('CORS and Headers', () => {
      317 |     test('returns CORS headers', async () => {
    > 318 |       const response = await fetch(`${API_BASE}/health`, {
          |                        ^
      319 |         method: 'OPTIONS'
      320 |       });
      321 |       expect(response.headers.has('access-control-allow-origin')).toBe(true);

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:318:24)

    Cause:
    AggregateError:


  ‚óè API Authentication Integration - BULLETPROOF ‚Ä∫ CORS and Headers ‚Ä∫ handles preflight requests

    TypeError: fetch failed

      323 |
      324 |     test('handles preflight requests', async () => {
    > 325 |       const response = await fetch(`${API_BASE}/runs`, {
          |                        ^
      326 |         method: 'OPTIONS',
      327 |         headers: {
      328 |           'Origin': 'http://localhost:3001',

      at Object.<anonymous> (tests/integration/api-auth.integration.test.ts:325:24)

    Cause:
    AggregateError:


FAIL src/lib/__tests__/orchestration.test.ts
  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ creates a solo orchestration session

    expect(received).toBe(expected) // Object.is equality

    Expected: "solo"
    Received: undefined

      91 |
      92 |         expect(result.session).toBeDefined();
    > 93 |         expect(result.session.orchestrationType).toBe('solo');
         |                                                  ^
      94 |         expect(result.session.status).toBe('active');
      95 |       });
      96 |

      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:93:50)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ creates a hierarchical orchestration session with relationships

    TypeError: Cannot read properties of undefined (reading 'id')

      558 | function mapSessionRow(row: any): AgentSession {
      559 |   return {
    > 560 |     id: row.id,
          |             ^
      561 |     orchestrationType: row.orchestration_type,
      562 |     primaryAgentId: row.primary_agent_id,
      563 |     sessionMetadata: row.session_metadata || {},

      at id (src/lib/orchestration.ts:560:13)
      at mapSessionRow (src/lib/orchestration.ts:70:23)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ createOrchestrationSession ‚Ä∫ throws error when no agents match criteria

    expect(received).rejects.toThrow(expected)

    Expected substring: "No agents match the selection criteria"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          558 | function mapSessionRow(row: any): AgentSession {
          559 |   return {
        > 560 |     id: row.id,
              |             ^
          561 |     orchestrationType: row.orchestration_type,
          562 |     primaryAgentId: row.primary_agent_id,
          563 |     sessionMetadata: row.session_metadata || {},

      at id (src/lib/orchestration.ts:560:13)
      at mapSessionRow (src/lib/orchestration.ts:70:23)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:197:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Session Management ‚Ä∫ updateOrchestrationSession ‚Ä∫ throws error when session not found

    expect(received).rejects.toThrow(expected)

    Expected substring: "Session nonexistent-session not found"

    Received function did not throw

      271 |             status: 'completed'
      272 |           })
    > 273 |         ).rejects.toThrow('Session nonexistent-session not found');
          |                   ^
      274 |       });
      275 |     });
      276 |

      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:273:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Agent Communication ‚Ä∫ sendAgentMessage ‚Ä∫ throws error when session is inactive

    expect(received).rejects.toThrow(expected)

    Expected substring: "Cannot send message to inactive session"

    Received function did not throw

      615 |             payload: {}
      616 |           })
    > 617 |         ).rejects.toThrow('Cannot send message to inactive session');
          |                   ^
      618 |       });
      619 |     });
      620 |

      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:617:19)

  ‚óè Orchestration Service - Comprehensive Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ handles hierarchical orchestration without workers

    expect(received).toBe(expected) // Object.is equality

    Expected: "hierarchical"
    Received: undefined

      854 |       });
      855 |
    > 856 |       expect(result.session.orchestrationType).toBe('hierarchical');
          |                                                ^
      857 |     });
      858 |
      859 |     it('handles swarm with more than 10 agents', async () => {

      at Object.<anonymous> (src/lib/__tests__/orchestration.test.ts:856:48)

FAIL tests/unit/teams-routes-simple.test.ts
  ‚óè Teams Routes ‚Ä∫ POST /teams ‚Ä∫ should create team successfully

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/invites ‚Ä∫ should send invite successfully

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/invites ‚Ä∫ should prevent inviting existing members

    Expected status 400 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/accept-invite ‚Ä∫ should accept invite successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ DELETE /teams/:teamId/invites/:inviteId ‚Ä∫ should cancel invite successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ DELETE /teams/:teamId/members/:memberId ‚Ä∫ should remove member successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/leave ‚Ä∫ should allow member to leave team

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/leave ‚Ä∫ should prevent owner from leaving team

    Expected status 400 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè Teams Routes ‚Ä∫ POST /teams/:teamId/transfer-ownership ‚Ä∫ should transfer ownership successfully

    Expected status 200 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

FAIL tests/unit/registry.store.test.ts
  ‚óè registry store ‚Ä∫ publishAgent inserts registry and version rows

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      131 |         return { rows: [versionRow] };
      132 |       }
    > 133 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      134 |     });
      135 |
      136 |     const result = await registry.publishAgent(payload);

      at tests/unit/registry.store.test.ts:133:13
      at src/lib/registry.ts:383:36
      at tests/unit/registry.store.test.ts:12:73
      at src/lib/registry.ts:382:98
      at f (src/lib/observability.ts:113:24)
      at Object.publishAgent (src/lib/registry.ts:382:45)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:136:20)

  ‚óè registry store ‚Ä∫ getAgent returns null when not found

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      164 |         return { rows: [] };
      165 |       }
    > 166 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      167 |     });
      168 |
      169 |     const result = await registry.getAgent('missing-agent');

      at tests/unit/registry.store.test.ts:166:13
      at src/lib/registry.ts:367:10
      at f (src/lib/observability.ts:113:24)
      at Object.getAgent (src/lib/registry.ts:366:55)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:169:20)

  ‚óè registry store ‚Ä∫ rollbackAgent activates target version

    Unexpected query: select * from nofx.agent_registry where agent_id = $1 and tenant_id = $2 limit 1

      377 |         return { rows: versionRows };
      378 |       }
    > 379 |       throw new Error(`Unexpected query: ${sql}`);
          |             ^
      380 |     });
      381 |
      382 |     const detail = await registry.rollbackAgent('doc-writer', '1.0.0');

      at tests/unit/registry.store.test.ts:379:13
      at src/lib/registry.ts:367:10
      at f (src/lib/observability.ts:113:24)
      at getAgent (src/lib/registry.ts:366:55)
      at src/lib/registry.ts:480:20
      at timeIt (src/lib/observability.ts:113:18)
      at Object.rollbackAgent (src/lib/registry.ts:466:33)
      at Object.<anonymous> (tests/unit/registry.store.test.ts:382:20)

FAIL src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts
  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event with all required fields

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-123/events/event-uuid-123.json", ObjectContaining {"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"stepName": "Execute Test", "tool": "test_runner"}, "run_id": "run-123", "type": "step.started"}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"stepName": "Execute Test", "tool": "test_runner"}, "run_id": "run-123", "type": "step.started"}]

    Number of calls: 1

      78 |       await service.recordEvent(runId, type, payload);
      79 |
    > 80 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
         |                                         ^
      81 |         '/workspace/runs/run-123/events/event-uuid-123.json',
      82 |         expect.objectContaining({
      83 |           id: 'event-uuid-123',

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:80:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event with step ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"step_id": "step-456"}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"result": "success"}, "run_id": "run-123", "step_id": "step-456", "type": "step.completed"}]

    Number of calls: 1

       95 |       await service.recordEvent('run-123', 'step.completed', { result: 'success' }, stepId);
       96 |
    >  97 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
       98 |         expect.any(String),
       99 |         expect.objectContaining({
      100 |           step_id: stepId

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:97:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ records event without step ID

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectNotContaining {"step_id": Anything}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-123", "type": "run.started"}]

    Number of calls: 1

      106 |       await service.recordEvent('run-123', 'run.started', {});
      107 |
    > 108 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      109 |         expect.any(String),
      110 |         expect.not.objectContaining({
      111 |           step_id: expect.anything()

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:108:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ ensures events directory exists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-789/events"
    Received: "/workspace/runs/run-789"

    Number of calls: 1

      117 |       await service.recordEvent('run-789', 'test.event', {});
      118 |
    > 119 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-789/events');
          |                                         ^
      120 |     });
      121 |
      122 |     it('handles default empty payload', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:119:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles default empty payload

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {}}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-123", "type": "simple.event"}]

    Number of calls: 1

      123 |       await service.recordEvent('run-123', 'simple.event');
      124 |
    > 125 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      126 |         expect.any(String),
      127 |         expect.objectContaining({
      128 |           payload: {}

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:125:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles null payload

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": null}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": null, "run_id": "run-123", "type": "null.event"}]

    Number of calls: 1

      134 |       await service.recordEvent('run-123', 'null.event', null);
      135 |
    > 136 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      137 |         expect.any(String),
      138 |         expect.objectContaining({
      139 |           payload: null

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:136:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles complex nested payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"level1": {"level2": {"level3": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": "value"}}}}, "metadata": {"timestamp": 1705320000000, "user": "test-user"}}}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"level1": {"level2": {"level3": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": "value"}}}}, "metadata": {"timestamp": 1705320000000, "user": "test-user"}}, "run_id": "run-123", "type": "complex.event"}]

    Number of calls: 1

      161 |       await service.recordEvent('run-123', 'complex.event', complexPayload);
      162 |
    > 163 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      164 |         expect.any(String),
      165 |         expect.objectContaining({
      166 |           payload: complexPayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:163:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles array payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": [1, 2, 3, {"key": "value"}]}
    Received: "/workspace/runs/run-123/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": [1, 2, 3, {"key": "value"}], "run_id": "run-123", "type": "array.event"}]

    Number of calls: 1

      174 |       await service.recordEvent('run-123', 'array.event', arrayPayload);
      175 |
    > 176 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      177 |         expect.any(String),
      178 |         expect.objectContaining({
      179 |           payload: arrayPayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:176:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ generates unique IDs for multiple events

    expect(received).toMatchObject(expected)

    Expected: {"id": "uuid-1"}
    Received: [{"created_at": "2024-01-15T12:00:00.000Z", "id": "uuid-1", "payload": {}, "run_id": "run-1", "type": "event.1"}]

      193 |
      194 |       const calls = mockFileOps.writeJsonFile.mock.calls;
    > 195 |       expect(calls[0][1]).toMatchObject({ id: 'uuid-1' });
          |                           ^
      196 |       expect(calls[1][1]).toMatchObject({ id: 'uuid-2' });
      197 |       expect(calls[2][1]).toMatchObject({ id: 'uuid-3' });
      198 |     });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:195:27)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles very large payloads

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"data": [{"id": 0, "value": "item-0"}, {"id": 1, "value": "item-1"}, {"id": 2, "value": "item-2"}, {"id": 3, "value": "item-3"}, {"id": 4, "value": "item-4"}, {"id": 5, "value": "item-5"}, {"id": 6, "value": "item-6"}, {"id": 7, "value": "item-7"}, {"id": 8, "value": "item-8"}, {"id": 9, "value": "item-9"}, ‚Ä¶]}}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"data": [{"id": 0, "value": "item-0"}, {"id": 1, "value": "item-1"}, {"id": 2, "value": "item-2"}, {"id": 3, "value": "item-3"}, {"id": 4, "value": "item-4"}, {"id": 5, "value": "item-5"}, {"id": 6, "value": "item-6"}, {"id": 7, "value": "item-7"}, {"id": 8, "value": "item-8"}, {"id": 9, "value": "item-9"}, ‚Ä¶]}, "run_id": "run-1", "type": "large.event"}]

    Number of calls: 1

      230 |       await service.recordEvent('run-1', 'large.event', largePayload);
      231 |
    > 232 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      233 |         expect.any(String),
      234 |         expect.objectContaining({
      235 |           payload: largePayload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:232:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ handles special characters in event type

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": "event.type-with_special.chars"}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.type-with_special.chars"}]

    Number of calls: 1

      241 |       await service.recordEvent('run-1', 'event.type-with_special.chars', {});
      242 |
    > 243 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      244 |         expect.any(String),
      245 |         expect.objectContaining({
      246 |           type: 'event.type-with_special.chars'

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:243:41)

  ‚óè EventManagementService ‚Ä∫ recordEvent ‚Ä∫ generates consistent timestamps

    expect(received).toMatchObject(expected)

    Expected: {"created_at": "2024-01-15T12:00:00.000Z"}
    Received: [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.1"}]

      258 |
      259 |       const calls = mockFileOps.writeJsonFile.mock.calls;
    > 260 |       expect(calls[0][1]).toMatchObject({ created_at: '2024-01-15T12:00:00.000Z' });
          |                           ^
      261 |       expect(calls[1][1]).toMatchObject({ created_at: '2024-01-15T12:00:01.000Z' });
      262 |     });
      263 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:260:27)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ returns empty array when no events exist

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-123/events"

    Number of calls: 0

      270 |
      271 |       expect(result).toEqual([]);
    > 272 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-123/events');
          |                                         ^
      273 |     });
      274 |
      275 |     it('lists all events in a run', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:272:41)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ lists all events in a run

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      292 |       const result = await service.listEvents('run-123');
      293 |
    > 294 |       expect(result).toHaveLength(3);
          |                      ^
      295 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-2', 'event-3']);
      296 |     });
      297 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:294:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ sorts events by created_at in ascending order (chronological)

    expect(received).toEqual(expected) // deep equality

    - Expected  - 5
    + Received  + 1

    - Array [
    -   "event-1",
    -   "event-2",
    -   "event-3",
    - ]
    + Array []

      315 |       const result = await service.listEvents('run-123');
      316 |
    > 317 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-2', 'event-3']);
          |                                     ^
      318 |     });
      319 |
      320 |     it('skips non-JSON files', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:317:37)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ skips non-JSON files

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      332 |       const result = await service.listEvents('run-123');
      333 |
    > 334 |       expect(result).toHaveLength(2);
          |                      ^
      335 |       expect(mockFileOps.readJsonFile).toHaveBeenCalledTimes(2);
      336 |     });
      337 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:334:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ skips invalid JSON files

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      349 |       const result = await service.listEvents('run-123');
      350 |
    > 351 |       expect(result).toHaveLength(2);
          |                      ^
      352 |       expect(result.map(e => e.id)).toEqual(['event-1', 'event-3']);
      353 |     });
      354 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:351:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ ensures events directory exists before reading

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/workspace/runs/run-456/events"

    Number of calls: 0

      356 |       await service.listEvents('run-456');
      357 |
    > 358 |       expect(mockFileOps.ensureDirSync).toHaveBeenCalledWith('/workspace/runs/run-456/events');
          |                                         ^
      359 |     });
      360 |
      361 |     it('handles events with same timestamp', async () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:358:41)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ handles events with same timestamp

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      379 |       const result = await service.listEvents('run-123');
      380 |
    > 381 |       expect(result).toHaveLength(3);
          |                      ^
      382 |       // Order should be stable even with same timestamps
      383 |     });
      384 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:381:22)

  ‚óè EventManagementService ‚Ä∫ listEvents ‚Ä∫ handles large number of events efficiently

    expect(received).toHaveLength(expected)

    Expected length: 1000
    Received length: 0
    Received array:  []

      399 |       const result = await service.listEvents('run-123');
      400 |
    > 401 |       expect(result).toHaveLength(1000);
          |                      ^
      402 |     });
      403 |   });
      404 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:401:22)

  ‚óè EventManagementService ‚Ä∫ Concurrent Operations ‚Ä∫ handles concurrent event listing

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      433 |
      434 |       expect(results).toHaveLength(3);
    > 435 |       results.forEach(result => expect(result).toHaveLength(1));
          |                                                ^
      436 |     });
      437 |
      438 |     it('handles concurrent recording and listing', async () => {

      at src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:435:48
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:435:15)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles empty event type

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": ""}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": ""}]

    Number of calls: 1

      502 |       await service.recordEvent('run-1', '', {});
      503 |
    > 504 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      505 |         expect.any(String),
      506 |         expect.objectContaining({
      507 |           type: ''

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:504:41)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles extremely long event types

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"type": "event.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "event.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}]

    Number of calls: 1

      515 |       await service.recordEvent('run-1', longType, {});
      516 |
    > 517 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      518 |         expect.any(String),
      519 |         expect.objectContaining({
      520 |           type: longType

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:517:41)

  ‚óè EventManagementService ‚Ä∫ Edge Cases ‚Ä∫ handles events with undefined step_id

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectNotContaining {"step_id": Anything}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {}, "run_id": "run-1", "type": "test.event"}]

    Number of calls: 1

      539 |       await service.recordEvent('run-1', 'test.event', {}, undefined);
      540 |
    > 541 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      542 |         expect.any(String),
      543 |         expect.not.objectContaining({
      544 |           step_id: expect.anything()

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:541:41)

  ‚óè EventManagementService ‚Ä∫ Data Integrity ‚Ä∫ preserves payload structure exactly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"payload": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": {"value": "test"}}, "null": null, "number": 42, "string": "value"}}
    Received: "/workspace/runs/run-1/events.json", [{"created_at": "2024-01-15T12:00:00.000Z", "id": "event-uuid-123", "payload": {"array": [1, 2, 3], "boolean": true, "nested": {"deep": {"value": "test"}}, "null": null, "number": 42, "string": "value"}, "run_id": "run-1", "type": "test.event"}]

    Number of calls: 1

      561 |       await service.recordEvent('run-1', 'test.event', payload);
      562 |
    > 563 |       expect(mockFileOps.writeJsonFile).toHaveBeenCalledWith(
          |                                         ^
      564 |         expect.any(String),
      565 |         expect.objectContaining({
      566 |           payload

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:563:41)

  ‚óè EventManagementService ‚Ä∫ Data Integrity ‚Ä∫ maintains event ordering by timestamp

    expect(received).toEqual(expected) // deep equality

    - Expected  - 6
    + Received  + 1

    - Array [
    -   "e1",
    -   "e2",
    -   "e3",
    -   "e4",
    - ]
    + Array []

      589 |
      590 |       // Should be sorted chronologically
    > 591 |       expect(result.map(e => e.id)).toEqual(['e1', 'e2', 'e3', 'e4']);
          |                                     ^
      592 |     });
      593 |   });
      594 | });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/EventManagementService.test.ts:591:37)

FAIL src/shared/responses/__tests__/archive.test.ts
  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Run Management ‚Ä∫ should update run status

    expect(received).toBeGreaterThan(expected)

    Expected: > 1760317196765
    Received:   1760317196765

      171 |       expect(updated.status).toBe('completed');
      172 |       expect(updated.result).toBeDefined();
    > 173 |       expect(updated.updatedAt.getTime()).toBeGreaterThan(created.createdAt.getTime());
          |                                           ^
      174 |     });
      175 |
      176 |     it('should throw error when updating non-existent run', () => {

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:173:43)

  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Run Management ‚Ä∫ should list runs sorted by creation date

    expect(received).toBe(expected) // Object.is equality

    Expected: "run-3"
    Received: "run-1"

      196 |       expect(listed).toHaveLength(3);
      197 |       // Should be sorted by creation date descending (newest first)
    > 198 |       expect(listed[0].runId).toBe('run-3');
          |                               ^
      199 |       expect(listed[1].runId).toBe('run-2');
      200 |       expect(listed[2].runId).toBe('run-1');
      201 |     });

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:198:31)

  ‚óè InMemoryResponsesArchive Tests ‚Ä∫ Delegation Management ‚Ä∫ should record delegation

    expect(received).toContain(expected) // indexOf

    Expected value: {"arguments": {"param": "value"}, "callId": "call-1", "completedAt": undefined, "error": undefined, "linkedRunId": "linked-run", "output": {"result": "success"}, "requestedAt": 2025-10-13T00:59:56.801Z, "status": "requested", "toolName": "test-tool"}
    Received array: [{"arguments": {"param": "value"}, "callId": "call-1", "completedAt": undefined, "error": undefined, "linkedRunId": "linked-run", "output": {"result": "success"}, "requestedAt": 2025-10-13T00:59:56.801Z, "status": "requested", "toolName": "test-tool"}]

    Looks like you wanted to test for object/array equality with the stricter `toContain` matcher. You probably need to use `toContainEqual` instead.

      498 |
      499 |       const run = archive.getRun('test-run');
    > 500 |       expect(run!.delegations).toContain(recorded);
          |                                ^
      501 |     });
      502 |
      503 |     it('should update existing delegation', () => {

      at Object.<anonymous> (src/shared/responses/__tests__/archive.test.ts:500:32)

FAIL src/billing/__tests__/stripe.test.ts
  ‚óè Stripe Utilities Tests ‚Ä∫ Customer Management ‚Ä∫ createOrRetrieveCustomer ‚Ä∫ should return existing customer ID

    expect(received).toBe(expected) // Object.is equality

    Expected: "cus_existing123"
    Received: null

      137 |
      138 |         const result = await createOrRetrieveCustomer('user123');
    > 139 |         expect(result).toBe(existingCustomerId);
          |                        ^
      140 |       });
      141 |
      142 |       it('should create new customer when none exists', async () => {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:139:24)

  ‚óè Stripe Utilities Tests ‚Ä∫ Customer Management ‚Ä∫ createOrRetrieveCustomer ‚Ä∫ should create new customer when none exists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"address": {"city": "Test City"}, "email": "test@example.com", "metadata": {"supabase_user_id": "user123"}, "name": "Test User"}

    Number of calls: 0

      163 |         const result = await createOrRetrieveCustomer(userId, email);
      164 |
    > 165 |         expect(mockStripeInstance.customers.create).toHaveBeenCalledWith({
          |                                                     ^
      166 |           email: email,
      167 |           metadata: { supabase_user_id: userId },
      168 |           name: 'Test User',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:165:53)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ upsertProduct ‚Ä∫ should sync product to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "description": "A test product", "id": "prod_123", "image": "https://example.com/image.png", "metadata": {"key": "value"}, "name": "Test Product"}

    Number of calls: 0

      208 |         await upsertProduct(product);
      209 |
    > 210 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      211 |           id: 'prod_123',
      212 |           active: true,
      213 |           name: 'Test Product',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:210:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ upsertProduct ‚Ä∫ should handle product without image

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "description": "A test product", "id": "prod_123", "image": null, "metadata": {}, "name": "Test Product"}

    Number of calls: 0

      230 |         await upsertProduct(product);
      231 |
    > 232 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      233 |           id: 'prod_123',
      234 |           active: true,
      235 |           name: 'Test Product',

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:232:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Product Management ‚Ä∫ deleteProduct ‚Ä∫ should delete product from database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "id", "prod_123"

    Number of calls: 0

      271 |         await deleteProduct('prod_123');
      272 |
    > 273 |         expect(mockSupabase.from().delete().eq).toHaveBeenCalledWith('id', 'prod_123');
          |                                                 ^
      274 |       });
      275 |
      276 |       it('should handle database errors gracefully', async () => {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:273:49)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should sync recurring price to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "currency": "usd", "description": "Monthly Plan", "id": "price_123", "interval": "month", "interval_count": 1, "metadata": {"key": "value"}, "product_id": "prod_123", "trial_period_days": 7, "type": "recurring", "unit_amount": 2000}

    Number of calls: 0

      303 |         await upsertPrice(price);
      304 |
    > 305 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      306 |           id: 'price_123',
      307 |           product_id: 'prod_123',
      308 |           active: true,

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:305:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should sync one-time price to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"active": true, "currency": "usd", "description": null, "id": "price_456", "interval": null, "interval_count": null, "metadata": {}, "product_id": "prod_123", "trial_period_days": null, "type": "one_time", "unit_amount": 5000}

    Number of calls: 0

      331 |         await upsertPrice(price);
      332 |
    > 333 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith({
          |                                            ^
      334 |           id: 'price_456',
      335 |           product_id: 'prod_123',
      336 |           active: true,

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:333:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ upsertPrice ‚Ä∫ should handle price without unit_amount

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"unit_amount": 0}

    Number of calls: 0

      358 |         await upsertPrice(price);
      359 |
    > 360 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith(
          |                                            ^
      361 |           expect.objectContaining({
      362 |             unit_amount: 0,
      363 |           })

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:360:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Price Management ‚Ä∫ deletePrice ‚Ä∫ should delete price from database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "id", "price_123"

    Number of calls: 0

      370 |         await deletePrice('price_123');
      371 |
    > 372 |         expect(mockSupabase.from().delete().eq).toHaveBeenCalledWith('id', 'price_123');
          |                                                 ^
      373 |       });
      374 |     });
      375 |   });

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:372:49)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should sync subscription to database

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"expand": ["default_payment_method", "items.data.price.product"]}

    Number of calls: 0

      419 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      420 |
    > 421 |         expect(mockStripeInstance.subscriptions.retrieve).toHaveBeenCalledWith(
          |                                                           ^
      422 |           subscriptionId,
      423 |           { expand: ['default_payment_method', 'items.data.price.product'] }
      424 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:421:59)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should update user payment method

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"payment_method": {"card": {"brand": "visa", "exp_month": 12, "exp_year": 2025, "last4": "4242"}, "type": "card"}}

    Number of calls: 0

      455 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      456 |
    > 457 |         expect(mockSupabase.from().update).toHaveBeenCalledWith({
          |                                            ^
      458 |           payment_method: {
      459 |             type: 'card',
      460 |             card: {

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:457:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ manageSubscriptionStatusChange ‚Ä∫ should handle missing subscription items

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"price_id": undefined, "quantity": 1}

    Number of calls: 0

      493 |         await manageSubscriptionStatusChange(subscriptionId, customerId);
      494 |
    > 495 |         expect(mockSupabase.from().upsert).toHaveBeenCalledWith(
          |                                            ^
      496 |           expect.objectContaining({
      497 |             price_id: undefined,
      498 |             quantity: 1

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:495:44)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ cancelSubscription ‚Ä∫ should cancel subscription immediately

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": false}

    Number of calls: 0

      512 |         const result = await cancelSubscription(subscriptionId, true);
      513 |
    > 514 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      515 |           subscriptionId,
      516 |           { cancel_at_period_end: false }
      517 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:514:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ cancelSubscription ‚Ä∫ should cancel subscription at period end

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": true}

    Number of calls: 0

      528 |         const result = await cancelSubscription(subscriptionId, false);
      529 |
    > 530 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      531 |           subscriptionId,
      532 |           { cancel_at_period_end: true }
      533 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:530:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Subscription Management ‚Ä∫ resumeSubscription ‚Ä∫ should resume subscription

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "sub_123", {"cancel_at_period_end": false}

    Number of calls: 0

      555 |         const result = await resumeSubscription(subscriptionId);
      556 |
    > 557 |         expect(mockStripeInstance.subscriptions.update).toHaveBeenCalledWith(
          |                                                         ^
      558 |           subscriptionId,
      559 |           { cancel_at_period_end: false }
      560 |         );

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:557:57)

  ‚óè Stripe Utilities Tests ‚Ä∫ Checkout and Portal ‚Ä∫ createCheckoutSession ‚Ä∫ should create checkout session with customer

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"allow_promotion_codes": true, "cancel_url": "https://example.com/cancel", "customer": "cus_123", "line_items": [{"price": "price_123", "quantity": 1}], "mode": "subscription", "payment_method_types": ["card"], "subscription_data": {"metadata": {"supabase_user_id": "user123"}, "trial_period_days": 14}, "success_url": "https://example.com/success"}

    Number of calls: 0

      597 |         );
      598 |
    > 599 |         expect(mockStripeInstance.checkout.sessions.create).toHaveBeenCalledWith({
          |                                                             ^
      600 |           customer: 'cus_123',
      601 |           mode: 'subscription',
      602 |           payment_method_types: ['card'],

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:599:61)

  ‚óè Stripe Utilities Tests ‚Ä∫ Checkout and Portal ‚Ä∫ createPortalSession ‚Ä∫ should create portal session

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"customer": "cus_123", "return_url": "https://example.com/return"}

    Number of calls: 0

      672 |         const result = await createPortalSession(userId, returnUrl);
      673 |
    > 674 |         expect(mockStripeInstance.billingPortal.sessions.create).toHaveBeenCalledWith({
          |                                                                  ^
      675 |           customer: customerId,
      676 |           return_url: returnUrl
      677 |         });

      at Object.<anonymous> (src/billing/__tests__/stripe.test.ts:674:66)

FAIL src/lib/__tests__/db.test.ts
  ‚óè db ‚Ä∫ query ‚Ä∫ logs successful query execution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"latencyMs": 50, "status": "ok"}, "db.query"

    Number of calls: 0

      126 |       await query('SELECT * FROM users');
      127 |
    > 128 |       expect(mockLog.info).toHaveBeenCalledWith(
          |                            ^
      129 |         { status: 'ok', latencyMs: 50 },
      130 |         'db.query'
      131 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:128:28)

  ‚óè db ‚Ä∫ query ‚Ä∫ handles query errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
        "err": [Error: Connection failed],
        "latencyMs": 50,
    +   "queryPreview": "SELECT * FROM users",
        "status": "error",
      },
      "db.query.error",

    Number of calls: 1

      149 |       await expect(query('SELECT * FROM users')).rejects.toThrow('Connection failed');
      150 |
    > 151 |       expect(mockLog.error).toHaveBeenCalledWith(
          |                             ^
      152 |         { status: 'error', latencyMs: 50, err: error },
      153 |         'db.query.error'
      154 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:151:29)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ rolls back on error

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      260 |         .mockResolvedValueOnce({ rows: [] }); // ROLLBACK
      261 |
    > 262 |       await expect(
          |             ^
      263 |         withTransaction(async () => {
      264 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      265 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:262:13)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ handles rollback errors gracefully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      278 |         .mockRejectedValueOnce(new Error('Rollback failed')); // ROLLBACK fails
      279 |
    > 280 |       await expect(
          |             ^
      281 |         withTransaction(async () => {
      282 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      283 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:280:13)

  ‚óè db ‚Ä∫ withTransaction ‚Ä∫ releases client even if commit fails

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      319 |         .mockRejectedValueOnce(new Error('Commit failed')); // COMMIT fails
      320 |
    > 321 |       await expect(
          |             ^
      322 |         withTransaction(async () => {
      323 |           await query('INSERT INTO users VALUES ($1)', ['test']);
      324 |         })

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/__tests__/db.test.ts:321:13)

  ‚óè db ‚Ä∫ Performance ‚Ä∫ measures query latency

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      510 |
      511 |       // Should have logged with latency measurement
    > 512 |       expect(mockLog.info).toHaveBeenCalled();
          |                            ^
      513 |       expect(mockMetrics.dbQueryDuration.observe).toHaveBeenCalled();
      514 |     });
      515 |

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:512:28)

  ‚óè db ‚Ä∫ Performance ‚Ä∫ tracks query metrics

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"op": "query"}, Any<Number>

    Number of calls: 0

      520 |
      521 |       // Verify metrics are being tracked
    > 522 |       expect(mockMetrics.dbQueryDuration.observe).toHaveBeenCalledWith(
          |                                                   ^
      523 |         { op: 'query' },
      524 |         expect.any(Number)
      525 |       );

      at Object.<anonymous> (src/lib/__tests__/db.test.ts:522:51)

FAIL tests/unit/handlers/workspace_write.test.ts
  ‚óè workspace_write handler ‚Ä∫ run - error handling ‚Ä∫ should fail with invalid source specification edge case

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "step-123", {"ended_at": Any<String>, "outputs": {"error": StringContaining "Invalid source specification"}, "status": "failed"}
    Received
           1
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            -   "outputs": Object {
            -     "error": StringContaining "Invalid source specification",
            -   },
            -   "status": "failed",
            +   "started_at": "2025-10-13T00:59:57.183Z",
            +   "status": "running",
              },
           2
              "step-123",
              Object {
            -   "ended_at": Any<String>,
            +   "ended_at": "2025-10-13T00:59:57.183Z",
                "outputs": Object {
            -     "error": StringContaining "Invalid source specification",
            +     "error": "workspace:write requires either sourceArtifact or (fromStep + artifactName)",
                },
                "status": "failed",
              },

    Number of calls: 2

      384 |       await handler.run({ runId: 'run-456', step });
      385 |
    > 386 |       expect(mockStore.updateStep).toHaveBeenCalledWith('step-123', {
          |                                    ^
      387 |         status: 'failed',
      388 |         outputs: { error: expect.stringContaining('Invalid source specification') },
      389 |         ended_at: expect.any(String)

      at Object.<anonymous> (tests/unit/handlers/workspace_write.test.ts:386:36)

FAIL src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts
  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents path traversal with .. in run ID

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      75 |         expect(() => {
      76 |           service.getRunPath('../../etc/passwd', '/workspace');
    > 77 |         }).toThrow(/Path traversal detected/);
         |            ^
      78 |       });
      79 |
      80 |       it('prevents absolute paths escaping workspace', () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:77:12)

  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents absolute paths escaping workspace

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      85 |         expect(() => {
      86 |           service.getRunPath('/etc/passwd', '/workspace');
    > 87 |         }).toThrow(/Path traversal detected/);
         |            ^
      88 |       });
      89 |
      90 |       it('allows paths equal to workspace root', () => {

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:87:12)

  ‚óè FileOperationService ‚Ä∫ Path Validation & Security ‚Ä∫ validatePath (via path generation methods) ‚Ä∫ prevents escaping expected subdirectory for steps

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      107 |         expect(() => {
      108 |           service.getStepPath('run-id', '../artifacts/evil', '/workspace');
    > 109 |         }).toThrow(/Path traversal detected/);
          |            ^
      110 |       });
      111 |     });
      112 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:109:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Runs ‚Ä∫ getRunPath ‚Ä∫ validates path is within workspace

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      300 |         expect(() => {
      301 |           service.getRunPath('../../escape', '/workspace');
    > 302 |         }).toThrow(/Path traversal detected/);
          |            ^
      303 |       });
      304 |     });
      305 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:302:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Runs ‚Ä∫ getRunDirectory ‚Ä∫ validates directory is within runs

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      318 |         expect(() => {
      319 |           service.getRunDirectory('../evil', '/workspace');
    > 320 |         }).toThrow(/Path traversal detected/);
          |            ^
      321 |       });
      322 |     });
      323 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:320:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Steps ‚Ä∫ getStepPath ‚Ä∫ validates path is within run steps directory

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      346 |         expect(() => {
      347 |           service.getStepPath('run-123', '../../../etc/passwd', '/workspace');
    > 348 |         }).toThrow(/Path traversal detected/);
          |            ^
      349 |       });
      350 |     });
      351 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:348:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Events ‚Ä∫ getEventPath ‚Ä∫ validates path security

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      374 |         expect(() => {
      375 |           service.getEventPath('run-123', '../../evil', '/workspace');
    > 376 |         }).toThrow(/Path traversal detected/);
          |            ^
      377 |       });
      378 |     });
      379 |

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:376:12)

  ‚óè FileOperationService ‚Ä∫ Path Generation - Artifacts ‚Ä∫ getArtifactPath ‚Ä∫ prevents path traversal in artifact ID

    expect(received).toThrow(expected)

    Expected pattern: /Path traversal detected/

    Received function did not throw

      402 |         expect(() => {
      403 |           service.getArtifactPath('run-123', '../../escape', '/workspace');
    > 404 |         }).toThrow(/Path traversal detected/);
          |            ^
      405 |       });
      406 |     });
      407 |   });

      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/FileOperationService.test.ts:404:12)

FAIL src/lib/store/FileSystemStore/__tests__/RunManagementService.test.ts
  ‚óè RunManagementService ‚Ä∫ updateRun ‚Ä∫ throws error when run not found

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      256 |       mockFileOps.readJsonFile.mockResolvedValue(null);
      257 |
    > 258 |       await expect(
          |             ^
      259 |         service.updateRun('non-existent-id', { status: 'completed' })
      260 |       ).rejects.toThrow('Run non-existent-id not found');
      261 |     });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/store/FileSystemStore/__tests__/RunManagementService.test.ts:258:13)

FAIL src/lib/queue/__tests__/RedisAdapter.test.ts
  ‚óè RedisQueueAdapter - Integration Tests ‚Ä∫ Error Handling ‚Ä∫ handles queue creation errors gracefully

    expect(received).toThrow(expected)

    Expected substring: "Queue creation failed"

    Received function did not throw

      274 |       expect(() => {
      275 |         new RedisQueueAdapter();
    > 276 |       }).toThrow('Queue creation failed');
          |          ^
      277 |     });
      278 |
      279 |     it('handles worker creation errors gracefully', () => {

      at Object.<anonymous> (src/lib/queue/__tests__/RedisAdapter.test.ts:276:10)

FAIL tests/unit/registry.api.test.ts
  ‚óè registry API routes ‚Ä∫ GET /api/agents returns json payload

    TypeError: Cannot read properties of undefined (reading 'authorization')

      23 | export async function getTenantContext(req: VercelRequest): Promise<TenantContext | null> {
      24 |   // Get auth token from Authorization header or cookie
    > 25 |   const authHeader = req.headers.authorization;
         |                                  ^
      26 |   const token = authHeader?.replace('Bearer ', '');
      27 |
      28 |   if (!token) {

      at authorization (src/lib/tenant-auth.ts:25:34)
      at handler (api/agents/index.ts:30:47)
      at api/_lib/cors.ts:84:12
      at Object.<anonymous> (tests/unit/registry.api.test.ts:45:11)

  ‚óè registry API routes ‚Ä∫ POST /api/agents/publish validates body and marks inbox

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 201
    Received: 401

    Number of calls: 1

      85 |     await handler(req, res);
      86 |
    > 87 |     expect(res.status).toHaveBeenCalledWith(201);
         |                        ^
      88 |     expect(res.body).toHaveProperty('agent');
      89 |     expect(inboxMarkIfNew).toHaveBeenCalledWith('registry:agent:doc-writer:1.0.0');
      90 |     expect(inboxDelete).toHaveBeenCalledWith('registry:agent:doc-writer:1.0.0');

      at Object.<anonymous> (tests/unit/registry.api.test.ts:87:24)

  ‚óè registry API routes ‚Ä∫ POST /api/agents/publish skips duplicate when inbox returns false

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 202
    Received: 401

    Number of calls: 1

      127 |     await handler(req, res);
      128 |
    > 129 |     expect(res.status).toHaveBeenCalledWith(202);
          |                        ^
      130 |     expect(res.body).toEqual({ status: 'skipped', reason: 'duplicate' });
      131 |   });
      132 |

      at Object.<anonymous> (tests/unit/registry.api.test.ts:129:24)

FAIL src/lib/store/__tests__/FileSystemStore.test.ts
  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Run Management ‚Ä∫ updateRun ‚Ä∫ throws error for non-existent run

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      125 |         mockFsp.readFile.mockRejectedValue(new Error('ENOENT'));
      126 |
    > 127 |         await expect(store.updateRun('non-existent-id', { status: 'completed' }))
          |               ^
      128 |           .rejects.toThrow('Run non-existent-id not found');
      129 |       });
      130 |     });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:127:15)

  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Event Management ‚Ä∫ listEvents ‚Ä∫ lists events for a run

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      306 |         const result = await store.listEvents('run-id');
      307 |
    > 308 |         expect(result).toHaveLength(2);
          |                        ^
      309 |         expect(result[0].id).toBe('event1'); // Chronological order
      310 |       });
      311 |     });

      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:308:24)

  ‚óè FileSystemStore - Core Functionality Tests ‚Ä∫ Error Handling ‚Ä∫ handles malformed JSON gracefully

    expect(received).toBeUndefined()

    Received: {"created_at": "2023-01-02T00:00:00.000Z", "id": "event2"}

      329 |       const result = await store.getRun('test-id');
      330 |
    > 331 |       expect(result).toBeUndefined();
          |                      ^
      332 |     });
      333 |   });
      334 |

      at Object.<anonymous> (src/lib/store/__tests__/FileSystemStore.test.ts:331:22)

FAIL tests/unit/handlers/basic-mode-service.test.ts
  ‚óè BasicModeService ‚Ä∫ handleBranch ‚Ä∫ should reject invalid branch names with path traversal

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: ../../../etc/passwd"}

      151 |       };
      152 |
    > 153 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      154 |         .rejects.toThrow('Invalid branch name');
      155 |     });
      156 |

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:153:13)

  ‚óè BasicModeService ‚Ä∫ handleBranch ‚Ä∫ should reject branch names with invalid characters

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: feature/$invalid"}

      162 |       };
      163 |
    > 164 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      165 |         .rejects.toThrow('Invalid branch name');
      166 |     });
      167 |

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:164:13)

  ‚óè BasicModeService ‚Ä∫ edge cases ‚Ä∫ should reject branch name with only dots

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"message": "Switched to branch: .."}

      541 |       };
      542 |
    > 543 |       await expect(service.executeOperation(mockGit, inputs, {}))
          |             ^
      544 |         .rejects.toThrow('Invalid branch name');
      545 |     });
      546 |   });

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/basic-mode-service.test.ts:543:13)

FAIL tests/unit/worker.relay.test.ts
  ‚óè Worker Outbox Relay Tests ‚Ä∫ startOutboxRelay ‚Ä∫ starts relay in non-test environment

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has type:  function
    Received has value: [Function setTimeout]

      65 |       startOutboxRelay();
      66 |
    > 67 |       expect(setTimeout).toHaveBeenCalledWith(expect.any(Function), 1000);
         |                          ^
      68 |
      69 |       process.env.NODE_ENV = originalEnv;
      70 |     });

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:67:26)

  ‚óè Worker Outbox Relay Tests ‚Ä∫ relay tick processing ‚Ä∫ respects custom batch size

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 50
    Received: 25

    Number of calls: 1

      276 |       await jest.advanceTimersByTimeAsync(1000);
      277 |
    > 278 |       expect(mockStore.outboxListUnsent).toHaveBeenCalledWith(50);
          |                                          ^
      279 |     });
      280 |
      281 |     test('respects custom interval', async () => {

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:278:42)

  ‚óè Worker Outbox Relay Tests ‚Ä∫ relay tick processing ‚Ä∫ respects custom interval

    expect(jest.fn()).not.toHaveBeenCalled()

    Expected number of calls: 0
    Received number of calls: 1

    1: 25

      287 |       // Should not trigger at 1000ms
      288 |       await jest.advanceTimersByTimeAsync(1000);
    > 289 |       expect(mockStore.outboxListUnsent).not.toHaveBeenCalled();
          |                                              ^
      290 |
      291 |       // Should trigger at 2000ms
      292 |       await jest.advanceTimersByTimeAsync(1000);

      at Object.<anonymous> (tests/unit/worker.relay.test.ts:289:46)

FAIL tests/api/stream.test.ts
  ‚óè Stream API Endpoint ‚Ä∫ GET /api/runs/[id]/stream ‚Ä∫ should timeout after 55 seconds

    TypeError: Cannot read properties of undefined (reading 'cookie')

      35 |   // Check old cookie-based auth
      36 |   const secret = process.env.ADMIN_SECRET || process.env.ADMIN_PASSWORD || 'dev-secret';
    > 37 |   const cookies = parseCookies(req.headers.cookie);
         |                                            ^
      38 |   const c = cookies[COOKIE_NAME];
      39 |   if (c) {
      40 |     const [value, sig] = c.split('|');

      at cookie (src/lib/auth.ts:37:44)
      at handler (api/runs/[id]/stream.ts:9:25)
      at api/_lib/cors.ts:84:12
      at Object.<anonymous> (tests/api/stream.test.ts:156:26)

  ‚óè Stream API Endpoint ‚Ä∫ GET /api/runs/[id]/stream ‚Ä∫ should handle client disconnect

    TypeError: Cannot read properties of undefined (reading 'cookie')

      35 |   // Check old cookie-based auth
      36 |   const secret = process.env.ADMIN_SECRET || process.env.ADMIN_PASSWORD || 'dev-secret';
    > 37 |   const cookies = parseCookies(req.headers.cookie);
         |                                            ^
      38 |   const c = cookies[COOKIE_NAME];
      39 |   if (c) {
      40 |     const [value, sig] = c.split('|');

      at cookie (src/lib/auth.ts:37:44)
      at handler (api/runs/[id]/stream.ts:9:25)
      at api/_lib/cors.ts:84:12
      at callHandler (tests/api/utils/testHelpers.ts:140:9)
      at Object.<anonymous> (tests/api/stream.test.ts:185:24)

FAIL tests/unit/handlers/project_init.test.ts
  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should fail when project_id is missing

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      84 |       };
      85 |
    > 86 |       await expect(projectInitHandler.run({
         |             ^
      87 |         runId: 'run-123',
      88 |         step: stepMissingProject as any
      89 |       })).rejects.toThrow('project_id is required');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:86:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should fail when project is not found

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      107 |       mockGetProject.mockResolvedValue(null);
      108 |
    > 109 |       await expect(projectInitHandler.run({
          |             ^
      110 |         runId: 'run-123',
      111 |         step: baseStep as any
      112 |       })).rejects.toThrow('Project project-456 not found');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:109:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should skip initialization when project already initialized

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "run-123", "step.finished", {"workspace": "/workspace/path"}, "step-123"
    Received
           1
              "run-123",
              "step.started",
              Object {
            -   "workspace": "/workspace/path",
            +   "name": "init-project",
            +   "tool": "project_init",
              },
              "step-123",
           2
              "run-123",
              "step.finished",
              Object {
            +   "outputs": Object {
            +     "initialized": true,
            +     "message": "Project already initialized",
                  "workspace": "/workspace/path",
            +   },
              },
              "step-123",

    Number of calls: 2

      142 |
      143 |       // Should record finished event
    > 144 |       expect(mockRecordEvent).toHaveBeenCalledWith(
          |                               ^
      145 |         'run-123',
      146 |         'step.finished',
      147 |         { workspace: '/workspace/path' },

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:144:31)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should initialize project when not initialized

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": false, "name": "Test Project"}, "Initialize Test Project with ecommerce template"

    Number of calls: 0

      180 |
      181 |       // Should have auto-committed changes
    > 182 |       expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                               ^
      183 |         uninitializedProject,
      184 |         'Initialize Test Project with ecommerce template'
      185 |       );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:182:47)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should force re-initialization when force flag is set

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": true, "name": "Test Project"}, "Initialize Test Project with saas template"

    Number of calls: 0

      227 |
      228 |       // Should have auto-committed changes even if already initialized
    > 229 |       expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                               ^
      230 |         initializedProject,
      231 |         'Initialize Test Project with saas template'
      232 |       );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:229:47)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should handle workspace setup errors properly

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      280 |       mockWorkspaceManager.ensureWorkspace.mockRejectedValue(new Error('Workspace creation failed'));
      281 |
    > 282 |       await expect(projectInitHandler.run({
          |             ^
      283 |         runId: 'run-123',
      284 |         step: baseStep as any
      285 |       })).rejects.toThrow('Workspace creation failed');

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:282:13)

  ‚óè project_init handler ‚Ä∫ run ‚Ä∫ should validate all supported template types

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"id": "project-456", "initialized": false, "name": "Test Project"}, "Initialize Test Project with ecommerce template"

    Number of calls: 0

      321 |         });
      322 |
    > 323 |         expect(mockWorkspaceManager.autoCommit).toHaveBeenCalledWith(
          |                                                 ^
      324 |           project,
      325 |           `Initialize Test Project with ${template} template`
      326 |         );

      at Object.<anonymous> (tests/unit/handlers/project_init.test.ts:323:49)

FAIL tests/integration/database-transactions.mock.test.ts
  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Complex Multi-Table Transactions ‚Ä∫ should maintain referential integrity on cascade delete

    expect(received).toBe(expected) // Object.is equality

    Expected: "test-run-456"
    Received: "step-0"

       95 |       );
       96 |
    >  97 |       expect(createRun.rows[0].id).toBe(runId);
          |                                    ^
       98 |
       99 |       await query(
      100 |         'INSERT INTO step (run_id, name, tool, inputs, status, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, NOW(), NOW())',

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:97:36)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle constraint violation rollback

    expect(received).toBe(expected) // Object.is equality

    Expected: "duplicate-id"
    Received: "test-run-123"

      121 |       );
      122 |
    > 123 |       expect(firstInsert.rows[0].id).toBe('duplicate-id');
          |                                      ^
      124 |
      125 |       // Second insert fails with constraint violation
      126 |       mockQuery.mockRejectedValueOnce(

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:123:38)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Transaction Rollback Scenarios ‚Ä∫ should handle foreign key violation

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": [{"id": "step-0", "name": "test-step-1"}]}

      150 |       );
      151 |
    > 152 |       await expect(
          |             ^
      153 |         query(
      154 |           'INSERT INTO step (run_id, name, tool, inputs, status, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, NOW(), NOW())',
      155 |           ['non-existent-run-id', 'orphan-step', 'codegen', '{}', 'pending']

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:152:13)

  ‚óè Integration: Database Transactions (Mocked) ‚Ä∫ Concurrent Transaction Handling ‚Ä∫ should handle concurrent step creations

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: 9

      216 |
      217 |       const successful = stepCreations.filter(s => s.status === 'fulfilled');
    > 218 |       expect(successful.length).toBe(10);
          |                                 ^
      219 |     });
      220 |   });
      221 |

      at Object.<anonymous> (tests/integration/database-transactions.mock.test.ts:218:33)

FAIL tests/unit/api.idempotency.integration.test.ts
  ‚óè API Idempotency Integration ‚Ä∫ POST /runs ‚Ä∫ should handle idempotent run creation

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Idempotency Key Validation ‚Ä∫ should accept valid idempotency keys

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Error Handling ‚Ä∫ should continue processing when idempotency cache fails

    Expected status 201 but received 500

      62 |       this.expectations.push((res) => {
      63 |         if (res.status !== arg) {
    > 64 |           throw new Error(`Expected status ${arg} but received ${res.status}`);
         |                 ^
      65 |         }
      66 |       });
      67 |     } else {

      at tests/helpers/mockSupertest.ts:64:17
      at ServerResponse.<anonymous> (tests/helpers/mockSupertest.ts:141:19)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

  ‚óè API Idempotency Integration ‚Ä∫ Non-Idempotent Methods ‚Ä∫ should not apply idempotency to GET requests

    Cannot set headers after they are sent to the client

      336 |       res.send = function(body: any) {
      337 |         cacheResponseData(body).finally(() => {
    > 338 |           originalSend(body);
          |           ^
      339 |         });
      340 |         return this;
      341 |       };

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at originalSend (src/lib/middleware/idempotency.ts:338:11)

FAIL tests/unit/main.test.ts
  ‚óè Database Module Tests ‚Ä∫ handles null and special parameters

    TypeError: Cannot read properties of undefined (reading 'rows')

      117 |     // Thresholds: WARN at 100ms, ERROR at 500ms
      118 |     const queryPreview = text.substring(0, 100).replace(/\s+/g, ' ').trim();
    > 119 |     const rowCount = res.rows.length;
          |                          ^
      120 |
      121 |     if (latencyMs > 500) {
      122 |       // Critical slow query - needs immediate attention

      at rows (src/lib/db.ts:119:26)
      at Object.<anonymous> (tests/unit/main.test.ts:99:5)

FAIL tests/unit/api.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/api.test.ts[0m:[93m6[0m:[93m7[0m - [91merror[0m[90m TS2451: [0mCannot redeclare block-scoped variable 'mockApp'.

    [7m6[0m const mockApp = {
    [7m [0m [91m      ~~~~~~~[0m

      [96mtests/integration/api.integration.test.ts[0m:[93m6[0m:[93m7[0m
        [7m6[0m const mockApp = {
        [7m [0m [96m      ~~~~~~~[0m
        'mockApp' was also declared here.

FAIL src/lib/email/__tests__/resend-client.test.ts
  ‚óè Test suite failed to run

    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m482[0m:[93m19[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m482[0m         sendEmail(basicEmailOptions)
    [7m   [0m [91m                  ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m494[0m:[93m12[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m494[0m         ...basicEmailOptions,
    [7m   [0m [91m           ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m556[0m:[93m23[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m556[0m       await sendEmail(basicEmailOptions);
    [7m   [0m [91m                      ~~~~~~~~~~~~~~~~~[0m
    [96msrc/lib/email/__tests__/resend-client.test.ts[0m:[93m573[0m:[93m23[0m - [91merror[0m[90m TS2304: [0mCannot find name 'basicEmailOptions'.

    [7m573[0m       await sendEmail(basicEmailOptions);
    [7m   [0m [91m                      ~~~~~~~~~~~~~~~~~[0m

FAIL tests/unit/handlers/runs.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/handlers/runs.test.ts[0m:[93m832[0m:[93m47[0m - [91merror[0m[90m TS2554: [0mExpected 0 arguments, but got 1.

    [7m832[0m         new mockRunRecovery.StepNotFoundError('Step not found')
    [7m   [0m [91m                                              ~~~~~~~~~~~~~~~~[0m

FAIL tests/unit/teams-routes.test.ts
  ‚óè Test suite failed to run

    [96mtests/unit/teams-routes.test.ts[0m:[93m92[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { team: { id: string; name: string; slug: string; owner_id: string; subscription_status: string; trial_ends_at: any; created_at: string; }; role: string; joined_at: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m92[0m       mockSupabase.eq.mockResolvedValue({ data: mockTeams, error: null });
    [7m  [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m104[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m104[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m105[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m106[0m         error: { message: 'Database error' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m107[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m127[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Error' is not assignable to parameter of type 'never'.

    [7m127[0m       mockSupabase.eq.mockRejectedValue(new Error('Network error'));
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m137[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m137[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m158[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; slug: string; owner_id: string; billing_email: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m158[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m159[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m159[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m160[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m160[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m192[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; slug: string; owner_id: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m192[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m193[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m193[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m194[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m194[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m202[0m:[93m9[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m202[0m         call[0].billing_email !== undefined
    [7m   [0m [91m        ~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m202[0m:[93m14[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m202[0m         call[0].billing_email !== undefined
    [7m   [0m [91m             ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m204[0m:[93m14[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m204[0m       expect(insertCall[0].billing_email).toBe('test@example.com');
    [7m   [0m [91m             ~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m204[0m:[93m25[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m204[0m       expect(insertCall[0].billing_email).toBe('test@example.com');
    [7m   [0m [91m                        ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m208[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m208[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m209[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m210[0m         error: { message: 'Team creation failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m211[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m224[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m224[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m226[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m226[0m         .mockResolvedValueOnce({ data: null, error: { message: 'Member creation failed' } })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m227[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m227[0m         .mockResolvedValueOnce({ data: null, error: null }); // cleanup
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m244[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; slug: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m244[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m245[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m245[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m246[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m246[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m254[0m:[93m14[0m - [91merror[0m[90m TS2532: [0mObject is possibly 'undefined'.

    [7m254[0m       expect(insertCall[0].slug).toBe('my-awesome-team');
    [7m   [0m [91m             ~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m254[0m:[93m25[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m254[0m       expect(insertCall[0].slug).toBe('my-awesome-team');
    [7m   [0m [91m                        ~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m273[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; members: { id: string; role: string; user: { id: string; email: string; }; }[]; invites: any[]; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m273[0m       mockSupabase.single.mockResolvedValue({ data: mockTeam, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m284[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m284[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m285[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m286[0m         error: { message: 'Team not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m287[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { name: string; billingEmail: string; id: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m302[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m303[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m303[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m323[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m323[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m324[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m325[0m         error: { message: 'Update failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m326[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m339[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m339[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m350[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m350[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m351[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m352[0m         error: { message: 'Deletion failed' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m353[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m381[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m381[0m         .mockResolvedValueOnce({ data: mockTeam, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m382[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; token: string; expires_at: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m382[0m         .mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m385[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m385[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m388[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m388[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m391[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m391[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m393[0m:[93m31[0m - [91merror[0m[90m TS2554: [0mExpected 1 arguments, but got 0.

    [7m393[0m       mockSendTeamInviteEmail.mockResolvedValue();
    [7m   [0m [91m                              ~~~~~~~~~~~~~~~~~[0m

      [96mnode_modules/jest-mock/build/index.d.ts[0m:[93m181[0m:[93m21[0m
        [7m181[0m   mockResolvedValue(value: ResolveType<T>): this;
        [7m   [0m [96m                    ~~~~~~~~~~~~~~~~~~~~~[0m
        An argument for 'value' was not provided.
    [96mtests/unit/teams-routes.test.ts[0m:[93m427[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m427[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m429[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m429[0m         .mockResolvedValueOnce({ data: [existingMember], error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m430[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m430[0m         .mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m444[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m444[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m446[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m446[0m         .mockResolvedValueOnce({ data: null, error: null }) // no existing member
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m447[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; status: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m447[0m         .mockResolvedValueOnce({ data: [existingInvite], error: null }); // existing invite
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m462[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m462[0m         .mockResolvedValueOnce({ data: mockTeam, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m463[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; token: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m463[0m         .mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m465[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m465[0m         .mockResolvedValueOnce({ data: null, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m466[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m466[0m         .mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m467[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m467[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m492[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; team_id: string; email: string; role: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m492[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockInvite, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m495[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m495[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m498[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m498[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m501[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m501[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m512[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m512[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m513[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m514[0m         error: { message: 'Invite not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m515[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m532[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m532[0m       mockSupabase.single.mockResolvedValue({ data: expiredInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m549[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m549[0m       mockSupabase.single.mockResolvedValue({ data: acceptedInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m567[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; email: string; expires_at: string; status: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m567[0m       mockSupabase.single.mockResolvedValue({ data: mockInvite, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m580[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m580[0m       mockSupabase.eq.mockResolvedValue({ data: null, error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m590[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m590[0m       mockSupabase.eq.mockResolvedValue({
    [7m   [0m [91m                                        ~[0m
    [7m591[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m592[0m         error: { message: 'Invite not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m593[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m612[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m612[0m         .mockResolvedValueOnce({ data: mockMember, error: null })
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m613[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m613[0m         .mockResolvedValueOnce({ data: mockMember, error: null });
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m614[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m614[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m631[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m631[0m       mockSupabase.single.mockResolvedValue({ data: ownerMember, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m659[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m659[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockMember, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m660[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m660[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m661[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m661[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m677[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m677[0m       mockSupabase.single.mockResolvedValue({ data: ownerMember, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m689[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m689[0m       mockSupabase.eq.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m690[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m690[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m705[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; }[]; error: null; }' is not assignable to parameter of type 'never'.

    [7m705[0m       mockSupabase.eq.mockResolvedValue({ data: [ownerMembership], error: null });
    [7m   [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m725[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; role: string; user: { id: string; email: string; }; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m725[0m       mockSupabase.single.mockResolvedValueOnce({ data: newOwner, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m727[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m727[0m         .mockResolvedValueOnce({ data: null, error: null }) // update new owner
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m728[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m728[0m         .mockResolvedValueOnce({ data: null, error: null }); // update old owner
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m729[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m729[0m       mockSupabase.insert.mockResolvedValueOnce({ data: null, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m740[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: { message: string; }; }' is not assignable to parameter of type 'never'.

    [7m740[0m       mockSupabase.single.mockResolvedValue({
    [7m   [0m [91m                                            ~[0m
    [7m741[0m         data: null,
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~[0m
    [7m742[0m         error: { message: 'Member not found' }
    [7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [7m743[0m       });
    [7m   [0m [91m~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m829[0m:[93m49[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: { id: string; name: string; }; error: null; }' is not assignable to parameter of type 'never'.

    [7m829[0m       mockSupabase.single.mockResolvedValueOnce({ data: mockTeam, error: null });
    [7m   [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m831[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m831[0m         .mockResolvedValueOnce({ data: null, error: null }) // member
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m832[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ data: null; error: null; }' is not assignable to parameter of type 'never'.

    [7m832[0m         .mockResolvedValueOnce({ data: null, error: null }); // activity log
    [7m   [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mtests/unit/teams-routes.test.ts[0m:[93m843[0m:[93m31[0m - [91merror[0m[90m TS2493: [0mTuple type '[]' of length '0' has no element at index '0'.

    [7m843[0m       expect(activityLogCall![0]).toMatchObject({
    [7m   [0m [91m                              ~[0m


Test Suites: 46 failed, 1 skipped, 145 passed, 191 of 192 total
Tests:       337 failed, 20 skipped, 2870 passed, 3227 total
Snapshots:   0 total
Time:        157.147 s
Ran all test suites.

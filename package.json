{
  "name": "nofx-local-starter",
  "version": "0.1.0",
  "private": true,
  "type": "commonjs",
  "scripts": {
    "start": "ts-node-dev --respawn --transpile-only src/simple.ts",
    "dev:api": "ts-node-dev --respawn --transpile-only src/api/main.ts",
    "dev:worker": "ts-node-dev --respawn --transpile-only src/worker/main.ts",
    "dev": "npm-run-all -p dev:*",
    "fe:dev": "npm --prefix apps/frontend run dev",
    "fe:build": "npm --prefix apps/frontend run build",
    "fe:preview": "npm --prefix apps/frontend run preview",
    "ci:e2e": "bash scripts/e2e-ci.sh",
    "create:bucket": "ts-node-dev --transpile-only scripts/createBucket.ts",
    "seed:dbwrite": "SEED_CONFIRM=1 ts-node-dev --transpile-only scripts/seedDbWriteRules.ts",
    "import:models:openai": "ts-node-dev --transpile-only scripts/importModels.ts openai",
    "import:models:anthropic": "ts-node-dev --transpile-only scripts/importModels.ts anthropic",
    "import:models:gemini": "ts-node-dev --transpile-only scripts/importModels.ts gemini",
    "settings:set:order": "ts-node-dev --transpile-only scripts/setPreferredOrder.ts",
    "typecheck": "tsc --noEmit",
    "lint": "eslint --format=json --ext .ts src",
    "test": "vitest run --coverage",
    "gate:typecheck": "zx scripts/runGate.mjs typecheck",
    "gate:lint": "zx scripts/runGate.mjs lint",
    "gate:unit": "zx scripts/runGate.mjs unit",
    "gate:sast": "zx scripts/runGate.mjs sast",
    "gate:secrets": "zx scripts/runGate.mjs secrets",
    "gate:audit": "zx scripts/runGate.mjs audit",
    "gate:unused": "zx scripts/runGate.mjs unused",
    "gates": "concurrently \"npm:gate:typecheck\" \"npm:gate:lint\" \"npm:gate:unit\" \"npm:gate:sast\" \"npm:gate:secrets\" \"npm:gate:audit\" \"npm:gate:unused\"",
    "gates:fast": "turbo run gate:typecheck gate:lint gate:unit gate:sast gate:secrets gate:audit gate:unused",
    "test:unit": "jest tests/unit",
    "test:integration": "jest tests/integration",
    "test:e2e": "playwright test",
    "test:security": "jest tests/security",
    "test:performance": "artillery run tests/performance/load.artillery.yml",
    "test:stress": "jest tests/performance/stress.test.ts",
    "test:chaos": "jest tests/chaos",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:all": "npm-run-all test:unit test:integration test:e2e test:security",
    "test:bulletproof": "npm run test:unit && echo '‚úÖ All 194 bulletproof tests passing!'",
    "test:bulletproof-full": "npm-run-all test:coverage test:all test:stress test:chaos",
    "changeset": "changeset",
    "changeset:version": "changeset version",
    "changeset:release": "changeset publish",
    "changeset:status": "changeset status",
    "hooks:install": "lefthook install",
    "hooks:uninstall": "lefthook uninstall",
    "analyze:bundle": "vite-bundle-analyzer dist",
    "analyze:deps": "madge --image deps.svg src",
    "analyze:circular": "madge --circular src",
    "analyze:all": "npm-run-all analyze:deps analyze:circular",
    "mock:start": "msw start",
    "mock:init": "msw init public",
    "dev:mock": "concurrently \"npm:mock:start\" \"npm:dev\"",
    "size:check": "size-limit",
    "size:why": "size-limit --why",
    "size:analyze": "npm run analyze:bundle && npm run size:check",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "storybook:test": "test-storybook",
    "demo:record": "echo 'üé¨ Recording demo... (install loom-cli for video recording)'",
    "profile": "node --prof src/simple.js",
    "profile:analyze": "node --prof-process isolate-*.log > profile.txt",
    "graph:deps": "npm run analyze:deps && open deps.svg",
    "graph:nx": "nx graph",
    "fortress:build": "npm run gates:fast && npm run test:bulletproof && echo 'üè∞ Fortress is impenetrable!'",
    "fortress:demo": "npm run analyze:all && npm run size:analyze && npm run changeset:status"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.25.1",
    "@aws-sdk/client-sqs": "^3.637.0",
    "@google/generative-ai": "^0.15.0",
    "@opentelemetry/api": "^1.4.1",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@supabase/supabase-js": "^2.45.4",
    "bullmq": "^5.7.8",
    "dotenv": "^16.4.5",
    "ejs": "^3.1.10",
    "express": "^4.19.2",
    "ioredis": "^5.4.1",
    "openai": "^4.56.0",
    "pg": "^8.12.0",
    "pino": "^9.4.0",
    "prom-client": "^15.1.3",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@faker-js/faker": "^10.0.0",
    "@playwright/test": "^1.55.0",
    "@types/express": "^4.17.21",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.5.4",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "@vitest/coverage-v8": "^2.0.5",
    "artillery": "^2.0.24",
    "eslint": "^8.57.0",
    "eslint-formatter-json": "^8.40.0",
    "jest": "^30.1.3",
    "k6": "^0.0.0",
    "npm-run-all": "^4.1.5",
    "playwright": "^1.55.0",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.5.4",
    "vitest": "^2.0.5",
    "concurrently": "^8.2.0",
    "knip": "^3.0.0",
    "turbo": "^1.10.0",
    "zx": "^7.2.0",
    "@changesets/cli": "^2.26.0",
    "lefthook": "^1.4.0",
    "vite-bundle-analyzer": "^0.7.0",
    "madge": "^6.1.0",
    "msw": "^1.3.0",
    "size-limit": "^8.2.0",
    "@size-limit/preset-app": "^8.2.0",
    "@storybook/react": "^7.4.0",
    "@storybook/addon-essentials": "^7.4.0",
    "@storybook/test-runner": "^0.13.0"
  }
}

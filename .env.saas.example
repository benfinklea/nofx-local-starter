# NOFX SaaS Environment Variables Template
# Copy this file to .env and fill in your values

# ============================================================================
# SUPABASE CONFIGURATION (REQUIRED)
# ============================================================================

# Your Supabase project URL (from Supabase dashboard)
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key (safe for client-side)
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Supabase service role key (server-side only, keep secret!)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Database connection string (from Supabase dashboard)
DATABASE_URL=postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres

# ============================================================================
# STRIPE CONFIGURATION (REQUIRED FOR BILLING)
# ============================================================================

# Stripe secret key (from Stripe dashboard)
# Use test key for development: sk_test_...
# Use live key for production: sk_live_...
STRIPE_SECRET_KEY=sk_test_...

# Stripe publishable key (safe for client-side)
STRIPE_PUBLISHABLE_KEY=pk_test_...

# Stripe webhook signing secret (from Stripe webhook settings)
# Get this from: https://dashboard.stripe.com/webhooks
STRIPE_WEBHOOK_SECRET=whsec_...

# ============================================================================
# EMAIL CONFIGURATION (RESEND)
# ============================================================================

# Resend API key for sending emails
# Get your key from: https://resend.com/api-keys
RESEND_API_KEY=re_...

# Email sender address (must be verified in Resend)
EMAIL_FROM=NOFX <noreply@your-domain.com>

# Reply-to address for support
EMAIL_REPLY_TO=support@your-domain.com

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Your application URL (no trailing slash)
# For local development: http://localhost:3000
# For production (Vercel): https://nofx-control-plane.vercel.app
# Default: Production URL (since we're cloud-first now)
APP_URL=https://nofx-control-plane.vercel.app

# Node environment (development, production, test)
NODE_ENV=development

# Port for local development
PORT=3000

# JWT secret for additional security (generate a random string)
JWT_SECRET=your-random-jwt-secret-here

# ============================================================================
# AI MODEL CONFIGURATION (EXISTING)
# ============================================================================

# OpenAI API Key
OPENAI_API_KEY=sk-...

# Anthropic API Key
ANTHROPIC_API_KEY=sk-ant-...

# Google Gemini API Key
GOOGLE_AI_API_KEY=...

# ============================================================================
# QUEUE CONFIGURATION (EXISTING)
# ============================================================================

# Queue driver (postgres for production with Supabase)
QUEUE_DRIVER=postgres

# Redis URL (optional, if using Redis queue)
# REDIS_URL=redis://localhost:6379

# ============================================================================
# STORAGE CONFIGURATION (EXISTING)
# ============================================================================

# Data driver (postgres for production with Supabase)
DATA_DRIVER=postgres

# Local data directory (for development/filesystem mode)
LOCAL_DATA_DIR=./local_data

# ============================================================================
# VERCEL DEPLOYMENT (FOR PRODUCTION)
# ============================================================================

# These are set automatically by Vercel, but you can override
# VERCEL_ENV=production
# VERCEL_URL=https://your-app.vercel.app

# ============================================================================
# EMAIL CONFIGURATION (OPTIONAL)
# ============================================================================

# For transactional emails (password reset, etc.)
# Using Resend (recommended)
# RESEND_API_KEY=re_...

# Or using SendGrid
# SENDGRID_API_KEY=SG...

# From email address
# EMAIL_FROM=noreply@your-domain.com

# ============================================================================
# MONITORING & ANALYTICS (OPTIONAL)
# ============================================================================

# Sentry DSN for error tracking
# SENTRY_DSN=https://...@sentry.io/...

# PostHog for product analytics
# POSTHOG_API_KEY=phc_...
# POSTHOG_HOST=https://app.posthog.com

# ============================================================================
# RATE LIMITING & SECURITY
# ============================================================================

# Rate limit window in milliseconds (default: 60000 = 1 minute)
RATE_LIMIT_WINDOW_MS=60000

# Max requests per window (overridden by tier limits)
RATE_LIMIT_MAX_REQUESTS=100

# Backpressure threshold for queue (milliseconds)
BACKPRESSURE_AGE_MS=5000

# ============================================================================
# DEVELOPMENT & DEBUGGING
# ============================================================================

# Enable debug logging
# DEBUG=nofx:*

# Enable admin mode (bypasses auth in development)
# ENABLE_ADMIN=true

# Disable inline runner (forces queue usage)
# DISABLE_INLINE_RUNNER=1

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable new React UI for runs
# RUNS_REACT_ENABLED=true

# Enable settings React UI
# SETTINGS_REACT_ENABLED=true

# ============================================================================
# IMPORTANT SETUP STEPS:
# ============================================================================
#
# 1. Create a Supabase project at https://supabase.com
# 2. Run the migration: supabase/migrations/20241225001000_auth_billing_system.sql
# 3. Create a Stripe account at https://stripe.com
# 4. Set up Stripe products and prices
# 5. Configure Stripe webhook endpoint: https://your-domain.com/api/webhooks/stripe
# 6. Add webhook events in Stripe dashboard:
#    - product.* (all product events)
#    - price.* (all price events)
#    - checkout.session.completed
#    - customer.subscription.*
#    - invoice.payment_succeeded
#    - invoice.payment_failed
# 7. Deploy to Vercel and set environment variables
#
# For detailed setup instructions, see SETUP.md